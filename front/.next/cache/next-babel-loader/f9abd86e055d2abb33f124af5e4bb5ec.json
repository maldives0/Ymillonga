{"ast":null,"code":"import faker from 'faker';\nimport produce from 'immer';\nimport { nanoid } from 'nanoid';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    //게시글 아이디\n    User: {\n      //게시글 작성자 \n      id: 1,\n      nickname: 'momo'\n    },\n    content: '첫 번째 게시글 #first',\n    Images: [{\n      src: faker.image.image()\n    }, {\n      src: faker.image.image()\n    }, {\n      src: faker.image.image()\n    }],\n    Likers: [],\n    Comments: [{\n      User: {\n        id: nanoid(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  }],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n}; // mainPosts: [{\n//     id: 1,//게시글 아이디\n//     User: {//게시글 작성자 \n//         id: 1,\n//         nickname: 'momo',\n//     },\n//     content: '첫 번째 게시글 #first',\n//     Images: [{\n//         src: faker.image.image(),\n//     },\n//     {\n//         src: faker.image.image(),\n//     }, {\n//         src: faker.image.image(),\n//     }\n//     ],\n//     Likers: [],\n//     Comments: [{\n//         User: {\n//             id: nanoid(),\n//             nickname: faker.name.findName(),\n//         },\n//         content: faker.lorem.sentence(),\n//     }],\n// }],\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'momo'\n    },\n    Images: [{\n      src: faker.image.image()\n    }],\n    Comments: [{\n      User: {\n        id: nanoid(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n};\n\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: nanoid(),\n      User: {\n        id: nanoid(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        User: {\n          id: nanoid(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n};\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.imagePaths = []; //대기중 파일 목록 없애기\n\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = true;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts.filter(function (v, i) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = true;\n        draft.removePostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/reducers/post.js"],"names":["faker","produce","nanoid","initialState","mainPosts","id","User","nickname","content","Images","src","image","Likers","Comments","name","findName","lorem","sentence","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","dummyPost","data","generateDummyPost","number","Array","fill","map","paragraph","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","reducer","state","action","draft","type","unshift","error","filter","v","i"],"mappings":"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","sourcesContent":["import faker from 'faker';\r\nimport produce from 'immer';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport const initialState = {\r\n\r\n    mainPosts: [\r\n        {\r\n            id: 1,//게시글 아이디\r\n            User: {//게시글 작성자 \r\n                id: 1,\r\n                nickname: 'momo',\r\n            },\r\n            content: '첫 번째 게시글 #first',\r\n            Images: [{\r\n                src: faker.image.image(),\r\n            },\r\n            {\r\n                src: faker.image.image(),\r\n            }, {\r\n                src: faker.image.image(),\r\n            }\r\n            ],\r\n            Likers: [],\r\n            Comments: [{\r\n                User: {\r\n                    id: nanoid(),\r\n                    nickname: faker.name.findName(),\r\n                },\r\n                content: faker.lorem.sentence(),\r\n            }],\r\n        }\r\n    ],\r\n    imagePaths: [],\r\n    hasMorePosts: true,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n\r\n};\r\n// mainPosts: [{\r\n//     id: 1,//게시글 아이디\r\n//     User: {//게시글 작성자 \r\n//         id: 1,\r\n//         nickname: 'momo',\r\n//     },\r\n//     content: '첫 번째 게시글 #first',\r\n//     Images: [{\r\n//         src: faker.image.image(),\r\n//     },\r\n//     {\r\n//         src: faker.image.image(),\r\n//     }, {\r\n//         src: faker.image.image(),\r\n//     }\r\n//     ],\r\n//     Likers: [],\r\n//     Comments: [{\r\n//         User: {\r\n//             id: nanoid(),\r\n//             nickname: faker.name.findName(),\r\n//         },\r\n//         content: faker.lorem.sentence(),\r\n//     }],\r\n// }],\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content: data.content,\r\n    User: {\r\n        id: 1,\r\n        nickname: 'momo',\r\n    },\r\n    Images: [{\r\n        src: faker.image.image(),\r\n    }],\r\n    Comments: [{\r\n        User: {\r\n            id: nanoid(),\r\n            nickname: faker.name.findName(),\r\n        },\r\n        content: faker.lorem.sentence(),\r\n    }],\r\n});\r\nexport const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n    id: nanoid(),\r\n    User: {\r\n        id: nanoid(),\r\n        nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.paragraph(),\r\n    Images: [{\r\n        src: faker.image.image(),\r\n    }],\r\n    Comments: [{\r\n        User: {\r\n            id: nanoid(),\r\n            nickname: faker.name.findName(),\r\n        },\r\n        content: faker.lorem.sentence(),\r\n    }],\r\n}));\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST:\r\n            draft.addPostLoading = true;\r\n            draft.addPostDone = false;\r\n            draft.addPostError = null;\r\n            break;\r\n        case ADD_POST_SUCCESS:\r\n            draft.addPostLoading = false;\r\n            draft.addPostDone = true;\r\n            draft.mainPosts.unshift(dummyPost(action.data));\r\n            draft.imagePaths = [];//대기중 파일 목록 없애기\r\n            break;\r\n        case ADD_POST_FAILURE:\r\n            draft.addPostLoading = true;\r\n            draft.addPostError = action.error;\r\n            break;\r\n        case REMOVE_POST_REQUEST:\r\n            draft.removePostLoading = true;\r\n            draft.removePostDone = false;\r\n            draft.removePostError = null;\r\n            break;\r\n        case REMOVE_POST_SUCCESS:\r\n            draft.removePostLoading = false;\r\n            draft.removePostDone = true;\r\n            draft.mainPosts.filter((v, i) => v.id !== action.data);\r\n            break;\r\n        case REMOVE_POST_FAILURE:\r\n            draft.removePostLoading = true;\r\n            draft.removePostError = action.error;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}