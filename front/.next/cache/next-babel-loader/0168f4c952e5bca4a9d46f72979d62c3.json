{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"c:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostForm.js\";\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  const imageInput = useRef();\n  useEffect(() => {\n    if (addPostDone) setText('');\n  }, [addPostDone]);\n  const onChangeImages = useCallback(e => {\n    console.log('clickImgInfo', e.target.files); // const imageFormData = new FormData();\n    // [].forEach.call(e.target.files, (f) => {\n    //     imageFormData.append('image', f);\n    // })\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onRemoveImage = useCallback(i => () => {}, []);\n  const onSubmit = useCallback(() => {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: text,\n        onChange: onChangeText,\n        maxLength: 140,\n        placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n        style: {\n          height: '80px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          multiple: true,\n          hidden: true,\n          ref: imageInput,\n          onChange: onChangeImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickImageUpload,\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            float: 'right'\n          },\n          htmlType: \"submit\",\n          children: \"\\uAC8C\\uC2DC\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imagePaths.map((v, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline-block'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: v,\n              style: {\n                width: '200px'\n              },\n              alt: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: onRemoveImage(i),\n                children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, v, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/components/PostForm.js"],"names":["React","useRef","useCallback","useEffect","useSelector","useDispatch","Form","Input","Button","useInput","ADD_POST_REQUEST","PostForm","imagePaths","addPostDone","state","post","dispatch","text","onChangeText","setText","imageInput","onChangeImages","e","console","log","target","files","onClickImageUpload","current","click","onRemoveImage","i","onSubmit","type","data","margin","height","marginBottom","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport useInput from '../hooks/useInput';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths, addPostDone } = useSelector(state => state.post);\r\n    const dispatch = useDispatch();\r\n    const [text, onChangeText, setText] = useInput('');\r\n    const imageInput = useRef();\r\n\r\n    useEffect(() => {\r\n        if (addPostDone) setText('');\r\n    }, [addPostDone]);\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('clickImgInfo', e.target.files);\r\n        // const imageFormData = new FormData();\r\n        // [].forEach.call(e.target.files, (f) => {\r\n        //     imageFormData.append('image', f);\r\n        // })\r\n    }, []);\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n    const onRemoveImage = useCallback((i) => () => {\r\n\r\n    }, []);\r\n    const onSubmit = useCallback(() => {\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: text,\r\n        });\r\n    }, [text]);\r\n    return (\r\n        <Form\r\n            style={{ margin: '10px 0 20px' }}\r\n            encType=\"multipart/form-data\"\r\n            onFinish={onSubmit}\r\n        >\r\n            <Form.Item>\r\n                <Input.TextArea\r\n                    value={text}\r\n                    onChange={onChangeText}\r\n                    maxLength={140}\r\n                    placeholder=\"오늘은 어떤 일이 있었나요?\"\r\n                    style={{\r\n                        height: '80px',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                />\r\n                <div>\r\n                    <input type=\"file\" name=\"image\" multiple hidden\r\n                        ref={imageInput} onChange={onChangeImages} />\r\n                    <Button onClick={onClickImageUpload}>이미지 업로드하기</Button>\r\n                    <Button type=\"primary\" style={{ float: 'right' }}\r\n                        htmlType=\"submit\">게시하기</Button>\r\n                </div>\r\n                <div>\r\n                    {imagePaths.map((v, i) => {\r\n                        return (\r\n                            <div key={v} style={{ display: 'inline-block' }}>\r\n                                <img src={v} style={{ width: '200px' }} alt={v} />\r\n                                <div>\r\n                                    <Button\r\n                                        onClick={onRemoveImage(i)}>삭제하기</Button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\nexport default PostForm; "]},"metadata":{},"sourceType":"module"}