{"ast":null,"code":"import produce from '../utils/produce';\nexport var initialState = {\n  signupData: {},\n  loginData: {},\n  me: null,\n  isLoggedIn: false,\n  logInLoading: false,\n  logInDone: false,\n  logInError: null\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.isLoggedIn = action.data.isLoggedIn;\n        draft.me = dummyUser(action.data);\n        draft.logInDone = true;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = acton.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/reducers/user.js"],"names":["produce","initialState","signupData","loginData","me","isLoggedIn","logInLoading","logInDone","logInError","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","reducer","state","action","draft","type","data","dummyUser","acton","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AAGA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,EADY;AAExBC,EAAAA,SAAS,EAAE,EAFa;AAGxBC,EAAAA,EAAE,EAAE,IAHoB;AAIxBC,EAAAA,UAAU,EAAE,KAJY;AAKxBC,EAAAA,YAAY,EAAE,KALU;AAMxBC,EAAAA,SAAS,EAAE,KANa;AAOxBC,EAAAA,UAAU,EAAE;AAPY,CAArB;AAaP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;;AAEP,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAACC,KAAD,uEAASZ,YAAT;AAAA,MAAuBa,MAAvB;AAAA,SAAkCd,OAAO,CAACa,KAAD,EAAQ,UAACE,KAAD,EAAW;AACxE,YAAQD,MAAM,CAACE,IAAf;AACI,WAAKP,cAAL;AACIM,QAAAA,KAAK,CAACT,YAAN,GAAqB,IAArB;AACAS,QAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AAEAQ,QAAAA,KAAK,CAACP,UAAN,GAAmB,IAAnB;AACA;;AACJ,WAAKE,cAAL;AACIK,QAAAA,KAAK,CAACT,YAAN,GAAqB,KAArB;AACAS,QAAAA,KAAK,CAACV,UAAN,GAAmBS,MAAM,CAACG,IAAP,CAAYZ,UAA/B;AACAU,QAAAA,KAAK,CAACX,EAAN,GAAWc,SAAS,CAACJ,MAAM,CAACG,IAAR,CAApB;AACAF,QAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACA;;AACJ,WAAKI,cAAL;AACII,QAAAA,KAAK,CAACT,YAAN,GAAqB,KAArB;AACAS,QAAAA,KAAK,CAACP,UAAN,GAAmBW,KAAK,CAACC,KAAzB;AACA;;AACJ;AACI;AAlBR;AAoBH,GArBwD,CAAzC;AAAA,CAAhB;;AAsBA,eAAeR,OAAf","sourcesContent":["import produce from '../utils/produce';\r\n\r\n\r\nexport const initialState = {\r\n    signupData: {},\r\n    loginData: {},\r\n    me: null,\r\n    isLoggedIn: false,\r\n    logInLoading: false,\r\n    logInDone: false,\r\n    logInError: null,\r\n\r\n};\r\n\r\n\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST:\r\n            draft.logInLoading = true;\r\n            draft.logInDone = false;\r\n\r\n            draft.logInError = null;\r\n            break;\r\n        case LOG_IN_SUCCESS:\r\n            draft.logInLoading = false;\r\n            draft.isLoggedIn = action.data.isLoggedIn;\r\n            draft.me = dummyUser(action.data);\r\n            draft.logInDone = true;\r\n            break;\r\n        case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = acton.error;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}