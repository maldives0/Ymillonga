{"ast":null,"code":"import axios from 'axios';\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action) {\n  try {\n    console.log('saga login', action); // const result = yield call(loginAPI);\n\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction signupAPI() {// return axios.post('/user/signup',data);\n}\n\nfunction* signup(action) {\n  try {\n    // const result = yield call(signupAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignup), fork(watchLogin)]);\n}","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/sagas/user.js"],"names":["axios","all","call","delay","fork","put","takeLatest","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loginAPI","data","post","login","action","console","log","type","err","error","response","signupAPI","signup","watchSignup","watchLogin","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AAEA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,eARJ,EASIC,eATJ,EAUIC,eAVJ,EAWIC,eAXJ,EAYIC,eAZJ,EAaIC,gBAbJ,EAcIC,gBAdJ,EAeIC,gBAfJ,QAgBO,kBAhBP;;AAkBA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOvB,KAAK,CAACwB,IAAN,CAAW,aAAX,EAA0BD,IAA1B,CAAP;AACH;;AACD,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B,EADA,CAEA;;AACA,UAAMvB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEjB,cADA;AAENW,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAOO,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAMzB,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEhB,eADA;AAENkB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAAA;;AACD,SAASU,SAAT,GAAqB,CACjB;AACH;;AACD,UAAUC,MAAV,CAAiBR,MAAjB,EAAyB;AACrB,MAAI;AACA;AACA,UAAMvB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEX;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOY,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAMzB,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEb,eADA;AAENe,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAAA;;AACD,UAAUY,WAAV,GAAwB;AACpB,QAAM7B,UAAU,CAACW,eAAD,EAAkBiB,MAAlB,CAAhB;AACH;;AACD,UAAUE,UAAV,GAAuB;AACnB,QAAM9B,UAAU,CAACK,cAAD,EAAiBc,KAAjB,CAAhB;AACH;;AACD,eAAe,UAAUY,QAAV,GAAqB;AAChC,QAAMpC,GAAG,CAAC,CACNG,IAAI,CAAC+B,WAAD,CADE,EAEN/B,IAAI,CAACgC,UAAD,CAFE,CAAD,CAAT;AAKH","sourcesContent":["import axios from 'axios';\r\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction loginAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\nfunction* login(action) {\r\n    try {\r\n        console.log('saga login', action);\r\n        // const result = yield call(loginAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n};\r\nfunction signupAPI() {\r\n    // return axios.post('/user/signup',data);\r\n}\r\nfunction* signup(action) {\r\n    try {\r\n        // const result = yield call(signupAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n};\r\nfunction* watchSignup() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchSignup),\r\n        fork(watchLogin),\r\n    ]);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}