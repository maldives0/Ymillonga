{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport { backUrl } from '../config/config';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst PostForm = () => {\n  const imagePaths = useSelector(state => state.post.imagePaths);\n  const addPostLoading = useSelector(state => state.post.addPostLoading);\n  const addPostDone = useSelector(state => state.post.addPostDone);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  const imageInput = useRef();\n  useEffect(() => {\n    if (addPostDone) setText('');\n  }, [addPostDone]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log('clickImgInfo', e.target.files); //선택한 이미지 파일 형식이 담겨있다(1개)\n\n    const imageFormData = new FormData(); //멀티파트형식으로 백서버로 보낸다\n\n    [].forEach.call(e.target.files, f => {\n      //유사배열이므로 forEach method를 배열에서 빌려온다\n      imageFormData.append('image', f); //백서버의 키 값과 'image' 일치시켜야 함\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성한 후 버튼을 누르세요.');\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  return ___EmotionJSX(_Form, {\n    style: {\n      margin: '10px 0 30px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit\n  }, ___EmotionJSX(_Form.Item, null, ___EmotionJSX(_Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    style: {\n      height: '80px',\n      marginBottom: '5px'\n    }\n  }), ___EmotionJSX(\"div\", null, ___EmotionJSX(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages\n  }), ___EmotionJSX(_Button, {\n    onClick: onClickImageUpload\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"), ___EmotionJSX(_Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    loading: addPostLoading,\n    htmlType: \"submit\"\n  }, \"\\uAC8C\\uC2DC\\uD558\\uAE30\")), ___EmotionJSX(\"div\", null, imagePaths.map((v, i) => {\n    return ___EmotionJSX(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      }\n    }, ___EmotionJSX(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v\n    }), ___EmotionJSX(\"div\", null, ___EmotionJSX(_Button, {\n      onClick: onRemoveImage(i)\n    }, \"\\uC0AD\\uC81C\\uD558\\uAE30\")));\n  }))));\n};\n\nexport default PostForm;","map":null,"metadata":{},"sourceType":"module"}