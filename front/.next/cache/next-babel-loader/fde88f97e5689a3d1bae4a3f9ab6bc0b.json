{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { Form, Input, Button, Row, Divider } from 'antd';\nimport Link from 'next/link';\nimport useInput from '../hooks/useInput';\nimport { default as UserOutlined } from '@ant-design/icons/UserOutlined';\nimport { default as LockOutlined } from '@ant-design/icons/LockOutlined';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport FacebookLoginBtn from './FacebookLoginBtn';\nimport GoogleLoginBtn from './GoogleLoginBtn';\nimport { Typography } from 'antd';\nimport { ImageLayout } from './style';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar Title = Typography.Title;\n\nvar LoginForm = function LoginForm() {\n  var logInLoading = useSelector(function (state) {\n    return state.user.logInLoading;\n  });\n  var logInError = useSelector(function (state) {\n    return state.user.logInError;\n  });\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useState = useState(false),\n      basicButtonClicked = _useState[0],\n      setBasicButtonClicked = _useState[1];\n\n  useEffect(function () {\n    if (logInError) alert(logInError);\n  }, [logInError]);\n  var onClickBasicButton = useCallback(function () {\n    setBasicButtonClicked(true);\n  }, []);\n  var onSubmitForm = useCallback(function () {\n    if (basicButtonClicked) {\n      dispatch({\n        type: LOG_IN_REQUEST,\n        data: {\n          email: email,\n          password: password\n        }\n      });\n    }\n  }, [email, password, basicButtonClicked]);\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(ImageLayout, null), ___EmotionJSX(\"div\", {\n    className: \"loginForm-title\"\n  }, ___EmotionJSX(Title, {\n    level: 3\n  }, \"Y Millonga\\uC5D0\\uC11C \\uB2F9\\uC2E0\\uC758 \\uC18C\\uC911\\uD55C \\uACBD\\uD5D8\\uC744 \\uD568\\uAED8 \\uB098\\uB220\\uC8FC\\uC138\\uC694!\")), ___EmotionJSX(\"div\", {\n    className: \"img-dancer-position-one\"\n  }, ___EmotionJSX(\"img\", {\n    width: 250,\n    height: 250,\n    src: \"/images/dancer1.png\"\n  })), ___EmotionJSX(\"div\", {\n    className: \"img-dancer-position-two\"\n  }, ___EmotionJSX(\"img\", {\n    width: 300,\n    height: 300,\n    src: \"/images/dancer3.png\"\n  })), ___EmotionJSX(Row, null, ___EmotionJSX(Form, {\n    name: \"basic-form\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onSubmitForm\n  }, ___EmotionJSX(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: basicButtonClicked,\n      message: 'Please input your username!'\n    }]\n  }, ___EmotionJSX(Input, {\n    prefix: ___EmotionJSX(UserOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    placeholder: \"Username\",\n    value: email,\n    onChange: onChangeEmail\n  })), ___EmotionJSX(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: basicButtonClicked,\n      message: 'Please input your password!'\n    }]\n  }, ___EmotionJSX(Input, {\n    prefix: ___EmotionJSX(LockOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: onChangePassword\n  })), ___EmotionJSX(Form.Item, null, ___EmotionJSX(Row, {\n    justify: \"end\"\n  }, ___EmotionJSX(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: logInLoading,\n    onClick: onClickBasicButton\n  }, \"\\uB85C\\uADF8\\uC778\"), ___EmotionJSX(Divider, {\n    type: \"vertical\",\n    style: {\n      border: 'none'\n    }\n  }), ___EmotionJSX(Link, {\n    href: \"/signup\"\n  }, ___EmotionJSX(\"a\", null, ___EmotionJSX(Button, null, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))))), ___EmotionJSX(Form.Item, null, ___EmotionJSX(Row, {\n    justify: \"center\",\n    wrap: false\n  }, ___EmotionJSX(GoogleLoginBtn, null), ___EmotionJSX(FacebookLoginBtn, null))))));\n};\n\nexport default LoginForm;","map":null,"metadata":{},"sourceType":"module"}