{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log('loggerMiddleware', action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore(context) {\n  var middleware = [];\n  console.log('context', context);\n  var enhancer = false ? compose(applyMiddleware) : composeWithDevTools(applyMiddleware(loggerMiddleware));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","reducer","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","context","middleware","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACvEC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACH,KAHoD;AAAA,GAA5B;AAAA,CAAzB;;AAIA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAChC,MAAMC,UAAU,GAAG,EAAnB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,OAAvB;AACA,MAAME,QAAQ,GAAG,QACbd,OAAO,CAACF,eAAD,CADM,GAEbI,mBAAmB,CAACJ,eAAe,CAACM,gBAAD,CAAhB,CAFvB;AAIA,MAAMW,KAAK,GAAGhB,WAAW,CAACI,OAAD,EAAUW,QAAV,CAAzB;AACA,SAAOC,KAAP;AACH,CATD;;AAUA,IAAMC,OAAO,GAAGf,aAAa,CAACU,cAAD,EAAiB;AAC1CM,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAGA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from '../reducers';\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n    console.log('loggerMiddleware', action);\r\n    return next(action);\r\n};\r\nconst configureStore = (context) => {\r\n    const middleware = [];\r\n    console.log('context', context);\r\n    const enhancer = process.env.NODE_ENV === 'production' ?\r\n        compose(applyMiddleware) :\r\n        composeWithDevTools(applyMiddleware(loggerMiddleware)\r\n        );\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n};\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development'\r\n});\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}