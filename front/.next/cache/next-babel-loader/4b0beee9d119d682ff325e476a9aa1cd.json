{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"c:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const initialProps = await Document.getInitialProps(ctx);\n    return _objectSpread({}, initialProps);\n  }\n\n  render() {\n    return ___EmotionJSX(Html, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      },\n      __self: this\n    }, ___EmotionJSX(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      },\n      __self: this\n    }), ___EmotionJSX(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      },\n      __self: this\n    }, ___EmotionJSX(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      },\n      __self: this\n    }), ___EmotionJSX(\"script\", {\n      src: \"https://polyfill.io/v3/polyfill.min.js?features=es6,es7,es8,es9,NodeList.prototype.forEach&flags=gated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      },\n      __self: this\n    }), ___EmotionJSX(NextScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      },\n      __self: this\n    })));\n  }\n\n} //.babelrc 설정 :styled component의 ssr을 위한 한 단계\n//_document.js: _app.js 를 감싸주는 html, head,body를 수정할 수 있게 한다\n//getInitalProps: _app, _document에서만 사용하는 특수한 ssr method(조만간 사라질 수도 있음), document를 customizing하기 위해 사용함","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/pages/_document.js"],"names":["React","Document","Html","Head","Main","NextScript","MyDocument","getInitialProps","ctx","initialProps","render"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;;AACA,eAAe,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAC7C,eAAaM,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACM,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6BAAYC,YAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,cAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,cAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,cAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,GAAG,EAAC,wGAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,cAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ,CADJ;AAUH;;AAjB4C,C,CAmBjD;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\r\nexport default class MyDocument extends Document {\r\n    static async getInitialProps(ctx) {\r\n        const initialProps = await Document.getInitialProps(ctx)\r\n        return { ...initialProps }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Html>\r\n                <Head />\r\n                <body>\r\n                    <Main />\r\n                    <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6,es7,es8,es9,NodeList.prototype.forEach&flags=gated\" />\r\n                    <NextScript />\r\n                </body>\r\n            </Html>\r\n        );\r\n    }\r\n}\r\n//.babelrc 설정 :styled component의 ssr을 위한 한 단계\r\n//_document.js: _app.js 를 감싸주는 html, head,body를 수정할 수 있게 한다\r\n//getInitalProps: _app, _document에서만 사용하는 특수한 ssr method(조만간 사라질 수도 있음), document를 customizing하기 위해 사용함\r\n\r\n"]},"metadata":{},"sourceType":"module"}