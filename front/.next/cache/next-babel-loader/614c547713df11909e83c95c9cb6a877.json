{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostLoading = _useSelector.addPostLoading,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var imageInput = useRef();\n  useEffect(function () {\n    if (addPostDone) setText('');\n  }, [addPostDone]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('clickImgInfo', e.target.files); // const imageFormData = new FormData();\n    // [].forEach.call(e.target.files, (f) => {\n    //     imageFormData.append('image', f);\n    // })\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onRemoveImage = useCallback(function (i) {\n    return function () {};\n  }, []);\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(_Form, {\n    style: {\n      margin: '10px 0 30px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(_Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(_Input.TextArea, {\n        value: text,\n        onChange: onChangeText,\n        maxLength: 140,\n        placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n        style: {\n          height: '80px',\n          marginBottom: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          multiple: true,\n          hidden: true,\n          ref: imageInput,\n          onChange: onChangeImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: onClickImageUpload,\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"primary\",\n          style: {\n            \"float\": 'right'\n          },\n          loading: addPostLoading,\n          htmlType: \"submit\",\n          children: \"\\uAC8C\\uC2DC\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imagePaths.map(function (v, i) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline-block'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: v,\n              style: {\n                width: '200px'\n              },\n              alt: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                onClick: onRemoveImage(i),\n                children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, _this)]\n          }, v, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"KwxunZ0Ea+E4KqkvCvSVQYNNM60=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/PostForm.js"],"names":["React","useRef","useCallback","useEffect","useSelector","useDispatch","useInput","ADD_POST_REQUEST","PostForm","state","post","imagePaths","addPostLoading","addPostDone","dispatch","text","onChangeText","setText","imageInput","onChangeImages","e","console","log","target","files","onClickImageUpload","current","click","onRemoveImage","i","onSubmit","type","data","margin","height","marginBottom","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport useInput from '../hooks/useInput';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths, addPostLoading, addPostDone } = useSelector(state => state.post);\r\n    const dispatch = useDispatch();\r\n    const [text, onChangeText, setText] = useInput('');\r\n    const imageInput = useRef();\r\n\r\n    useEffect(() => {\r\n        if (addPostDone) setText('');\r\n    }, [addPostDone]);\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('clickImgInfo', e.target.files);\r\n        // const imageFormData = new FormData();\r\n        // [].forEach.call(e.target.files, (f) => {\r\n        //     imageFormData.append('image', f);\r\n        // })\r\n    }, []);\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n    const onRemoveImage = useCallback((i) => () => {\r\n\r\n    }, []);\r\n    const onSubmit = useCallback(() => {\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: text,\r\n        });\r\n    }, [text]);\r\n    return (\r\n        <Form\r\n            style={{ margin: '10px 0 30px' }}\r\n            encType=\"multipart/form-data\"\r\n            onFinish={onSubmit}\r\n        >\r\n            <Form.Item>\r\n                <Input.TextArea\r\n                    value={text}\r\n                    onChange={onChangeText}\r\n                    maxLength={140}\r\n                    placeholder=\"오늘은 어떤 일이 있었나요?\"\r\n                    style={{\r\n                        height: '80px',\r\n                        marginBottom: '5px'\r\n                    }}\r\n                />\r\n                <div>\r\n                    <input\r\n                        type=\"file\" name=\"image\" multiple hidden\r\n                        ref={imageInput}\r\n                        onChange={onChangeImages} />\r\n                    <Button onClick={onClickImageUpload}>이미지 업로드하기</Button>\r\n                    <Button type=\"primary\"\r\n                        style={{ float: 'right' }}\r\n                        loading={addPostLoading}\r\n                        htmlType=\"submit\">게시하기</Button>\r\n                </div>\r\n                <div>\r\n                    {imagePaths.map((v, i) => {\r\n                        return (\r\n                            <div key={v} style={{ display: 'inline-block' }}>\r\n                                <img src={v} style={{ width: '200px' }} alt={v} />\r\n                                <div>\r\n                                    <Button\r\n                                        onClick={onRemoveImage(i)}>삭제하기</Button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\nexport default PostForm; "]},"metadata":{},"sourceType":"module"}