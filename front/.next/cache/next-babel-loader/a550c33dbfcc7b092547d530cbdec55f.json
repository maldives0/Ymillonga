{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"c:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST // data: mainPosts[mainPosts.length - 1].id,\n\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      //쌓여있는 이벤트 메모리를 제거해주기\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this), mainPosts === null || mainPosts === void 0 ? void 0 : mainPosts.map(post => {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/pages/index.js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","mainPosts","hasMorePosts","loadPostsLoading","state","post","me","user","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","hasMorePost","addEventListener","removeEventListener","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAgDV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjE;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASb,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAA1B;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASiB,QAAT,GAAoB;AAEhB,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACtG,YAAIC,WAAW,IAAI,CAACb,gBAApB,EAAsC;AAClCH,UAAAA,QAAQ,CAAC;AACLQ,YAAAA,IAAI,EAAEV,kBADD,CAEL;;AAFK,WAAD,CAAR;AAIH;AACJ;AACJ;;AACDY,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCR,QAAlC;AACA,WAAO,MAAM;AACT;AACAC,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCT,QAArC;AACH,KAHD;AAIH,GAjBQ,EAiBN,CAACR,SAAD,EAAYe,WAAZ,EAAyBb,gBAAzB,CAjBM,CAAT;AAmBA,sBACI,QAAC,SAAD;AAAA,eAEKG,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFX,EAGKL,SAHL,aAGKA,SAHL,uBAGKA,SAAS,CAAEkB,GAAX,CAAgBd,IAAD,IAAU;AACtB,0BACI,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACe,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxCD;;AAyCA,eAAerB,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(state => state.post);\r\n    const { me } = useSelector(state => state.user);\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        function onScroll() {\r\n\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePost && !loadPostsLoading) {\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        // data: mainPosts[mainPosts.length - 1].id,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            //쌓여있는 이벤트 메모리를 제거해주기\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts, hasMorePost, loadPostsLoading]);\r\n\r\n    return (\r\n        <AppLayout>\r\n\r\n            {me && <PostForm />}\r\n            {mainPosts?.map((post) => {\r\n                return (\r\n                    <PostCard key={post.id} post={post} />\r\n                );\r\n            })}\r\n\r\n        </AppLayout>\r\n    );\r\n};\r\nexport default Home; "]},"metadata":{},"sourceType":"module"}