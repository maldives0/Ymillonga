{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CardWrapper } from './style';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport CommentForm from './CommentForm';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nmoment.locale('ko');\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var _useState3 = useState(false),\n      editMode = _useState3[0],\n      setEditMode = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading,\n      updatePostLoading = _useSelector.updatePostLoading; // const liked = post.Likers.find((v) => v.id === id);\n\n\n  var onLike = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n  }, [id]);\n  var onRemovePost = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onRetweet = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n  }, [id]);\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, [id]);\n  var onClickUpdate = useCallback(function () {\n    setEditMode(true);\n  }, []);\n  var onCancelUpdate = useCallback(function () {\n    setEditMode(false);\n    ;\n  }, []);\n  var onChangePost = useCallback(function (editText) {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, [post]);\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClickUpdate,\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 46\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 45\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, _this)\n      }, \"ellipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, _this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 30\n      }, _this),\n      title: post.RetweetId ? \"\".concat(post.User.nickname, \"\\uB2D8\\uC774 \\uB9AC\\uD2B8\\uC717\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4.\") : null,\n      children: post.RetweetId && post.Retweet ? /*#__PURE__*/_jsxDEV(Card, {\n        cover: post.Retweet.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Retweet.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            prefetch: false,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: post.Retweet.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 61\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 58\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, _this),\n          title: post.Retweet.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            onCancelUpdate: onCancelUpdate,\n            onChangePost: onChangePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 37\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/user/\".concat(post.User.id),\n            prefetch: false,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: post.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 61\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 58\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 37\n          }, _this),\n          title: post.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            onCancelUpdate: onCancelUpdate,\n            onChangePost: onChangePost,\n            postData: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 37\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\\uB313\\uAE00: \".concat(post.Comments ? post.Comments.length : 0, \"\\uAC1C\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments || [],\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/user/\".concat(item.User.id),\n                prefetch: false,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: item.User.nickname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 49\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 45\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"ZhQWkSRuXc5duCQBDDsBZiiC7vw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","useSelector","useDispatch","CardWrapper","moment","Link","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","CommentForm","PostImages","FollowButton","PostCardContent","REMOVE_POST_REQUEST","locale","PostCard","post","dispatch","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","editMode","setEditMode","removePostLoading","updatePostLoading","onLike","alert","onUnlike","onRemovePost","type","data","onRetweet","onToggleLike","prev","onToggleComment","onClickUpdate","onCancelUpdate","onChangePost","editText","Images","User","RetweetId","nickname","Retweet","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","any","Likers","objectOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CardWrapper } from './style';\r\nimport moment from 'moment';\r\nimport Link from 'next/link';\r\nimport {\r\n    RetweetOutlined,\r\n    HeartTwoTone,\r\n    HeartOutlined,\r\n    MessageOutlined,\r\n    EllipsisOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport CommentForm from './CommentForm';\r\nimport PostImages from './PostImages';\r\nimport FollowButton from './FollowButton';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\r\n\r\nmoment.locale('ko');\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const { removePostLoading, updatePostLoading } = useSelector(state => state.post);\r\n    // const liked = post.Likers.find((v) => v.id === id);\r\n\r\n    const onLike = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n    }, [id]);\r\n    const onUnlike = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n    }, [id]);\r\n    const onRemovePost = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        })\r\n    }, [id]);\r\n    const onRetweet = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n    }, [id]);\r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev);\r\n    }, [id]);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [id]);\r\n    const onClickUpdate = useCallback(() => {\r\n        setEditMode(true);\r\n    }, []);\r\n    const onCancelUpdate = useCallback(() => {\r\n        setEditMode(false);;\r\n    }, []);\r\n    const onChangePost = useCallback((editText) => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [post]);\r\n\r\n    return (\r\n        <CardWrapper key={post.id}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked ?\r\n                        <HeartTwoTone\r\n                            key=\"heart\"\r\n                            twoToneColor=\"#eb2f96\"\r\n                            onClick={onToggleLike} /> :\r\n                        <HeartOutlined\r\n                            key=\"heart\"\r\n                            onClick={onToggleLike} />,\r\n                    <MessageOutlined\r\n                        key=\"message\"\r\n                        onClick={onToggleComment} />,\r\n                    <Popover\r\n                        key=\"ellipsis\"\r\n                        content={(\r\n                            <Button.Group>\r\n                                {id && post.User.id === id ?\r\n                                    (\r\n                                        <>\r\n                                            {<Button\r\n                                                onClick={onClickUpdate}>수정</Button>}\r\n                                            <Button\r\n                                                type=\"danger\"\r\n                                                onClick={onRemovePost}\r\n                                                loading={removePostLoading} >삭제</Button>\r\n                                        </>\r\n                                    ) :\r\n                                    <Button>신고하기</Button>}\r\n                            </Button.Group>\r\n                        )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                extra={id && <FollowButton post={post} />}\r\n                title={post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null}\r\n            >\r\n                {post.RetweetId && post.Retweet ?\r\n                    (\r\n                        <Card\r\n                            cover={post.Retweet.Images[0] &&\r\n                                <PostImages images={post.Retweet.Images} />}>\r\n                            {/* <div style={{float: 'right'}}>\r\n                            {moment(post.createdAt).startOf('day').fromNow()}\r\n                        </div> */}\r\n                            <Card.Meta\r\n                                avatar={(\r\n                                    <Link href={`/`}\r\n                                        prefetch={false}><a><Avatar>\r\n                                            {post.Retweet.User.nickname[0]}\r\n                                        </Avatar></a></Link>\r\n                                )}\r\n                                title={post.Retweet.User.nickname}\r\n                                description={\r\n                                    <PostCardContent\r\n                                        onCancelUpdate={\r\n                                            onCancelUpdate\r\n                                        }\r\n                                        onChangePost={onChangePost}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    ) : (\r\n                        <>\r\n                            {/* <div style={{float: 'right'}}>\r\n                            {moment(post.createdAt).startOf('day').fromNow()}\r\n                        </div> */}\r\n                            <Card.Meta\r\n                                avatar={(\r\n                                    <Link href={`/user/${post.User.id}`}\r\n                                        prefetch={false}><a><Avatar>\r\n                                            {post.User.nickname[0]}\r\n                                        </Avatar></a></Link>\r\n                                )}\r\n                                title={post.User.nickname}\r\n                                description={\r\n                                    <PostCardContent\r\n                                        onCancelUpdate={\r\n                                            onCancelUpdate\r\n                                        }\r\n                                        onChangePost={onChangePost}\r\n                                        postData={post.content}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </>\r\n                    )}\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`댓글: ${post.Comments ? post.Comments.length : 0}개`}\r\n                        itemLayout='horizontal'\r\n                        dataSource={post.Comments || []}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={(\r\n                                        <Link\r\n                                            href={`/user/${item.User.id}`}\r\n                                            prefetch={false}>\r\n                                            <a>\r\n                                                <Avatar>{item.User.nickname[0]}</Avatar>\r\n                                            </a>\r\n                                        </Link>\r\n                                    )}\r\n                                    content={item.content} />\r\n                            </li>\r\n                        )} />\r\n                </>\r\n            )}\r\n        </CardWrapper >\r\n    );\r\n};\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        Comments: PropTypes.arrayOf(PropTypes.any),\r\n        Images: PropTypes.arrayOf(PropTypes.any),\r\n        Likers: PropTypes.arrayOf(PropTypes.object),\r\n        RetweetId: PropTypes.number,\r\n        Retweet: PropTypes.objectOf(PropTypes.any),\r\n    }).isRequired,\r\n};\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}