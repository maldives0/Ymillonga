{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST, UNIGNORE_REQUEST, IGNORE_REQUEST } from '../reducers/user';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar FollowButton = function FollowButton(_ref) {\n  var _post$User3;\n\n  var post = _ref.post;\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var followLoading = useSelector(function (state) {\n    return state.user.followLoading;\n  });\n  var unfollowLoading = useSelector(function (state) {\n    return state.user.unfollowLoading;\n  });\n  var ignoreLoading = useSelector(function (state) {\n    return state.user.ignoreLoading;\n  });\n  var unIgnoreLoading = useSelector(function (state) {\n    return state.user.unIgnoreLoading;\n  });\n  var isFollowing = me.Followings.find(function (v) {\n    var _post$User;\n\n    return v.id === ((_post$User = post.User) === null || _post$User === void 0 ? void 0 : _post$User.id);\n  });\n  var isIgnoring = me.Ignorings.find(function (v) {\n    var _post$User2;\n\n    return v.id === ((_post$User2 = post.User) === null || _post$User2 === void 0 ? void 0 : _post$User2.id);\n  });\n  var dispatch = useDispatch();\n  var ToggleFollow = useCallback(function () {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n  var toggleIgnore = useCallback(function () {\n    if (isIgnoring) {\n      dispatch({\n        type: UNIGNORE_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: IGNORE_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isIgnoring]);\n\n  if (((_post$User3 = post.User) === null || _post$User3 === void 0 ? void 0 : _post$User3.id) === me.id) {\n    return null;\n  }\n\n  return ___EmotionJSX(\"div\", null, ___EmotionJSX(Button, {\n    style: {\n      marginRight: 1\n    },\n    loading: followLoading || unfollowLoading,\n    onClick: ToggleFollow\n  }, isFollowing ? '언팔로우' : '팔로우'), ___EmotionJSX(Button, {\n    loading: ignoreLoading || unIgnoreLoading,\n    onClick: toggleIgnore\n  }, isIgnoring ? '차단풀기' : '차단하기'));\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.shape({\n    UserId: PropTypes.number\n  }).isRequired\n};\nexport default FollowButton;","map":null,"metadata":{},"sourceType":"module"}