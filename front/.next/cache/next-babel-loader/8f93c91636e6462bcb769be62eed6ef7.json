{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostCard.js\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport CommentForm from './CommentForm';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nmoment.locale('ko');\n\nconst CardWrapper = _styled(\"div\", {\n  target: \"eez0ku0\",\n  label: \"CardWrapper\"\n})(false ? {\n  name: \"1azpx8r\",\n  styles: \"margin-bottom:20px\"\n} : {\n  name: \"1azpx8r\",\n  styles: \"margin-bottom:20px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst PostCard = ({\n  post\n}) => {\n  var _post$Likers;\n\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: editMode,\n    1: setEditMode\n  } = useState(false);\n  const {\n    removePostLoading,\n    updatePostLoading\n  } = useSelector(state => state.post);\n  const onLike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onUnlike = useCallback(() => {\n    if (!id) alert('로그인이 필요합니다');\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onRetweet = useCallback(() => {\n    if (!id) alert('로그인이 필요합니다');\n    dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, [id]);\n  const onClickUpdate = useCallback(() => {\n    setEditMode(true);\n  }, []);\n  const onCancelUpdate = useCallback(() => {\n    setEditMode(false);\n    ;\n  }, []);\n  const onChangePost = useCallback(editText => {\n    setCommentFormOpened(prev => !prev);\n  }, [post]);\n  const liked = (_post$Likers = post.Likers) === null || _post$Likers === void 0 ? void 0 : _post$Likers.find(v => v.id === id);\n  return ___EmotionJSX(CardWrapper, {\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    },\n    __self: this\n  }, ___EmotionJSX(Card, {\n    cover: (post === null || post === void 0 ? void 0 : post.Images[0]) && ___EmotionJSX(PostImages, {\n      images: post === null || post === void 0 ? void 0 : post.Images,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 43\n      },\n      __self: this\n    }),\n    actions: [___EmotionJSX(RetweetOutlined, {\n      onClick: onRetweet,\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      },\n      __self: this\n    }), liked ? ___EmotionJSX(HeartTwoTone, {\n      key: \"heart\",\n      twoToneColor: \"#eb2f96\",\n      onClick: onUnlike,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      },\n      __self: this\n    }) : ___EmotionJSX(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLike,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      },\n      __self: this\n    }), ___EmotionJSX(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      },\n      __self: this\n    }), ___EmotionJSX(Popover, {\n      key: \"ellipsis\",\n      content: ___EmotionJSX(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        },\n        __self: this\n      }, id && (post === null || post === void 0 ? void 0 : post.User.id) === id ? ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Button, {\n        onClick: onClickUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 46\n        },\n        __self: this\n      }, \"\\uC218\\uC815\"), ___EmotionJSX(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        loading: removePostLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 45\n        },\n        __self: this\n      }, \"\\uC0AD\\uC81C\")) : ___EmotionJSX(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        },\n        __self: this\n      }, \"\\uC2E0\\uACE0\\uD558\\uAE30\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      },\n      __self: this\n    }, ___EmotionJSX(EllipsisOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      },\n      __self: this\n    }))],\n    extra: id && ___EmotionJSX(FollowButton, {\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 30\n      },\n      __self: this\n    }),\n    title: post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    },\n    __self: this\n  }, post.RetweetId && post.Retweet ? ___EmotionJSX(Card, {\n    cover: post.Retweet.Images[0] && ___EmotionJSX(PostImages, {\n      images: post.Retweet.Images,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    },\n    __self: this\n  }, ___EmotionJSX(\"div\", {\n    style: {\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    },\n    __self: this\n  }, moment(post.Retweet.createdAt).startOf('hour').fromNow()), ___EmotionJSX(Card.Meta, {\n    avatar: ___EmotionJSX(Link, {\n      href: `/`,\n      prefetch: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      },\n      __self: this\n    }, ___EmotionJSX(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 58\n      },\n      __self: this\n    }, ___EmotionJSX(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 61\n      },\n      __self: this\n    }, post.Retweet.User.nickname[0]))),\n    title: post.Retweet.User.nickname,\n    description: ___EmotionJSX(PostCardContent, {\n      onCancelUpdate: onCancelUpdate,\n      onChangePost: onChangePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    },\n    __self: this\n  })) : ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"div\", {\n    style: {\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    },\n    __self: this\n  }, moment(post.createdAt).startOf('hour').fromNow()), ___EmotionJSX(Card.Meta, {\n    avatar: ___EmotionJSX(Link, {\n      href: `/user/${post.User.id}`,\n      prefetch: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      },\n      __self: this\n    }, ___EmotionJSX(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 58\n      },\n      __self: this\n    }, ___EmotionJSX(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 61\n      },\n      __self: this\n    }, post.User.nickname[0]))),\n    title: post.User.nickname,\n    description: ___EmotionJSX(PostCardContent, {\n      onCancelUpdate: onCancelUpdate,\n      onChangePost: onChangePost,\n      postData: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    },\n    __self: this\n  }))), commentFormOpened && ___EmotionJSX(React.Fragment, null, ___EmotionJSX(CommentForm, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    },\n    __self: this\n  }), ___EmotionJSX(List, {\n    header: `댓글: ${post.Comments ? post.Comments.length : 0}개`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments || [],\n    renderItem: item => ___EmotionJSX(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      },\n      __self: this\n    }, ___EmotionJSX(Comment, {\n      author: item.User.nickname,\n      avatar: ___EmotionJSX(Link, {\n        href: `/user/${item.User.id}`,\n        prefetch: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 41\n        },\n        __self: this\n      }, ___EmotionJSX(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 45\n        },\n        __self: this\n      }, ___EmotionJSX(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 49\n        },\n        __self: this\n      }, item.User.nickname[0]))),\n      content: item.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    },\n    __self: this\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","useSelector","useDispatch","moment","Link","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","CommentForm","PostImages","FollowButton","PostCardContent","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","locale","CardWrapper","PostCard","post","dispatch","id","state","user","me","commentFormOpened","setCommentFormOpened","editMode","setEditMode","removePostLoading","updatePostLoading","onLike","alert","type","data","onUnlike","onRemovePost","onRetweet","onToggleComment","prev","onClickUpdate","onCancelUpdate","onChangePost","editText","liked","Likers","find","v","Images","User","RetweetId","nickname","Retweet","float","createdAt","startOf","fromNow","content","Comments","length","item","propTypes","shape","number","object","string","arrayOf","any","objectOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from '@emotion/styled';\r\nimport moment from 'moment';\r\nimport Link from 'next/link';\r\nimport {\r\n    RetweetOutlined,\r\n    HeartTwoTone,\r\n    HeartOutlined,\r\n    MessageOutlined,\r\n    EllipsisOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport CommentForm from './CommentForm';\r\nimport PostImages from './PostImages';\r\nimport FollowButton from './FollowButton';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\r\n\r\n\r\nmoment.locale('ko');\r\nconst CardWrapper = styled.div`\r\nmargin-bottom: 20px;`\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const { removePostLoading, updatePostLoading } = useSelector(state => state.post);\r\n\r\n    const onLike = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: LIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n    const onUnlike = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n        return dispatch({\r\n            type: UNLIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n    const onRemovePost = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다');\r\n        }\r\n        return dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        })\r\n    }, [id]);\r\n    const onRetweet = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n        dispatch({\r\n            type: RETWEET_REQUEST,\r\n            data: post.id,\r\n        })\r\n    }, [id]);\r\n\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [id]);\r\n\r\n    const onClickUpdate = useCallback(() => {\r\n        setEditMode(true);\r\n    }, []);\r\n    const onCancelUpdate = useCallback(() => {\r\n        setEditMode(false);;\r\n    }, []);\r\n    const onChangePost = useCallback((editText) => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [post]);\r\n    const liked = post.Likers?.find((v) => v.id === id);\r\n    return (\r\n        <CardWrapper key={post.id}>\r\n            <Card\r\n                cover={post?.Images[0] && <PostImages images={post?.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined\r\n                        onClick={onRetweet}\r\n                        key=\"retweet\" />,\r\n                    liked ?\r\n                        <HeartTwoTone\r\n                            key=\"heart\"\r\n                            twoToneColor=\"#eb2f96\"\r\n                            onClick={onUnlike} /> :\r\n                        <HeartOutlined\r\n                            key=\"heart\"\r\n                            onClick={onLike} />,\r\n                    <MessageOutlined\r\n                        key=\"message\"\r\n                        onClick={onToggleComment} />,\r\n                    <Popover\r\n                        key=\"ellipsis\"\r\n                        content={(\r\n                            <Button.Group>\r\n                                {id && post?.User.id === id ?\r\n                                    (\r\n                                        <>\r\n                                            {<Button\r\n                                                onClick={onClickUpdate}>수정</Button>}\r\n                                            <Button\r\n                                                type=\"danger\"\r\n                                                onClick={onRemovePost}\r\n                                                loading={removePostLoading} >삭제</Button>\r\n                                        </>\r\n                                    ) :\r\n                                    <Button>신고하기</Button>}\r\n                            </Button.Group>\r\n                        )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                extra={id && <FollowButton post={post} />}\r\n                title={post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null}\r\n            >\r\n                {post.RetweetId && post.Retweet ?\r\n                    (\r\n                        <Card\r\n                            cover={post.Retweet.Images[0] &&\r\n                                <PostImages images={post.Retweet.Images} />}>\r\n                            <div style={{ float: 'right' }}>\r\n                                {moment(post.Retweet.createdAt).startOf('hour').fromNow()}\r\n                            </div>\r\n                            <Card.Meta\r\n                                avatar={(\r\n                                    <Link href={`/`}\r\n                                        prefetch={false}><a><Avatar>\r\n                                            {post.Retweet.User.nickname[0]}\r\n                                        </Avatar></a></Link>\r\n                                )}\r\n                                title={post.Retweet.User.nickname}\r\n                                description={\r\n                                    <PostCardContent\r\n                                        onCancelUpdate={\r\n                                            onCancelUpdate\r\n                                        }\r\n                                        onChangePost={onChangePost}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    ) : (\r\n                        <>\r\n                            <div style={{ float: 'right' }}>\r\n                                {moment(post.createdAt).startOf('hour').fromNow()}\r\n                            </div>\r\n                            <Card.Meta\r\n                                avatar={(\r\n                                    <Link href={`/user/${post.User.id}`}\r\n                                        prefetch={false}><a><Avatar>\r\n                                            {post.User.nickname[0]}\r\n                                        </Avatar></a></Link>\r\n                                )}\r\n                                title={post.User.nickname}\r\n                                description={\r\n                                    <PostCardContent\r\n                                        onCancelUpdate={\r\n                                            onCancelUpdate\r\n                                        }\r\n                                        onChangePost={onChangePost}\r\n                                        postData={post.content}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </>\r\n                    )}\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`댓글: ${post.Comments ? post.Comments.length : 0}개`}\r\n                        itemLayout='horizontal'\r\n                        dataSource={post.Comments || []}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={(\r\n                                        <Link\r\n                                            href={`/user/${item.User.id}`}\r\n                                            prefetch={false}>\r\n                                            <a>\r\n                                                <Avatar>{item.User.nickname[0]}</Avatar>\r\n                                            </a>\r\n                                        </Link>\r\n                                    )}\r\n                                    content={item.content} />\r\n                            </li>\r\n                        )} />\r\n                </>\r\n            )}\r\n        </CardWrapper >\r\n    );\r\n};\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        Comments: PropTypes.arrayOf(PropTypes.any),\r\n        Images: PropTypes.arrayOf(PropTypes.any),\r\n        Likers: PropTypes.arrayOf(PropTypes.object),\r\n        RetweetId: PropTypes.number,\r\n        Retweet: PropTypes.objectOf(PropTypes.any),\r\n    }).isRequired,\r\n};\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}