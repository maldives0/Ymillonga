{"ast":null,"code":"import axios from 'axios';\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS } from '../reducers/user';\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI(data) {\n  return axios.post('/user/logout');\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI); // yield delay(1000);\n\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data); //data={email,password,nickname}, post,put,patch는 data를 넘길 수 있다\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchRemovefollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadMyInfo), fork(watchLoadUser), fork(watchSignup), fork(watchChangeNickname), fork(watchFollow), fork(watchUnfollow), fork(watchRemovefollower), fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/sagas/user.js"],"names":["axios","all","call","delay","fork","put","takeLatest","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","loadMyInfoAPI","get","loadMyInfo","result","type","data","err","console","error","response","loadUserAPI","loadUser","action","loginAPI","post","login","logoutAPI","logout","signupAPI","signup","changeNicknameAPI","patch","nickname","changeNickname","followAPI","follow","unfollowAPI","delete","unfollow","removeFollowerAPI","removeFollower","watchLoadMyInfo","watchLoadUser","watchSignup","watchChangeNickname","watchFollow","watchUnfollow","watchRemovefollower","watchLogin","watchLogout","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_NICKNAME_FAILURE,\r\n    CHANGE_NICKNAME_REQUEST,\r\n    CHANGE_NICKNAME_SUCCESS,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    LOAD_MY_INFO_FAILURE,\r\n    LOAD_MY_INFO_REQUEST,\r\n    LOAD_MY_INFO_SUCCESS,\r\n} from '../reducers/user';\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n    try {\r\n        const result = yield call(loadMyInfoAPI);\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction loadUserAPI(data) {\r\n    return axios.get(`/user/${data}`);\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loginAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\nfunction* login(action) {\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction logoutAPI(data) {\r\n    return axios.post('/user/logout');\r\n}\r\nfunction* logout() {\r\n    try {\r\n        const result = yield call(logoutAPI);\r\n        // yield delay(1000);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction signupAPI(data) {\r\n    return axios.post('/user', data);\r\n    //data={email,password,nickname}, post,put,patch는 data를 넘길 수 있다\r\n}\r\nfunction* signup(action) {\r\n    try {\r\n        const result = yield call(signupAPI, action.data);\r\n\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n};\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname', { nickname: data });\r\n}\r\nfunction* changeNickname(action) {\r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n\r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n};\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`);\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        const result = yield call(followAPI, action.data);\r\n\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`);\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction removeFollowerAPI(data) {\r\n    return axios.delete(`/user/follower/${data}`);\r\n}\r\nfunction* removeFollower(action) {\r\n    try {\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchSignup() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchRemovefollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\nfunction* watchLogout() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLoadMyInfo),\r\n        fork(watchLoadUser),\r\n        fork(watchSignup),\r\n        fork(watchChangeNickname),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchRemovefollower),\r\n        fork(watchLogin),\r\n        fork(watchLogout),\r\n    ]);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}