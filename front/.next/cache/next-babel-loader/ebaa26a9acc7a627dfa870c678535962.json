{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas'; // const loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n//     console.log('loggerMiddleware', action);\n//     return next(action);\n// };\n\nvar configureStore = function configureStore(context) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middleware = [sagaMiddleware];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middleware)) : composeWithDevTools(applyMiddleware.apply(void 0, middleware));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false // debug: process.env.NODE_ENV === 'development'\n\n});\nexport default wrapper;","map":null,"metadata":{},"sourceType":"module"}