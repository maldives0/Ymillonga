{"ast":null,"code":"import axios from 'axios';\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_MENUKEY_FAILURE, CHANGE_MENUKEY_REQUEST, CHANGE_MENUKEY_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS } from '../reducers/user';\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI(data) {\n  return axios.post('/user/logout');\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI); // yield delay(1000);\n\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data); //data={email,password,nickname}, post,put,patch는 data를 넘길 수 있다\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction changeMenuKeyAPI(data) {\n  return axios.post('/user/menuKey', data);\n}\n\nfunction* changeMenuKey(action) {\n  try {\n    const result = yield call(changeMenuKeyAPI, action.data);\n    yield put({\n      type: CHANGE_MENUKEY_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_MENUKEY_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchChangeMenuKey() {\n  yield takeLatest(CHANGE_MENUKEY_REQUEST, changeMenuKey);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchRemovefollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadMyInfo), fork(watchLoadUser), fork(watchSignup), fork(watchChangeNickname), fork(watchChangeMenuKey), fork(watchFollow), fork(watchUnfollow), fork(watchRemovefollower), fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/sagas/user.js"],"names":["axios","all","call","delay","fork","put","takeLatest","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_MENUKEY_FAILURE","CHANGE_MENUKEY_REQUEST","CHANGE_MENUKEY_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","loadMyInfoAPI","get","loadMyInfo","result","type","data","err","console","error","response","loadUserAPI","loadUser","action","loginAPI","post","login","logoutAPI","logout","signupAPI","signup","changeNicknameAPI","patch","nickname","changeNickname","changeMenuKeyAPI","changeMenuKey","followAPI","follow","unfollowAPI","delete","unfollow","removeFollowerAPI","removeFollower","watchLoadMyInfo","watchLoadUser","watchSignup","watchChangeNickname","watchChangeMenuKey","watchFollow","watchUnfollow","watchRemovefollower","watchLogin","watchLogout","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_NICKNAME_FAILURE,\r\n    CHANGE_NICKNAME_REQUEST,\r\n    CHANGE_NICKNAME_SUCCESS,\r\n    CHANGE_MENUKEY_FAILURE,\r\n    CHANGE_MENUKEY_REQUEST,\r\n    CHANGE_MENUKEY_SUCCESS,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    LOAD_MY_INFO_FAILURE,\r\n    LOAD_MY_INFO_REQUEST,\r\n    LOAD_MY_INFO_SUCCESS,\r\n} from '../reducers/user';\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n    try {\r\n        const result = yield call(loadMyInfoAPI);\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction loadUserAPI(data) {\r\n    return axios.get(`/user/${data}`);\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loginAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\nfunction* login(action) {\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction logoutAPI(data) {\r\n    return axios.post('/user/logout');\r\n}\r\nfunction* logout() {\r\n    try {\r\n        const result = yield call(logoutAPI);\r\n        // yield delay(1000);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction signupAPI(data) {\r\n    return axios.post('/user', data);\r\n    //data={email,password,nickname}, post,put,patch는 data를 넘길 수 있다\r\n}\r\nfunction* signup(action) {\r\n    try {\r\n        const result = yield call(signupAPI, action.data);\r\n\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n};\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname', { nickname: data });\r\n}\r\nfunction* changeNickname(action) {\r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n\r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n};\r\nfunction changeMenuKeyAPI(data) {\r\n    return axios.post('/user/menuKey', data);\r\n}\r\nfunction* changeMenuKey(action) {\r\n    try {\r\n        const result = yield call(changeMenuKeyAPI, action.data);\r\n\r\n        yield put({\r\n            type: CHANGE_MENUKEY_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: CHANGE_MENUKEY_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n};\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`);\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        const result = yield call(followAPI, action.data);\r\n\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`);\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction removeFollowerAPI(data) {\r\n    return axios.delete(`/user/follower/${data}`);\r\n}\r\nfunction* removeFollower(action) {\r\n    try {\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchSignup() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchChangeMenuKey() {\r\n    yield takeLatest(CHANGE_MENUKEY_REQUEST, changeMenuKey);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchRemovefollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\nfunction* watchLogout() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLoadMyInfo),\r\n        fork(watchLoadUser),\r\n        fork(watchSignup),\r\n        fork(watchChangeNickname),\r\n        fork(watchChangeMenuKey),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchRemovefollower),\r\n        fork(watchLogin),\r\n        fork(watchLogout),\r\n    ]);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}