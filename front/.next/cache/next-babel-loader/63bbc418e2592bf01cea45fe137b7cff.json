{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback } from 'react';\nimport { Button, List, Avatar } from 'antd';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LoadMore } from './style';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst FollowList = ({\n  header,\n  data,\n  onClickMore\n}) => {\n  const dispatch = useDispatch();\n  const onCancel = useCallback(id => () => {\n    if (header === '팔로잉') {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: id\n      });\n    }\n\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: id\n    });\n  }, []);\n\n  const loadMore = ___EmotionJSX(LoadMore, null, ___EmotionJSX(Button, {\n    onClick: onClickMore\n  }, \"\\uB354\\uBCF4\\uAE30\"));\n\n  return ___EmotionJSX(List, {\n    key: `${header}-list`,\n    style: {\n      marginBottom: 20\n    },\n    header: ___EmotionJSX(\"div\", null, header),\n    dataSource: data,\n    itemLayout: \"horizontal\",\n    loadMore: loadMore,\n    bordered: true,\n    renderItem: item => ___EmotionJSX(List.Item, {\n      key: `followlist_${item.id}`,\n      actions: [___EmotionJSX(\"a\", {\n        key: `post_${item.id}`,\n        href: `/user/${item.id}`\n      }, \"\\uAC8C\\uC2DC\\uAE00 \\uBCF4\\uAE30\"), ___EmotionJSX(\"a\", {\n        key: `ignored_${item.id}`,\n        onClick: onCancel(item.id)\n      }, \"\\uC5F0\\uACB0\\uB04A\\uAE30\")]\n    }, ___EmotionJSX(List.Item.Meta, {\n      avatar: ___EmotionJSX(Link, {\n        prefetch: false,\n        href: `/user/${item.id}`\n      }, ___EmotionJSX(\"a\", null, ___EmotionJSX(Avatar, null, item.nickname[0]))),\n      title: item.nickname\n    }))\n  });\n};\n\nFollowList.propTypes = {\n  header: PropTypes.string.isRequire,\n  data: PropTypes.array.isRequire,\n  onClickMore: PropTypes.func.isRequire\n};\nexport default FollowList;","map":null,"metadata":{},"sourceType":"module"}