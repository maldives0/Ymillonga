{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\index.js\";\nimport React from 'react';\nimport initialStore from '../test/reducers/store';\nimport useSWR from 'swr';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport useMe from '../hooks/useMe';\nimport useMainPosts from '../hooks/useMainPosts';\n\nconst Home = () => {\n  const [me] = useMe();\n  const [mainPosts] = useMainPosts();\n\n  function Profile() {\n    const {\n      data\n    } = useSWR(\"globalState\", {\n      initialData: initialStore\n    });\n    const [value, updateValue] = useState((data || {}).name);\n    const nextState = produce(draft => {\n      draft.name = value;\n    });\n\n    if (!data) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"my name is \", data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: e => updateValue(e.target.value),\n        style: {\n          width: 200,\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          mutate(\"globalState\", nextState, false);\n        },\n        children: \"uppercase my name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  function Other() {\n    const {\n      data\n    } = useSWR(\"globalState\", {\n      initialData: initialStore\n    });\n    if (!data) null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ddd\",\n        marginTop: 30,\n        padding: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"another components:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 40\n        }, this), \"my name is \", data.name, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 40\n      },\n      children: [\"useSWR can share state between components:\", /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Other, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }, this), mainPosts.map(c => {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/pages/index.js"],"names":["React","initialStore","useSWR","AppLayout","PostForm","PostCard","useMe","useMainPosts","Home","me","mainPosts","Profile","data","initialData","value","updateValue","useState","name","nextState","produce","draft","e","target","width","marginRight","mutate","Other","border","marginTop","padding","map","c","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport initialStore from '../test/reducers/store';\r\nimport useSWR from 'swr';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport useMe from '../hooks/useMe';\r\nimport useMainPosts from '../hooks/useMainPosts';\r\nconst Home = () => {\r\n\r\n    const [me] = useMe();\r\n    const [mainPosts] = useMainPosts();\r\n    function Profile() {\r\n\r\n        const { data } = useSWR(\"globalState\", { initialData: initialStore });\r\n\r\n        const [value, updateValue] = useState((data || {}).name);\r\n        const nextState = produce(draft => {\r\n\r\n            draft.name = value;\r\n        });\r\n        if (!data) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>my name is {data.name}</h1>\r\n                <input\r\n                    value={value}\r\n                    onChange={e => updateValue(e.target.value)}\r\n                    style={{ width: 200, marginRight: 8 }} />\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                        mutate(\"globalState\", nextState, false)\r\n                    }}>uppercase my name</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    function Other() {\r\n        const { data } = useSWR(\"globalState\", {\r\n            initialData: initialStore\r\n        });\r\n        if (!data) null;\r\n        return (\r\n            <div style={{ border: \"1px solid #ddd\", marginTop: 30, padding: 20 }}>\r\n                <h1>another components:<br />\r\n                my name is {data.name}.</h1>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n\r\n        <AppLayout>\r\n            <div style={{ padding: 40 }}>\r\n                useSWR can share state between components:\r\n        <Profile />\r\n                <Other />\r\n            </div>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((c) => {\r\n                return (\r\n                    <PostCard key={c.id} post={c} />\r\n                );\r\n            })}\r\n\r\n        </AppLayout>\r\n    );\r\n};\r\nexport default Home; "]},"metadata":{},"sourceType":"module"}