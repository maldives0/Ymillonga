{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _initialState;\n\nimport produce from 'immer';\nexport var initialState = (_initialState = {\n  singlePost: null,\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n  reportPostLoading: false,\n  reportPostDone: false,\n  reportPostError: null\n}, _defineProperty(_initialState, \"loadPostLoading\", false), _defineProperty(_initialState, \"loadPostDone\", false), _defineProperty(_initialState, \"loadPostError\", null), _initialState);\nexport var LOAD_RELATED_POSTS_REQUEST = 'LOAD_RELATED_POSTS_REQUEST';\nexport var LOAD_RELATED_POSTS_SUCCESS = 'LOAD_RELATED_POSTS_SUCCESS';\nexport var LOAD_RELATED_POSTS_FAILURE = 'LOAD_RELATED_POSTS_FAILURE';\nexport var REPORT_POST_REQUEST = 'REPORT_POST_REQUEST';\nexport var REPORT_POST_SUCCESS = 'REPORT_POST_SUCCESS';\nexport var REPORT_POST_FAILURE = 'REPORT_POST_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport var UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport var UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n      //FE에서만 이미지를 지우고 BE에서는 간직하고 있기\n\n      case LOAD_RELATED_POSTS_REQUEST:\n      case LOAD_USER_POSTS_REQUEST:\n      case LOAD_POSTS_REQUEST:\n      case LOAD_HASHTAG_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_RELATED_POSTS_SUCCESS:\n      case LOAD_USER_POSTS_SUCCESS:\n      case LOAD_HASHTAG_POSTS_SUCCESS:\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_RELATED_POSTS_FAILURE:\n      case LOAD_USER_POSTS_FAILURE:\n      case LOAD_HASHTAG_POSTS_FAILURE:\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Likers = _post2.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = []; //대기중 파일 목록 없애기\n\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = true;\n        draft.addPostError = action.error;\n        break;\n\n      case UPDATE_POST_REQUEST:\n        draft.updatePostLoading = true;\n        draft.updatePostDone = false;\n        draft.updatePostError = null;\n        break;\n\n      case UPDATE_POST_SUCCESS:\n        draft.updatePostLoading = false;\n        draft.updatePostDone = true;\n        draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        }).content = action.data.content;\n        break;\n\n      case UPDATE_POST_FAILURE:\n        draft.updatePostLoading = false;\n        draft.updatePostError = action.error;\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = true;\n        draft.addCommentError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = draft.imagePaths.concat(action.data);\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = true;\n        draft.removePostError = action.error;\n        break;\n\n      case REPORT_POST_REQUEST:\n        draft.reportPostLoading = true;\n        draft.reportPostDone = false;\n        draft.reportPostError = null;\n        break;\n\n      case REPORT_POST_SUCCESS:\n        draft.reportPostLoading = false;\n        draft.reportPostDone = true;\n        break;\n\n      case REPORT_POST_FAILURE:\n        draft.reportPostLoading = false;\n        draft.reportPostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/reducers/post.js"],"names":["produce","initialState","singlePost","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","updatePostLoading","updatePostDone","updatePostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","reportPostLoading","reportPostDone","reportPostError","LOAD_RELATED_POSTS_REQUEST","LOAD_RELATED_POSTS_SUCCESS","LOAD_RELATED_POSTS_FAILURE","REPORT_POST_REQUEST","REPORT_POST_SUCCESS","REPORT_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","reducer","state","action","draft","type","data","error","filter","v","i","concat","length","post","find","id","PostId","Likers","push","UserId","unshift","content","Comments"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\n\r\nexport const initialState = {\r\n    singlePost: null,\r\n    mainPosts: [],\r\n    imagePaths: [],\r\n    hasMorePosts: true,\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    updatePostLoading: false,\r\n    updatePostDone: false,\r\n    updatePostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n    retweetLoading: false,\r\n    retweetDone: false,\r\n    retweetError: null,\r\n    reportPostLoading: false,\r\n    reportPostDone: false,\r\n    reportPostError: null,\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n};\r\n\r\nexport const LOAD_RELATED_POSTS_REQUEST = 'LOAD_RELATED_POSTS_REQUEST';\r\nexport const LOAD_RELATED_POSTS_SUCCESS = 'LOAD_RELATED_POSTS_SUCCESS';\r\nexport const LOAD_RELATED_POSTS_FAILURE = 'LOAD_RELATED_POSTS_FAILURE';\r\n\r\nexport const REPORT_POST_REQUEST = 'REPORT_POST_REQUEST';\r\nexport const REPORT_POST_SUCCESS = 'REPORT_POST_SUCCESS';\r\nexport const REPORT_POST_FAILURE = 'REPORT_POST_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_POST_REQUEST:\r\n            draft.loadPostLoading = true;\r\n            draft.loadPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n        case LOAD_POST_SUCCESS:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostDone = true;\r\n            draft.singlePost = action.data;\r\n            break;\r\n        case LOAD_POST_FAILURE:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostError = action.error;\r\n            break;\r\n        case REMOVE_IMAGE:\r\n            draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);//FE에서만 이미지를 지우고 BE에서는 간직하고 있기\r\n        case LOAD_RELATED_POSTS_REQUEST:\r\n        case LOAD_USER_POSTS_REQUEST:\r\n        case LOAD_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n            draft.loadPostsLoading = true;\r\n            draft.loadPostsDone = false;\r\n            draft.loadPostsError = null;\r\n            break;\r\n        case LOAD_RELATED_POSTS_SUCCESS:\r\n        case LOAD_USER_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_POSTS_SUCCESS:\r\n            draft.loadPostsLoading = false;\r\n            draft.loadPostsDone = true;\r\n            draft.mainPosts = draft.mainPosts.concat(action.data);\r\n            draft.hasMorePosts = action.data.length === 10;\r\n            break;\r\n        case LOAD_RELATED_POSTS_FAILURE:\r\n        case LOAD_USER_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_POSTS_FAILURE:\r\n            draft.loadPostsLoading = false;\r\n            draft.loadPostsError = action.error;\r\n            break;\r\n        case LIKE_POST_REQUEST:\r\n            draft.likePostLoading = true;\r\n            draft.likePostDone = false;\r\n            draft.likePostError = null;\r\n            break;\r\n        case LIKE_POST_SUCCESS: {\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Likers.push({ id: action.data.UserId });\r\n            draft.likePostLoading = false;\r\n            draft.likePostDone = true;\r\n            break;\r\n        }\r\n        case LIKE_POST_FAILURE:\r\n            draft.likePostLoading = false;\r\n            draft.likePostError = action.error;\r\n            break;\r\n        case UNLIKE_POST_REQUEST:\r\n            draft.unlikePostLoading = true;\r\n            draft.unlikePostDone = false;\r\n            draft.unlikePostError = null;\r\n            break;\r\n        case UNLIKE_POST_SUCCESS: {\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n            draft.unlikePostLoading = false;\r\n            draft.unlikePostDone = true;\r\n            break;\r\n        }\r\n        case UNLIKE_POST_FAILURE:\r\n            draft.unlikePostLoading = false;\r\n            draft.unlikePostError = action.error;\r\n            break;\r\n        case ADD_POST_REQUEST:\r\n            draft.addPostLoading = true;\r\n            draft.addPostDone = false;\r\n            draft.addPostError = null;\r\n            break;\r\n        case ADD_POST_SUCCESS:\r\n            draft.addPostLoading = false;\r\n            draft.addPostDone = true;\r\n            draft.mainPosts.unshift(action.data);\r\n            draft.imagePaths = [];//대기중 파일 목록 없애기\r\n            break;\r\n        case ADD_POST_FAILURE:\r\n            draft.addPostLoading = true;\r\n            draft.addPostError = action.error;\r\n            break;\r\n        case UPDATE_POST_REQUEST:\r\n            draft.updatePostLoading = true;\r\n            draft.updatePostDone = false;\r\n            draft.updatePostError = null;\r\n            break;\r\n        case UPDATE_POST_SUCCESS:\r\n            draft.updatePostLoading = false;\r\n            draft.updatePostDone = true;\r\n            draft.mainPosts.find((v) => v.id === action.data.PostId).content = action.data.content;\r\n            break;\r\n        case UPDATE_POST_FAILURE:\r\n            draft.updatePostLoading = false;\r\n            draft.updatePostError = action.error;\r\n            break;\r\n        case RETWEET_REQUEST:\r\n            draft.retweetLoading = true;\r\n            draft.retweetDone = false;\r\n            draft.retweetError = null;\r\n            break;\r\n        case RETWEET_SUCCESS: {\r\n            draft.retweetLoading = false;\r\n            draft.retweetDone = true;\r\n            draft.mainPosts.unshift(action.data);\r\n            break;\r\n        }\r\n        case RETWEET_FAILURE:\r\n            draft.retweetLoading = false;\r\n            draft.retweetError = action.error;\r\n            break;\r\n        case ADD_COMMENT_REQUEST:\r\n            draft.addCommentLoading = true;\r\n            draft.addCommentDone = false;\r\n            draft.addCommentError = null;\r\n            break;\r\n        case ADD_COMMENT_SUCCESS:\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentDone = true;\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Comments.unshift(action.data);\r\n            break;\r\n        case ADD_COMMENT_FAILURE:\r\n            draft.addCommentLoading = true;\r\n            draft.addCommentError = action.error;\r\n            break;\r\n        case UPLOAD_IMAGES_REQUEST:\r\n            draft.uploadImagesLoading = true;\r\n            draft.uploadImagesDone = false;\r\n            draft.uploadImagesError = null;\r\n            break;\r\n        case UPLOAD_IMAGES_SUCCESS: {\r\n            draft.imagePaths = draft.imagePaths.concat(action.data);\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesDone = true;\r\n            break;\r\n        }\r\n        case UPLOAD_IMAGES_FAILURE:\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesError = action.error;\r\n            break;\r\n        case REMOVE_POST_REQUEST:\r\n            draft.removePostLoading = true;\r\n            draft.removePostDone = false;\r\n            draft.removePostError = null;\r\n            break;\r\n        case REMOVE_POST_SUCCESS:\r\n            draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n            draft.removePostLoading = false;\r\n            draft.removePostDone = true;\r\n            break;\r\n        case REMOVE_POST_FAILURE:\r\n            draft.removePostLoading = true;\r\n            draft.removePostError = action.error;\r\n            break;\r\n        case REPORT_POST_REQUEST:\r\n            draft.reportPostLoading = true;\r\n            draft.reportPostDone = false;\r\n            draft.reportPostError = null;\r\n            break;\r\n        case REPORT_POST_SUCCESS:\r\n            draft.reportPostLoading = false;\r\n            draft.reportPostDone = true;\r\n            break;\r\n        case REPORT_POST_FAILURE:\r\n            draft.reportPostLoading = false;\r\n            draft.reportPostError = action.error;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}