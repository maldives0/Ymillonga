{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var _useState3 = useState(false),\n      editMode = _useState3[0],\n      setEditMode = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading,\n      updatePostLoading = _useSelector.updatePostLoading; // const liked = post.?Likers.find((v) => v.id === id);\n\n\n  var onLike = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n  }, [id]);\n  var onRemovePost = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onRetweet = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n  }, [id]);\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, [id]);\n  var onClickUpdate = useCallback(function () {\n    setEditMode(true);\n  }, []);\n  var onCancelUpdate = useCallback(function () {\n    setEditMode(false);\n    ;\n  }, []);\n  var onChangePost = useCallback(function (editText) {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, [post]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 27\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 45\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 45\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 39\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, _this)],\n      title: post.RetweetId ? \"\".concat(post.User.nickname, \"\\uB2D8\\uC774 \\uB9AC\\uD2B8\\uC717\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4.\") : null,\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }, _this),\n      children: post.RetweetId && post.Retweet ? /*#__PURE__*/_jsxDEV(Card, {\n        cover: post.Retweet.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Retweet.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 62\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: post.Retweet.User.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 41\n          }, _this),\n          title: post.Retweet.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            postData: post.Retweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 46\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, _this) : /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 42\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"ZhQWkSRuXc5duCQBDDsBZiiC7vw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","useSelector","useDispatch","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","FollowButton","PostCard","post","dispatch","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","editMode","setEditMode","removePostLoading","updatePostLoading","onLike","alert","onUnlike","onRemovePost","type","data","onRetweet","onToggleLike","prev","onToggleComment","onClickUpdate","onCancelUpdate","onChangePost","editText","marginBottom","Images","User","RetweetId","nickname","Retweet","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","Likers","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\r\nimport {\r\n    RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone,\r\n} from '@ant-design/icons';\r\n\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\r\nimport FollowButton from './FollowButton';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const { removePostLoading, updatePostLoading } = useSelector(state => state.post);\r\n    // const liked = post.?Likers.find((v) => v.id === id);\r\n\r\n    const onLike = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n    }, [id]);\r\n    const onUnlike = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n    }, [id]);\r\n    const onRemovePost = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        })\r\n    }, [id]);\r\n    const onRetweet = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n    }, [id]);\r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev);\r\n    }, [id]);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [id]);\r\n    const onClickUpdate = useCallback(() => {\r\n        setEditMode(true);\r\n    }, []);\r\n    const onCancelUpdate = useCallback(() => {\r\n        setEditMode(false);;\r\n    }, []);\r\n    const onChangePost = useCallback((editText) => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [post]);\r\n    return (\r\n        <div style={{ marginBottom: 20 }}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnlike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onLike} />,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                    <Popover\r\n                        key=\"more\"\r\n                        content={(\r\n                            <Button.Group>\r\n                                {id && post.User.id === id\r\n                                    ? (\r\n                                        <>\r\n                                            <Button>수정</Button>\r\n                                            <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                                        </>\r\n                                    )\r\n                                    : <Button>신고</Button>}\r\n                            </Button.Group>\r\n                        )}\r\n                    >\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                title={post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null}\r\n                extra={id && <FollowButton post={post} />}\r\n            >\r\n                {post.RetweetId && post.Retweet\r\n                    ? (\r\n                        <Card\r\n                            cover={post.Retweet.Images[0] && <PostImages images={post.Retweet.Images} />}\r\n                        >\r\n                            <Card.Meta\r\n                                avatar={<Avatar>{post.Retweet.User.nickname[0]}</Avatar>}\r\n                                title={post.Retweet.User.nickname}\r\n                                description={<PostCardContent postData={post.Retweet.content} />}\r\n                            />\r\n                        </Card>\r\n                    )\r\n                    : (\r\n                        <Card.Meta\r\n                            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                            title={post.User.nickname}\r\n                            description={<PostCardContent postData={post.content} />}\r\n                        />\r\n                    )}\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n        Likers: PropTypes.arrayOf(PropTypes.object),\r\n        RetweetId: PropTypes.number,\r\n        Retweet: PropTypes.objectOf(PropTypes.any),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}