{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"c:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport UserProfile from '../components/UserProfile';\nimport { LOAD_POSTS_REQUEST, LOAD_RELATED_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { PageHeader, message, Button } from 'antd';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { ButtonLayout, ImgWrapper } from '../components/style';\nimport { default as LoginOutlined } from '@ant-design/icons/LoginOutlined';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const mainPosts = useSelector(state => state.post.mainPosts);\n  const hasMorePosts = useSelector(state => state.post.hasMorePosts);\n  const loadPostsLoading = useSelector(state => state.post.loadPostsLoading);\n  const reportPostDone = useSelector(state => state.post.reportPostDone);\n  const reportPostError = useSelector(state => state.post.reportPostError);\n  const retweetError = useSelector(state => state.post.retweetError);\n  const me = useSelector(state => state.user.me);\n  const ignoreError = useSelector(state => state.user.ignoreError);\n  const unIgnoreError = useSelector(state => state.user.unIgnoreError);\n  const ignoreDone = useSelector(state => state.user.ignoreDone);\n  const unIgnoreDone = useSelector(state => state.user.unIgnoreDone);\n  const onClickRelatedPosts = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    dispatch({\n      type: LOAD_RELATED_POSTS_REQUEST\n    });\n  }, [id]);\n  useEffect(() => {\n    if (ignoreDone) {\n      message.success('차단되었습니다.', 5);\n    }\n\n    if (ignoreError) {\n      message.error(ignoreError, 5);\n    }\n  }, [ignoreDone, ignoreError]);\n  useEffect(() => {\n    if (unIgnoreDone) {\n      message.success('차단이 풀어졌습니다.', 5);\n    }\n\n    if (unIgnoreError) {\n      message.error('차단 풀기하는 도중에 에러가 발생했습니다.', 5);\n    }\n  }, [unIgnoreDone, unIgnoreError]);\n  useEffect(() => {\n    if (reportPostDone) {\n      message.success('신고가 접수되었습니다. 빠른 시일 내로 조치하겠습니다.', 5);\n    }\n\n    if (reportPostError) {\n      message.error(reportPostError, 5);\n    }\n  }, [reportPostDone, reportPostError]);\n  useEffect(() => {\n    if (retweetError) {\n      message.error('리트윗하는 도중에 에러가 발생했습니다.', 5);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      //쌓여있는 이벤트 메모리를 제거해주기\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\n  return ___EmotionJSX(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    },\n    __self: this\n  }, me && me.id ? ___EmotionJSX(UserProfile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 28\n    },\n    __self: this\n  }) : ___EmotionJSX(PageHeader, {\n    className: \"site-page-header\",\n    onBack: () => Router.push('/login'),\n    title: \"\\uB2F9\\uC2E0\\uC758 \\uBC00\\uB871\\uAC00 \\uACBD\\uD5D8\\uC744 \\uACF5\\uC720\\uD574\\uC8FC\\uC138\\uC694!\",\n    subTitle: \"Y millonga\\uC640 \\uD568\\uAED8 \\uD574\\uC8FC\\uC138\\uC694! \\uB85C\\uADF8\\uC778\\uC744 \\uD558\\uBA74 Y millonga\\uC5D0\\uC11C \\uC81C\\uACF5\\uD558\\uB294 \\uB2E4\\uC591\\uD55C \\uAE30\\uB2A5\\uC744 \\uB204\\uB9AC\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\",\n    backIcon: ___EmotionJSX(ButtonLayout, {\n      type: \"primary\",\n      onClick: () => Router.push('/login'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 31\n      },\n      __self: this\n    }, ___EmotionJSX(LoginOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 22\n      },\n      __self: this\n    }), \"\\uB85C\\uADF8\\uC778\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    },\n    __self: this\n  }), ___EmotionJSX(ImgWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    },\n    __self: this\n  }, ___EmotionJSX(\"img\", {\n    src: \"/images/dancers.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    },\n    __self: this\n  })), me && me.id && ___EmotionJSX(React.Fragment, null, ___EmotionJSX(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    },\n    __self: this\n  }), ___EmotionJSX(Button, {\n    style: {\n      marginBottom: 5\n    },\n    type: \"primary\",\n    loading: loadPostsLoading,\n    onClick: onClickRelatedPosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    },\n    __self: this\n  }, ___EmotionJSX(Link, {\n    href: \"/posts/related\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    },\n    __self: this\n  }, ___EmotionJSX(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    },\n    __self: this\n  }, \"\\uD314\\uB85C\\uC789 \\uAC8C\\uC2DC\\uAE00\\uB9CC \\uBCF4\\uAE30\")))), mainPosts === null || mainPosts === void 0 ? void 0 : mainPosts.map(post => {\n    return ___EmotionJSX(PostCard, {\n      key: post.id,\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      },\n      __self: this\n    });\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/pages/index.js"],"names":["React","useEffect","useCallback","useSelector","useDispatch","AppLayout","PostForm","PostCard","UserProfile","LOAD_POSTS_REQUEST","LOAD_RELATED_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","END","axios","PageHeader","message","Button","Link","Router","ButtonLayout","ImgWrapper","default","LoginOutlined","Home","dispatch","id","state","user","me","mainPosts","post","hasMorePosts","loadPostsLoading","reportPostDone","reportPostError","retweetError","ignoreError","unIgnoreError","ignoreDone","unIgnoreDone","onClickRelatedPosts","alert","type","success","error","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","addEventListener","removeEventListener","push","marginBottom","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport UserProfile from '../components/UserProfile';\r\nimport { LOAD_POSTS_REQUEST, LOAD_RELATED_POSTS_REQUEST, } from '../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { PageHeader, message, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\nimport { ButtonLayout, ImgWrapper } from '../components/style';\r\n\r\nimport {\r\n    default as LoginOutlined,\r\n} from '@ant-design/icons/LoginOutlined';\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const mainPosts = useSelector((state) => state.post.mainPosts);\r\n    const hasMorePosts = useSelector((state) => state.post.hasMorePosts);\r\n    const loadPostsLoading = useSelector((state) => state.post.loadPostsLoading);\r\n    const reportPostDone = useSelector((state) => state.post.reportPostDone);\r\n    const reportPostError = useSelector((state) => state.post.reportPostError);\r\n    const retweetError = useSelector((state) => state.post.retweetError);\r\n    const me = useSelector(state => state.user.me);\r\n    const ignoreError = useSelector(state => state.user.ignoreError);\r\n    const unIgnoreError = useSelector(state => state.user.unIgnoreError);\r\n    const ignoreDone = useSelector(state => state.user.ignoreDone);\r\n    const unIgnoreDone = useSelector(state => state.user.unIgnoreDone);\r\n\r\n\r\n    const onClickRelatedPosts = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        dispatch({\r\n            type: LOAD_RELATED_POSTS_REQUEST,\r\n        });\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (ignoreDone) {\r\n            message.success('차단되었습니다.', 5)\r\n        }\r\n        if (ignoreError) {\r\n            message.error(ignoreError, 5)\r\n        }\r\n    }, [ignoreDone, ignoreError])\r\n    useEffect(() => {\r\n        if (unIgnoreDone) {\r\n            message.success('차단이 풀어졌습니다.', 5)\r\n        }\r\n        if (unIgnoreError) {\r\n            message.error('차단 풀기하는 도중에 에러가 발생했습니다.', 5)\r\n        }\r\n    }, [unIgnoreDone, unIgnoreError])\r\n\r\n\r\n    useEffect(() => {\r\n        if (reportPostDone) {\r\n            message.success('신고가 접수되었습니다. 빠른 시일 내로 조치하겠습니다.', 5);\r\n        }\r\n        if (reportPostError) {\r\n            message.error(reportPostError, 5);\r\n        }\r\n    }, [reportPostDone, reportPostError]);\r\n    useEffect(() => {\r\n        if (retweetError) {\r\n            message.error('리트윗하는 도중에 에러가 발생했습니다.', 5);\r\n        }\r\n    }, [retweetError]);\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePosts && !loadPostsLoading) {\r\n                    const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        lastId,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            //쌓여있는 이벤트 메모리를 제거해주기\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts, hasMorePosts, loadPostsLoading]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            {me && me.id ? <UserProfile /> : (\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    onBack={() => Router.push('/login')}\r\n                    title=\"당신의 밀롱가 경험을 공유해주세요!\"\r\n                    subTitle=\"Y millonga와 함께 해주세요! 로그인을 하면 Y millonga에서 제공하는 다양한 기능을 누리실 수 있습니다.\"\r\n                    backIcon={<ButtonLayout\r\n                        type=\"primary\"\r\n                        onClick={() => Router.push('/login')}\r\n                    ><LoginOutlined />로그인</ButtonLayout>}\r\n                />\r\n            )}\r\n            <ImgWrapper>\r\n                <img src=\"/images/dancers.png\" /></ImgWrapper>\r\n\r\n            {me && me.id &&\r\n                (<>\r\n                    <PostForm />\r\n                    <Button\r\n                        style={{ marginBottom: 5 }}\r\n                        type=\"primary\"\r\n                        loading={loadPostsLoading}\r\n                        onClick={onClickRelatedPosts}>\r\n                        <Link href='/posts/related'>\r\n                            <a>팔로잉 게시글만 보기</a>\r\n                        </Link></Button>\r\n                </>)}\r\n\r\n            {mainPosts?.map((post) => {\r\n                return (\r\n                    <PostCard key={post.id} post={post} />\r\n                );\r\n            })}\r\n        </AppLayout>\r\n    );\r\n};\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Home; "]},"metadata":{},"sourceType":"module"}