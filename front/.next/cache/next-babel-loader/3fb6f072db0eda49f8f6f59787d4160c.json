{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(signup),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignup),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport axios from 'axios';\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction login(action) {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('saga login', action); // const result = yield call(loginAPI);\n\n          _context.next = 4;\n          return delay(1000);\n\n        case 4:\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\n;\n\nfunction signupAPI() {// return axios.post('/user/signup',data);\n}\n\nfunction signup(action) {\n  return _regeneratorRuntime.wrap(function signup$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 12;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\n;\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signup);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchSignup), fork(watchLogin)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/sagas/user.js"],"names":["login","signup","watchSignup","watchLogin","userSaga","axios","all","call","delay","fork","put","takeLatest","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loginAPI","data","post","action","console","log","type","error","response","signupAPI"],"mappings":";;oDAwBUA,K;qDAoBAC,M;qDAeAC,W;qDAGAC,U;qDAGeC,Q;;AAjEzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AAEA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,eARJ,EASIC,eATJ,EAUIC,eAVJ,EAWIC,eAXJ,EAYIC,eAZJ,EAaIC,gBAbJ,EAcIC,gBAdJ,EAeIC,gBAfJ,QAgBO,kBAhBP;;AAkBA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOvB,KAAK,CAACwB,IAAN,CAAW,aAAX,EAA0BD,IAA1B,CAAP;AACH;;AACD,SAAU5B,KAAV,CAAgB8B,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B,EAFR,CAGQ;;AAHR;AAIQ,iBAAMtB,KAAK,CAAC,IAAD,CAAX;;AAJR;AAAA;AAKQ,iBAAME,GAAG,CAAC;AACNuB,YAAAA,IAAI,EAAEhB,cADA;AAENW,YAAAA,IAAI,EAAEE,MAAM,CAACF;AAFP,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUQG,UAAAA,OAAO,CAACG,KAAR;AAVR;AAWQ,iBAAMxB,GAAG,CAAC;AACNuB,YAAAA,IAAI,EAAEf,eADA;AAENgB,YAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAaP;AAFd,WAAD,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBC;;AACD,SAASQ,SAAT,GAAqB,CACjB;AACH;;AACD,SAAUnC,MAAV,CAAiB6B,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQ,iBAAMtB,KAAK,CAAC,IAAD,CAAX;;AAHR;AAAA;AAIQ,iBAAME,GAAG,CAAC;AACNuB,YAAAA,IAAI,EAAEV;AADA,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQQQ,UAAAA,OAAO,CAACG,KAAR;AARR;AASQ,iBAAMxB,GAAG,CAAC;AACNuB,YAAAA,IAAI,EAAEZ,eADA;AAENa,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaP;AAFd,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcC;;AACD,SAAU1B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMS,UAAU,CAACW,eAAD,EAAkBrB,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUE,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMQ,UAAU,CAACK,cAAD,EAAiBhB,KAAjB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,eAAe,SAAUI,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAME,GAAG,CAAC,CACNG,IAAI,CAACP,WAAD,CADE,EAENO,IAAI,CAACN,UAAD,CAFE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios';\r\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction loginAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\nfunction* login(action) {\r\n    try {\r\n        console.log('saga login', action);\r\n        // const result = yield call(loginAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n};\r\nfunction signupAPI() {\r\n    // return axios.post('/user/signup',data);\r\n}\r\nfunction* signup(action) {\r\n    try {\r\n        // const result = yield call(signupAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n};\r\nfunction* watchSignup() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchSignup),\r\n        fork(watchLogin),\r\n    ]);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}