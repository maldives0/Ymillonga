{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  // console.log('loggerMiddleware', action);\n  return next(action);\n};\n\nconst configureStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [loggerMiddleware, sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middleware)) : composeWithDevTools(applyMiddleware(...middleware));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","configureStore","context","sagaMiddleware","middleware","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACvE;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAHD;;AAIA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAEhC,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,UAAU,GAAG,CAACR,gBAAD,EAAmBO,cAAnB,CAAnB;AACA,QAAME,QAAQ,GAAG,QACbf,OAAO,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CADM,GAEbZ,mBAAmB,CAACJ,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAFvB;AAIA,QAAME,KAAK,GAAGjB,WAAW,CAACK,OAAD,EAAUW,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBb,QAAnB,CAAjB;AACA,SAAOW,KAAP;AACH,CAXD;;AAYA,MAAMG,OAAO,GAAGlB,aAAa,CAACU,cAAD,EAAiB;AAC1CS,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAGA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n    // console.log('loggerMiddleware', action);\r\n    return next(action);\r\n};\r\nconst configureStore = (context) => {\r\n\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middleware = [loggerMiddleware, sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production' ?\r\n        compose(applyMiddleware(...middleware)) :\r\n        composeWithDevTools(applyMiddleware(...middleware)\r\n        );\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development'\r\n});\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}