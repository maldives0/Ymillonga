{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 45\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 45\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 39\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, _this)],\n      title: post.RetweetId ? \"\".concat(post.User.nickname, \"\\uB2D8\\uC774 \\uB9AC\\uD2B8\\uC717\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4.\") : null,\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 30\n      }, _this),\n      children: post.RetweetId && post.Retweet ? /*#__PURE__*/_jsxDEV(Card, {\n        cover: post.Retweet.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Retweet.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 62\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: post.Retweet.User.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }, _this),\n          title: post.Retweet.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            postData: post.Retweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 46\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, _this) : /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 42\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"lyO9+vcNipOnUaNCdYLi8vUEJjI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","useSelector","useDispatch","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","FollowButton","PostCard","post","dispatch","state","removePostLoading","commentFormOpened","setCommentFormOpened","id","user","me","onLike","alert","type","data","onUnlike","onToggleComment","prev","onRemovePost","onRetweet","liked","Likers","find","v","marginBottom","Images","User","RetweetId","nickname","Retweet","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\r\nimport {\r\n    RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone,\r\n} from '@ant-design/icons';\r\n\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\r\nimport FollowButton from './FollowButton';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const { removePostLoading } = useSelector((state) => state.post);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const id = useSelector((state) => state.user.me?.id);\r\n\r\n    const onLike = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: LIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n    const onUnlike = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: UNLIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n\r\n    const onRemovePost = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n\r\n    const onRetweet = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: RETWEET_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n\r\n    const liked = post.Likers.find((v) => v.id === id);\r\n    return (\r\n        <div style={{ marginBottom: 20 }}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnlike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onLike} />,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                    <Popover\r\n                        key=\"more\"\r\n                        content={(\r\n                            <Button.Group>\r\n                                {id && post.User.id === id\r\n                                    ? (\r\n                                        <>\r\n                                            <Button>수정</Button>\r\n                                            <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                                        </>\r\n                                    )\r\n                                    : <Button>신고</Button>}\r\n                            </Button.Group>\r\n                        )}\r\n                    >\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                title={post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null}\r\n                extra={id && <FollowButton post={post} />}\r\n            >\r\n                {post.RetweetId && post.Retweet\r\n                    ? (\r\n                        <Card\r\n                            cover={post.Retweet.Images[0] && <PostImages images={post.Retweet.Images} />}\r\n                        >\r\n                            <Card.Meta\r\n                                avatar={<Avatar>{post.Retweet.User.nickname[0]}</Avatar>}\r\n                                title={post.Retweet.User.nickname}\r\n                                description={<PostCardContent postData={post.Retweet.content} />}\r\n                            />\r\n                        </Card>\r\n                    )\r\n                    : (\r\n                        <Card.Meta\r\n                            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                            title={post.User.nickname}\r\n                            description={<PostCardContent postData={post.content} />}\r\n                        />\r\n                    )}\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n        Likers: PropTypes.arrayOf(PropTypes.object),\r\n        RetweetId: PropTypes.number,\r\n        Retweet: PropTypes.objectOf(PropTypes.any),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}