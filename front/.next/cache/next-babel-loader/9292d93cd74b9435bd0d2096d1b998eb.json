{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Layout, Menu, Row, Col, Tooltip } from 'antd';\nimport { default as HomeOutlined } from '@ant-design/icons/HomeOutlined';\nimport { default as LoginOutlined } from '@ant-design/icons/LoginOutlined';\nimport { default as LogoutOutlined } from '@ant-design/icons/LogoutOutlined';\nimport { default as UserOutlined } from '@ant-design/icons/UserOutlined';\nimport { default as GithubOutlined } from '@ant-design/icons/GithubOutlined';\nimport { default as QuestionCircleOutlined } from '@ant-design/icons/QuestionCircleOutlined';\nimport { GlobalLayout, InputSearch, Logo } from './style';\nimport useInput from '../hooks/useInput';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CHANGE_MENUKEY_REQUEST, LOG_OUT_REQUEST } from '../reducers/user';\nimport { initialState } from \"../reducers/user\";\nimport useSWR, { mutate, trigger } from \"swr\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\n\nconst AppLayout = ({\n  children\n}) => {\n  const {\n    data\n  } = useSWR(\"globalState\", {\n    initialData: initialState\n  }, {\n    revalidateOnFocus: true\n  });\n  const me = useSelector(state => state.user.me);\n  const dispatch = useDispatch();\n  const {\n    0: currentKey,\n    1: setCurrentKey\n  } = useState(data === null || data === void 0 ? void 0 : data.me.menuKey);\n  const [searchInput, onChangeSearchInput] = useInput('');\n  const onSearch = useCallback(() => {\n    Router.push(`/hashtag/${searchInput}`);\n  }, [searchInput]);\n  const onClickDefaultKey = useCallback(e => {\n    mutate(\"globalState\", _objectSpread(_objectSpread({}, data), {}, {\n      me: {\n        menuKey: e.key\n      }\n    }), false);\n\n    if (me && me.id && e.key !== '2') {\n      dispatch({\n        type: CHANGE_MENUKEY_REQUEST,\n        data: e.key\n      });\n    }\n\n    trigger(\"globalState\");\n  }, [me && me.id]);\n  useEffect(() => {\n    if (me && me.id) {\n      setCurrentKey(data === null || data === void 0 ? void 0 : data.me.menuKey);\n    }\n  }, [me && me.id]);\n  const onLogout = useCallback(() => {\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n  }, []);\n  return ___EmotionJSX(Layout, {\n    className: \"layout\"\n  }, ___EmotionJSX(GlobalLayout, null), ___EmotionJSX(Header, {\n    className: \"layout-background-header\"\n  }, ___EmotionJSX(Row, {\n    justify: \"space-between\"\n  }, ___EmotionJSX(Col, {\n    xs: 3,\n    sm: 2\n  }, ___EmotionJSX(Logo, null, ___EmotionJSX(Image, {\n    src: \"/images/ic_logo.png\",\n    alt: \"logo\",\n    width: 70,\n    height: 70\n  }))), ___EmotionJSX(Col, {\n    xs: 13,\n    sm: 16,\n    md: 17\n  }, ___EmotionJSX(Menu, {\n    theme: \"dark\",\n    onClick: onClickDefaultKey,\n    selectedKeys: [currentKey],\n    mode: \"horizontal\"\n  }, ___EmotionJSX(Menu.Item, {\n    key: \"1\",\n    icon: ___EmotionJSX(HomeOutlined, null)\n  }, ___EmotionJSX(Link, {\n    href: \"/\"\n  }, ___EmotionJSX(\"a\", null, \"Home\"))), ___EmotionJSX(Menu.Item, {\n    key: \"2\",\n    icon: me && me.id ? ___EmotionJSX(LogoutOutlined, null) : ___EmotionJSX(LoginOutlined, null)\n  }, me && me.id ? ___EmotionJSX(Link, {\n    href: \"/login\"\n  }, ___EmotionJSX(\"a\", {\n    onClick: onLogout\n  }, \"Logout\")) : ___EmotionJSX(Link, {\n    href: \"/login\"\n  }, ___EmotionJSX(\"a\", null, \"Login\"))), ___EmotionJSX(Menu.Item, {\n    key: \"3\",\n    icon: ___EmotionJSX(UserOutlined, null)\n  }, ___EmotionJSX(Link, {\n    href: \"/profile\"\n  }, ___EmotionJSX(\"a\", null, \"Profile\")), \" \"), ___EmotionJSX(Menu.Item, {\n    key: \"4\",\n    icon: ___EmotionJSX(QuestionCircleOutlined, null)\n  }, ___EmotionJSX(Link, {\n    href: \"/about\"\n  }, ___EmotionJSX(\"a\", null, \"About\")), \" \"))), ___EmotionJSX(Col, {\n    xs: 8,\n    sm: 6,\n    md: 5\n  }, ___EmotionJSX(Tooltip, {\n    placement: \"bottom\",\n    title: \"\\uD574\\uC2DC\\uD14C\\uADF8\\uB97C \\uAC80\\uC0C9\\uD574\\uBCF4\\uC138\\uC694!\"\n  }, ___EmotionJSX(InputSearch, {\n    enterButton: true,\n    value: searchInput,\n    onChange: onChangeSearchInput,\n    onSearch: onSearch\n  }))))), ___EmotionJSX(Content, {\n    className: \"layout-background\"\n  }, children), ___EmotionJSX(Footer, {\n    className: \"layout-foot\",\n    justify: \"start\"\n  }, ___EmotionJSX(Col, {\n    span: 24,\n    offset: 2\n  }, ___EmotionJSX(\"a\", {\n    href: \"https://github.com/maldives0/ymillonga-sns\",\n    target: \"_blank\",\n    rel: \"noreferrer noopener\"\n  }, \"\\xA9 2020 Juyoung Jung.  All rights reserved. \", ___EmotionJSX(GithubOutlined, null), \" \"))));\n};\n\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default AppLayout;","map":null,"metadata":{},"sourceType":"module"}