{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useSWR from 'swr';\nimport dummyPost from '../swr/post';\nimport useInput from '../hooks/useInput';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSWR = useSWR(\"dummyPostState\", {\n    initialData: dummyPost\n  }),\n      postData = _useSWR.data;\n\n  var _useState = useState((postData || {}).mainPosts),\n      mainPosts = _useState[0],\n      setMainPosts = _useState[1];\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var imageInput = useRef(); // const onChangeText =useCallback(()=>{\n  // },[]);\n\n  var onChangeImages = useCallback(function (e) {\n    console.log('clickImgInfo', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {};\n  }, []);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) alert('게시글을 작성하세요.');\n    imagePaths.forEach(function (p) {\n      FormData.append('image', p);\n    });\n    FormData.append('content', text);\n  }, [text, imagePaths]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"gh\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, _this) // <Form\n  //     style={{ margin: '10px 0 20px' }}\n  //     encType=\"multipart/form-data\"\n  //     onFinish={onSubmit}\n  // >\n  //     <Input.TextArea\n  //         value={text}\n  //         onChange={onChangeText}\n  //         maxLength={140}\n  //         placeholder=\"오늘은 어떤 일이 있었나요?\"\n  //     />\n  //     <div>\n  //         <input type=\"file\" name=\"image\" multiple hidden\n  //             ref={imageInput} onChange={onChangeImages} />\n  //         <Button onClick={onClickImageUpload}>이미지 업로드하기</Button>\n  //         <Button type=\"primary\" style={{ float: 'right' }}\n  //             htmlType=\"submit\">게시하기</Button>\n  //     </div>\n  //     <div>\n  //         {imagePaths.map((v, i) => {\n  //             return (\n  //                 <div key={v} style={{ display: 'inline-block' }}>\n  //                     <img src={v} style={{ width: '200px' }} alt={v} />\n  //                     <div>\n  //                         <Button\n  //                             onClick={onRemoveImage(i)}>삭제하기</Button>\n  //                     </div>\n  //                 </div>\n  //             );\n  //         })}\n  //     </div>\n  // </Form>\n  ;\n};\n\n_s(PostForm, \"R+GwsUUSTNTC4xdsIQ9n44Z8mHM=\", false, function () {\n  return [useSWR, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/PostForm.js"],"names":["React","useRef","useCallback","useState","Form","Input","Button","useSWR","dummyPost","useInput","PostForm","initialData","postData","data","mainPosts","setMainPosts","text","onChangeText","setText","imageInput","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","onClickImageUpload","current","click","onRemoveImage","index","onSubmit","trim","alert","imagePaths","p"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,QAArC,QAAqD,OAArD;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AAEA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,gBACQH,MAAM,CAAC,gBAAD,EAAmB;AAAEI,IAAAA,WAAW,EAAEH;AAAf,GAAnB,CADd;AAAA,MACLI,QADK,WACXC,IADW;;AAAA,kBAEeV,QAAQ,CAAC,CAACS,QAAQ,IAAI,EAAb,EAAiBE,SAAlB,CAFvB;AAAA,MAEZA,SAFY;AAAA,MAEDC,YAFC;;AAAA,kBAGmBN,QAAQ,CAAC,EAAD,CAH3B;AAAA;AAAA,MAGZO,IAHY;AAAA,MAGNC,YAHM;AAAA,MAGQC,OAHR;;AAInB,MAAMC,UAAU,GAAGlB,MAAM,EAAzB,CAJmB,CAKnB;AAEA;;AACA,MAAMmB,cAAc,GAAGlB,WAAW,CAAC,UAACmB,CAAD,EAAO;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,CAAC,CAACG,MAAF,CAASC,KAArC;AACA,QAAMC,aAAa,GAAG,IAAIC,QAAJ,EAAtB;AACA,OAAGC,OAAH,CAAWC,IAAX,CAAgBR,CAAC,CAACG,MAAF,CAASC,KAAzB,EAAgC,UAACK,CAAD,EAAO;AACnCJ,MAAAA,aAAa,CAACK,MAAd,CAAqB,OAArB,EAA8BD,CAA9B;AACH,KAFD;AAGH,GANiC,EAM/B,EAN+B,CAAlC;AAQA,MAAME,kBAAkB,GAAG9B,WAAW,CAAC,YAAM;AACzCiB,IAAAA,UAAU,CAACc,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACf,UAAU,CAACc,OAAZ,CAFmC,CAAtC;AAGA,MAAME,aAAa,GAAGjC,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAW,YAAM,CAElD,CAFiC;AAAA,GAAD,EAE9B,EAF8B,CAAjC;AAGA,MAAMC,QAAQ,GAAGnC,WAAW,CAAC,YAAM;AAC/B,QAAI,CAACc,IAAD,IAAS,CAACA,IAAI,CAACsB,IAAL,EAAd,EAA2BC,KAAK,CAAC,aAAD,CAAL;AAC3BC,IAAAA,UAAU,CAACZ,OAAX,CAAmB,UAACa,CAAD,EAAO;AACtBd,MAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBU,CAAzB;AACH,KAFD;AAGAd,IAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2Bf,IAA3B;AAEH,GAP2B,EAOzB,CAACA,IAAD,EAAOwB,UAAP,CAPyB,CAA5B;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCJ;AAmCH,CAjED;;GAAM9B,Q;UACyBH,M,EAEWE,Q;;;KAHpCC,Q;AAkEN,eAAeA,QAAf","sourcesContent":["import React, { useRef, useCallback, useState } from 'react';\r\n\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport useSWR from 'swr';\r\nimport dummyPost from '../swr/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\n\r\n\r\nconst PostForm = () => {\r\n    const { data: postData } = useSWR(\"dummyPostState\", { initialData: dummyPost });\r\n    const [mainPosts, setMainPosts] = useState((postData || {}).mainPosts);\r\n    const [text, onChangeText, setText] = useInput('');\r\n    const imageInput = useRef();\r\n    // const onChangeText =useCallback(()=>{\r\n\r\n    // },[]);\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('clickImgInfo', e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f) => {\r\n            imageFormData.append('image', f);\r\n        })\r\n    }, []);\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n    const onRemoveImage = useCallback((index) => () => {\r\n\r\n    }, []);\r\n    const onSubmit = useCallback(() => {\r\n        if (!text || !text.trim()) alert('게시글을 작성하세요.');\r\n        imagePaths.forEach((p) => {\r\n            FormData.append('image', p);\r\n        });\r\n        FormData.append('content', text);\r\n\r\n    }, [text, imagePaths]);\r\n    return (\r\n        <div>gh</div>\r\n        // <Form\r\n        //     style={{ margin: '10px 0 20px' }}\r\n        //     encType=\"multipart/form-data\"\r\n        //     onFinish={onSubmit}\r\n        // >\r\n        //     <Input.TextArea\r\n        //         value={text}\r\n        //         onChange={onChangeText}\r\n        //         maxLength={140}\r\n        //         placeholder=\"오늘은 어떤 일이 있었나요?\"\r\n        //     />\r\n        //     <div>\r\n        //         <input type=\"file\" name=\"image\" multiple hidden\r\n        //             ref={imageInput} onChange={onChangeImages} />\r\n        //         <Button onClick={onClickImageUpload}>이미지 업로드하기</Button>\r\n        //         <Button type=\"primary\" style={{ float: 'right' }}\r\n        //             htmlType=\"submit\">게시하기</Button>\r\n        //     </div>\r\n        //     <div>\r\n        //         {imagePaths.map((v, i) => {\r\n        //             return (\r\n        //                 <div key={v} style={{ display: 'inline-block' }}>\r\n        //                     <img src={v} style={{ width: '200px' }} alt={v} />\r\n        //                     <div>\r\n        //                         <Button\r\n        //                             onClick={onRemoveImage(i)}>삭제하기</Button>\r\n        //                     </div>\r\n        //                 </div>\r\n        //             );\r\n        //         })}\r\n        //     </div>\r\n        // </Form>\r\n    );\r\n};\r\nexport default PostForm; "]},"metadata":{},"sourceType":"module"}