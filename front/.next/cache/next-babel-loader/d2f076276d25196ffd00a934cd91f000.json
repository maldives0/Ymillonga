{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\login.js\";\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport LoginForm from '../components/LoginForm';\nimport UserProfile from '../components/UserProfile';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST, CHANGE_MENUKEY_REQUEST } from '../reducers/user';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user); // useEffect(() => {\n  //     if (me && me.id) {\n  //         dispatch({\n  //             type: CHANGE_MENUKEY_REQUEST,\n  //             data: '1',\n  //         });\n  //     }\n  // }, [me && me.id]);\n\n  return ___EmotionJSX(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    },\n    __self: this\n  }, me && me.id ? ___EmotionJSX(UserProfile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 28\n    },\n    __self: this\n  }) : ___EmotionJSX(LoginForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('getServerSideProps start');\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/pages/login.js"],"names":["React","useEffect","AppLayout","LoginForm","UserProfile","useDispatch","useSelector","END","axios","wrapper","LOAD_MY_INFO_REQUEST","CHANGE_MENUKEY_REQUEST","Login","dispatch","me","state","user","id","getServerSideProps","context","console","log","cookie","req","headers","defaults","Cookie","store","type","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA6D,kBAA7D;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAASR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B,CAFgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACI,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,EAAE,IAAIA,EAAE,CAACG,EAAT,GAAc,cAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAAgC,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,CADJ;AAKH,CAhBD;;AAkBA,OAAO,MAAMC,kBAAkB,GAAGT,OAAO,CAACS,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5EC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,QAAMC,MAAM,GAAGH,OAAO,CAACI,GAAR,GAAcJ,OAAO,CAACI,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAd,EAAAA,KAAK,CAACiB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIP,OAAO,CAACI,GAAR,IAAeD,MAAnB,EAA2B;AACvBd,IAAAA,KAAK,CAACiB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACH;;AACDH,EAAAA,OAAO,CAACQ,KAAR,CAAcd,QAAd,CAAuB;AACnBe,IAAAA,IAAI,EAAElB;AADa,GAAvB;AAIAS,EAAAA,OAAO,CAACQ,KAAR,CAAcd,QAAd,CAAuBN,GAAvB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,QAAMF,OAAO,CAACQ,KAAR,CAAcE,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAdiC,CAA3B;AAeP,eAAelB,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport LoginForm from '../components/LoginForm';\r\nimport UserProfile from '../components/UserProfile';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport wrapper from '../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST, CHANGE_MENUKEY_REQUEST } from '../reducers/user';\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector(state => state.user);\r\n    // useEffect(() => {\r\n    //     if (me && me.id) {\r\n    //         dispatch({\r\n    //             type: CHANGE_MENUKEY_REQUEST,\r\n    //             data: '1',\r\n    //         });\r\n    //     }\r\n    // }, [me && me.id]);\r\n    return (\r\n        <AppLayout>\r\n            {me && me.id ? <UserProfile /> : <LoginForm />}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    console.log('getServerSideProps start');\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n\r\n    context.store.dispatch(END);\r\n    console.log('getServerSideProps end');\r\n    await context.store.sagaTask.toPromise();\r\n});\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}