{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from '../utils/produce';\nexport var initialStore = {\n  name: \"John\"\n};\nexport var initialState = {\n  signupData: {},\n  loginData: {},\n  me: null,\n  isLoggedIn: false,\n  logInLoading: false,\n  logInDone: false,\n  logInError: null\n};\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: 'momo',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: 'aa'\n    }, {\n      nickname: 'bb'\n    }, {\n      nickname: 'cc'\n    }],\n    Followers: [{\n      nickname: 'aa'\n    }, {\n      nickname: 'bb'\n    }, {\n      nickname: 'cc'\n    }]\n  });\n};\n\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // const reducer = (state = initialState, action) => produce(state, (draft) => {\n//     switch (action.type) {\n//         case LOG_IN_REQUEST:\n//             draft.logInLoading = true;\n//             draft.logInDone = false;\n//             draft.logInError = null;\n//             break;\n//         case LOG_IN_SUCCESS:\n//             draft.logInLoading = false;\n//             draft.isLoggedIn = action.data.isLoggedIn;\n//             draft.me = dummyUser(action.data);\n//             draft.logInDone = true;\n//             break;\n//         case LOG_IN_FAILURE:\n//             draft.logInLoading = false;\n//             draft.logInError = acton.error;\n//             break;\n//         default:\n//             break;\n//     }\n// });\n// export default reducer;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/reducers/user.js"],"names":["produce","initialStore","name","initialState","signupData","loginData","me","isLoggedIn","logInLoading","logInDone","logInError","dummyUser","data","nickname","id","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,kBAApB;AAEA,OAAO,IAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAArB;AACP,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,EADY;AAExBC,EAAAA,SAAS,EAAE,EAFa;AAGxBC,EAAAA,EAAE,EAAE,IAHoB;AAIxBC,EAAAA,UAAU,EAAE,KAJY;AAKxBC,EAAAA,YAAY,EAAE,KALU;AAMxBC,EAAAA,SAAS,EAAE,KANa;AAOxBC,EAAAA,UAAU,EAAE;AAPY,CAArB;;AAUP,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD;AAAA,yCACXA,IADW;AAEdC,IAAAA,QAAQ,EAAE,MAFI;AAGdC,IAAAA,EAAE,EAAE,CAHU;AAIdC,IAAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,EAAE,EAAE;AAAN,KAAD,CAJO;AAKdE,IAAAA,UAAU,EAAE,CAAC;AAAEH,MAAAA,QAAQ,EAAE;AAAZ,KAAD,EAAqB;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAArB,EAAyC;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAzC,CALE;AAMdI,IAAAA,SAAS,EAAE,CAAC;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAD,EAAqB;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAArB,EAAyC;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAzC;AANG;AAAA,CAAlB;;AAUA,OAAO,IAAMK,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB,C,CAEP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import produce from '../utils/produce';\r\n\r\nexport const initialStore = { name: \"John\" };\r\nexport const initialState = {\r\n    signupData: {},\r\n    loginData: {},\r\n    me: null,\r\n    isLoggedIn: false,\r\n    logInLoading: false,\r\n    logInDone: false,\r\n    logInError: null,\r\n\r\n};\r\nconst dummyUser = (data) => ({\r\n    ...data,\r\n    nickname: 'momo',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: 'aa' }, { nickname: 'bb' }, { nickname: 'cc' },],\r\n    Followers: [{ nickname: 'aa' }, { nickname: 'bb' }, { nickname: 'cc' },],\r\n});\r\n\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\n// const reducer = (state = initialState, action) => produce(state, (draft) => {\r\n//     switch (action.type) {\r\n//         case LOG_IN_REQUEST:\r\n//             draft.logInLoading = true;\r\n//             draft.logInDone = false;\r\n\r\n//             draft.logInError = null;\r\n//             break;\r\n//         case LOG_IN_SUCCESS:\r\n//             draft.logInLoading = false;\r\n//             draft.isLoggedIn = action.data.isLoggedIn;\r\n//             draft.me = dummyUser(action.data);\r\n//             draft.logInDone = true;\r\n//             break;\r\n//         case LOG_IN_FAILURE:\r\n//             draft.logInLoading = false;\r\n//             draft.logInError = acton.error;\r\n//             break;\r\n//         default:\r\n//             break;\r\n//     }\r\n// });\r\n// export default reducer;"]},"metadata":{},"sourceType":"module"}