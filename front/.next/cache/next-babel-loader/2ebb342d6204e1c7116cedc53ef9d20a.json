{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport LoginForm from '../components/LoginForm';\nimport { Typography } from 'antd';\nimport { ImageLayout } from '../components/style';\nimport { useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport Router from 'next/router';\nimport { initialState } from \"../reducers/user\";\nimport useSWR, { mutate, trigger } from \"swr\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Title = Typography.Title;\n\nconst Login = () => {\n  const me = useSelector(state => state.user.me);\n  const {\n    data: menuKeyData\n  } = useSWR(\"globalState\", {\n    initialData: initialState\n  }, {\n    revalidateOnFocus: true\n  });\n  useEffect(() => {\n    if (me && me.id) {\n      mutate(\"globalState\", _objectSpread(_objectSpread({}, menuKeyData), {}, {\n        me: {\n          menuKey: '1'\n        }\n      }), false);\n      Router.replace('/');\n      trigger(\"globalState\");\n    }\n  }, [me]);\n  return ___EmotionJSX(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    },\n    __self: this\n  }, me && me.id && ___EmotionJSX(LoginForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    },\n    __self: this\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/pages/login.js"],"names":["React","useEffect","AppLayout","LoginForm","Typography","ImageLayout","useSelector","END","axios","wrapper","LOAD_MY_INFO_REQUEST","Router","initialState","useSWR","mutate","trigger","Title","Login","me","state","user","data","menuKeyData","initialData","revalidateOnFocus","id","menuKey","replace","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,oBAAT,QAAsC,kBAAtC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,IAAiBC,MAAjB,EAAyBC,OAAzB,QAAwC,KAAxC;;AAEA,MAAMC,KAAK,GAAGZ,UAAU,CAACY,KAAzB;;AACA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAMC,EAAE,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,EAArB,CAAtB;AAEA,QAAM;AAAEG,IAAAA,IAAI,EAAEC;AAAR,MAAwBT,MAAM,CAAC,aAAD,EAAgB;AAAEU,IAAAA,WAAW,EAAEX;AAAf,GAAhB,EAA+C;AAAEY,IAAAA,iBAAiB,EAAE;AAArB,GAA/C,CAApC;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,EAAE,IAAIA,EAAE,CAACO,EAAb,EAAiB;AACbX,MAAAA,MAAM,CAAC,aAAD,kCACCQ,WADD;AAEFJ,QAAAA,EAAE,EAAE;AAAEQ,UAAAA,OAAO,EAAE;AAAX;AAFF,UAGH,KAHG,CAAN;AAIAf,MAAAA,MAAM,CAACgB,OAAP,CAAe,GAAf;AACAZ,MAAAA,OAAO,CAAC,aAAD,CAAP;AACH;AACJ,GATQ,EASN,CAACG,EAAD,CATM,CAAT;AAWA,SACI,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,EAAE,IAAIA,EAAE,CAACO,EAAT,IAAe,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,CADJ;AAKH,CApBD;;AAsBA,OAAO,MAAMG,kBAAkB,GAAGnB,OAAO,CAACmB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAE5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAtB,EAAAA,KAAK,CAACyB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACvBtB,IAAAA,KAAK,CAACyB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACH;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAE3B;AADa,GAAvB;AAGAmB,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB7B,GAAvB;AAEA,QAAMsB,OAAO,CAACM,KAAR,CAAcG,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAbiC,CAA3B;AAcP,eAAetB,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport LoginForm from '../components/LoginForm';\r\nimport { Typography } from 'antd';\r\nimport { ImageLayout } from '../components/style';\r\nimport { useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport wrapper from '../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST, } from '../reducers/user';\r\nimport Router from 'next/router';\r\nimport { initialState } from \"../reducers/user\";\r\nimport useSWR, { mutate, trigger } from \"swr\";\r\n\r\nconst Title = Typography.Title;\r\nconst Login = () => {\r\n    const me = useSelector(state => state.user.me);\r\n\r\n    const { data: menuKeyData } = useSWR(\"globalState\", { initialData: initialState }, { revalidateOnFocus: true });\r\n    useEffect(() => {\r\n        if (me && me.id) {\r\n            mutate(\"globalState\", {\r\n                ...menuKeyData,\r\n                me: { menuKey: '1' }\r\n            }, false);\r\n            Router.replace('/');\r\n            trigger(\"globalState\");\r\n        }\r\n    }, [me]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            {me && me.id && <LoginForm />}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n\r\n    await context.store.sagaTask.toPromise();\r\n});\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}