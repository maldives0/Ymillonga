{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport { useRouter } from 'next/router';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar Hashtag = function Hashtag() {\n  var router = useRouter();\n  var tag = router.query.tag; //next 다이나믹 라우팅으로 특정 사용자id값을 query로 가져올 수 있다\n\n  var dispatch = useDispatch();\n  var mainPosts = useSelector(function (state) {\n    return state.user.mainPosts;\n  });\n  var hasMorePosts = useSelector(function (state) {\n    return state.user.hasMorePosts;\n  });\n  var loadPostsLoading = useSelector(function (state) {\n    return state.user.loadPostsLoading;\n  });\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: lastId,\n            data: tag\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      //쌓여있는 이벤트 메모리를 제거해주기\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts === null || mainPosts === void 0 ? void 0 : mainPosts.length, hasMorePosts, loadPostsLoading, tag]); //og:카카오톡에 나오는 정보\n\n  return ___EmotionJSX(AppLayout, null, mainPosts === null || mainPosts === void 0 ? void 0 : mainPosts.map(function (post) {\n    return ___EmotionJSX(PostCard, {\n      key: post.id,\n      post: post\n    });\n  }));\n};\n\nexport var __N_SSP = true;\nexport default Hashtag;","map":null,"metadata":{},"sourceType":"module"}