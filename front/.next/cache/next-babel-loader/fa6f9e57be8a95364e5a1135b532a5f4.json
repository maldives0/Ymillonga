{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostCardContent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Input, Button } from 'antd';\nvar TextArea = Input.TextArea;\n\nvar PostCardContent = function PostCardContent(_ref) {\n  _s();\n\n  var postData = _ref.postData,\n      editMode = _ref.editMode,\n      onCalcelUpdate = _ref.onCalcelUpdate,\n      onChangePost = _ref.onChangePost;\n\n  var _useState = useState(postData),\n      editText = _useState[0],\n      setEditText = _useState[1];\n\n  var onChangeText = useCallback(function (e) {\n    setEditText(e.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        value: editText,\n        onChange: onChangeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Button.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onChangePost(editText),\n          children: \"\\uC218\\uC815\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"danger\",\n          onClick: onCancelUpdate,\n          children: \"\\uCDE8\\uC18C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true) : postData.split(/(#[^\\s#]+)/g).map(function (v) {\n      if (v.match(/(#[^\\s#]+)/g)) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/hashtag',\n            query: {\n              tag: v.slice(1)\n            }\n          },\n          as: \"/hashtag/\".concat(v.slice(1)),\n          prefetch: false,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, _this)\n        }, v, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, _this);\n      }\n\n      return v;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCardContent, \"LjE8/ouVmBU9VJhqr+oHqbRb62Q=\");\n\n_c = PostCardContent;\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired,\n  editMode: PropTypes.bool,\n  onCancelUpdate: PropTypes.func.isRequired,\n  onChangePost: PropTypes.func.isRequired\n};\nPostCardContent.defaultProps = {\n  editMode: false\n};\nexport default PostCardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/components/PostCardContent.js"],"names":["React","useState","useCallback","useEffect","Link","PropTypes","useSelector","Input","Button","TextArea","PostCardContent","postData","editMode","onCalcelUpdate","onChangePost","editText","setEditText","onChangeText","e","target","value","onCancelUpdate","split","map","v","match","pathname","query","tag","slice","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;IACQC,Q,GAAaF,K,CAAbE,Q;;AAGR,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAA0D;AAAA;;AAAA,MAAvDC,QAAuD,QAAvDA,QAAuD;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;AAAA,MAAnCC,cAAmC,QAAnCA,cAAmC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBAC9Cb,QAAQ,CAACU,QAAD,CADsC;AAAA,MACvEI,QADuE;AAAA,MAC7DC,WAD6D;;AAE9E,MAAMC,YAAY,GAAGf,WAAW,CAAC,UAACgB,CAAD,EAAO;AACpCF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,sBACI;AAAA,cACKR,QAAQ,gBACL;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEG,QAAjB;AAA2B,QAAA,QAAQ,EAAEE;AAArC;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD,CAAQ,KAAR;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEH,YAAY,CAACC,QAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AACI,UAAA,OAAO,EAAEM,cADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA,oBADK,GAYLV,QAAQ,CAACW,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAkC,UAACC,CAAD,EAAO;AACrC,UAAIA,CAAC,CAACC,KAAF,CAAQ,aAAR,CAAJ,EAA4B;AACxB,4BACI,QAAC,IAAD;AACI,UAAA,IAAI,EAAE;AACFC,YAAAA,QAAQ,EAAE,UADR;AAEFC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,GAAG,EAAEJ,CAAC,CAACK,KAAF,CAAQ,CAAR;AAAP;AAFL,WADV;AAKI,UAAA,EAAE,qBAAcL,CAAC,CAACK,KAAF,CAAQ,CAAR,CAAd,CALN;AAOI,UAAA,QAAQ,EAAE,KAPd;AAAA,iCASI;AAAA,sBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA;AATJ,WAQSA,CART;AAAA;AAAA;AAAA;AAAA,iBADJ;AAaH;;AACD,aAAOA,CAAP;AACH,KAjBD;AAbR;AAAA;AAAA;AAAA;AAAA,WADJ;AAkCH,CAxCD;;GAAMd,e;;KAAAA,e;AAyCNA,eAAe,CAACoB,SAAhB,GAA4B;AACxBnB,EAAAA,QAAQ,EAAEN,SAAS,CAAC0B,MAAV,CAAiBC,UADH;AAExBpB,EAAAA,QAAQ,EAAEP,SAAS,CAAC4B,IAFI;AAGxBZ,EAAAA,cAAc,EAAEhB,SAAS,CAAC6B,IAAV,CAAeF,UAHP;AAIxBlB,EAAAA,YAAY,EAAET,SAAS,CAAC6B,IAAV,CAAeF;AAJL,CAA5B;AAMAtB,eAAe,CAACyB,YAAhB,GAA+B;AAC3BvB,EAAAA,QAAQ,EAAE;AADiB,CAA/B;AAGA,eAAeF,eAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Input, Button } from 'antd';\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst PostCardContent = ({ postData, editMode, onCalcelUpdate, onChangePost }) => {\r\n    const [editText, setEditText] = useState(postData);\r\n    const onChangeText = useCallback((e) => {\r\n        setEditText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {editMode ? (\r\n                <>\r\n                    <TextArea value={editText} onChange={onChangeText} />\r\n                    <Button.Group>\r\n                        <Button onClick={onChangePost(editText)}>수정하기</Button>\r\n                        <Button type=\"danger\"\r\n                            onClick={onCancelUpdate}>\r\n                            취소하기\r\n                    </Button>\r\n                    </Button.Group>\r\n                </>\r\n            ) :\r\n                postData.split(/(#[^\\s#]+)/g).map((v) => {\r\n                    if (v.match(/(#[^\\s#]+)/g)) {\r\n                        return (\r\n                            <Link\r\n                                href={{\r\n                                    pathname: '/hashtag',\r\n                                    query: { tag: v.slice(1) }\r\n                                }}\r\n                                as={`/hashtag/${v.slice(1)}`\r\n                                }\r\n                                prefetch={false}\r\n                                key={v}>\r\n                                <a>{v}</a>\r\n                            </Link>\r\n                        );\r\n                    }\r\n                    return v;\r\n                })}\r\n        </div>\r\n    );\r\n};\r\nPostCardContent.propTypes = {\r\n    postData: PropTypes.string.isRequired,\r\n    editMode: PropTypes.bool,\r\n    onCancelUpdate: PropTypes.func.isRequired,\r\n    onChangePost: PropTypes.func.isRequired,\r\n};\r\nPostCardContent.defaultProps = {\r\n    editMode: false,\r\n};\r\nexport default PostCardContent; "]},"metadata":{},"sourceType":"module"}