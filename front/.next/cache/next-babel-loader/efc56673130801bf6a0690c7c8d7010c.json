{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\CommentForm.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentLoading,\n    addCommentDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) setCommentText('');\n  }, [addCommentDone]);\n  const onSubmit = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(_Form, {\n    onFinish: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(_Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(_Input.TextArea, {\n        style: {\n          position: 'relative',\n          marginTop: '10px'\n        },\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC785\\uB825\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number\n  }).isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","useSelector","useDispatch","PropTypes","useInput","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentLoading","addCommentDone","dispatch","commentText","onChangeCommentText","setCommentText","onSubmit","type","data","content","userId","postId","position","marginTop","right","bottom","propTypes","shape","number","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,EAAE,GAAGP,WAAW,CAACQ,KAAK;AAAA;;AAAA,6BAAIA,KAAK,CAACC,IAAN,CAAWC,EAAf,mDAAI,eAAeH,EAAnB;AAAA,GAAN,CAAtB;AACA,QAAM;AAAEI,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAwCZ,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACF,IAAhB,CAAzD;AACA,QAAMO,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM,CAACa,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDb,QAAQ,CAAC,EAAD,CAAnE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,cAAJ,EAAoBI,cAAc,CAAC,EAAD,CAAd;AACvB,GAFQ,EAEN,CAACJ,cAAD,CAFM,CAAT;AAKA,QAAMK,QAAQ,GAAGnB,WAAW,CAAC,MAAM;AAC/Be,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEd,mBADD;AAELe,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAAEN,WADP;AAEFO,QAAAA,MAAM,EAAEd,EAFN;AAGFe,QAAAA,MAAM,EAAEhB,IAAI,CAACC;AAHX;AAFD,KAAD,CAAR;AAQH,GAT2B,EASzB,CAACO,WAAD,EAAcP,EAAd,CATyB,CAA5B;AAUA,sBACI;AAAM,IAAA,QAAQ,EAAEU,QAAhB;AAAA,2BAEI,cAAM,IAAN;AAAA,8BACI,eAAO,QAAP;AACI,QAAA,KAAK,EAAE;AAAEM,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,SAAS,EAAE;AAAnC,SADX;AAEI,QAAA,IAAI,EAAE,CAFV;AAGI,QAAA,KAAK,EAAEV,WAHX;AAII,QAAA,QAAQ,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AACI,QAAA,KAAK,EAAE;AACHQ,UAAAA,QAAQ,EAAE,UADP;AAEHE,UAAAA,KAAK,EAAE,CAFJ;AAGHC,UAAAA,MAAM,EAAE,CAAC;AAHN,SADX;AAMI,QAAA,IAAI,EAAC,SANT;AAOI,QAAA,QAAQ,EAAC,QAPb;AAQI,QAAA,OAAO,EAAEf,iBARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA5CD;;AA8CAN,WAAW,CAACsB,SAAZ,GAAwB;AACpBrB,EAAAA,IAAI,EAAEJ,SAAS,CAAC0B,KAAV,CAAgB;AAClBrB,IAAAA,EAAE,EAAEL,SAAS,CAAC2B;AADI,GAAhB,EAEHC;AAHiB,CAAxB;AAKA,eAAezB,WAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport useInput from '../hooks/useInput';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const id = useSelector(state => state.user.me?.id);\r\n    const { addCommentLoading, addCommentDone } = useSelector(state => state.post);\r\n    const dispatch = useDispatch();\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if (addCommentDone) setCommentText('');\r\n    }, [addCommentDone]);\r\n\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: {\r\n                content: commentText,\r\n                userId: id,\r\n                postId: post.id\r\n            },\r\n        });\r\n    }, [commentText, id]);\r\n    return (\r\n        <Form onFinish={onSubmit}\r\n        >\r\n            <Form.Item>\r\n                <Input.TextArea\r\n                    style={{ position: 'relative', marginTop: '10px' }}\r\n                    rows={4}\r\n                    value={commentText}\r\n                    onChange={onChangeCommentText}\r\n                />\r\n                <Button\r\n                    style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        bottom: -40\r\n                    }}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    loading={addCommentLoading}\r\n                >입력하기</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n    }).isRequired,\r\n};\r\nexport default CommentForm; "]},"metadata":{},"sourceType":"module"}