{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\FollowList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// import React, { useCallback } from 'react';\n// import { Button, List, Avatar } from 'antd';\n// import Link from 'next/link';\n// import PropTypes from 'prop-types';\n// import { useDispatch } from 'react-redux';\n// import { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\n// const FollowList = ({ header, data, onClickMore }) => {\n//     const dispatch = useDispatch();\n//     const onCancel = (id) => () => {\n//         console.log(id);\n//         if (header === 'following') {\n//             dispatch({\n//                 type: UNFOLLOW_REQUEST,\n//                 data: id\n//             });\n//         }\n//         dispatch({\n//             type: REMOVE_FOLLOWER_REQUEST,\n//             data: id\n//         });\n//     };\n//     const loadMore = (\n//         <div\n//             style={{\n//                 textAlign: 'center',\n//                 marginTop: 12,\n//                 height: 32,\n//                 lineHeight: '32px',\n//             }}\n//         >\n//             <Button onClick={onClickMore}>더보기</Button>\n//         </div>\n//     );\n//     return (\n//         <List\n//             header={<div>{header}</div>}\n//             dataSource={data}\n//             itemLayout=\"horizontal\"\n//             loadMore={loadMore}\n//             bordered\n//             renderItem={(item) => (\n//                 <List.Item>\n//                     <List.Item.Meta\n//                         avatar={\n//                             (<Link href={`/user/${item.id}`}>\n//                                 <a><Avatar>\n//                                     {item.nickname[0]}\n//                                 </Avatar></a>\n//                             </Link>)\n//                         }\n//                         title={item.nickname}\n//                     />\n//                     <div>\n//                         <Link href=\"/post\" style={{ marginRight: '2px' }}>\n//                             <a key=\"post\">게시글 보기</a>\n//                         </Link>\n//                         {`  `}\n//                         <a key=\"stop\" onClick={onCancel(item.id)}>연결 끊기</a>\n//                     </div>\n//                 </List.Item>\n//             )}\n//         />\n//     );\n// };\n// FollowList.propTypes = {\n//     header: PropTypes.string.isRequire,\n//     data: PropTypes.array.isRequire,\n//     onClickMore: PropTypes.func.isRequire,\n// }\n// export default FollowList; \nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, Button, Card } from 'antd';\nimport { StopOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\n\nvar FollowList = function FollowList(_ref) {\n  _s();\n\n  var header = _ref.header,\n      data = _ref.data;\n  var dispatch = useDispatch();\n\n  var onCancel = function onCancel(id) {\n    return function () {\n      if (header === '팔로잉') {\n        dispatch({\n          type: UNFOLLOW_REQUEST,\n          data: id\n        });\n      }\n\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: id\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    style: {\n      marginBottom: 20\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }, _this),\n    loadMore: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\uB354 \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 78\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }, _this),\n    bordered: true,\n    dataSource: data,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/_jsxDEV(List.Item, {\n        style: {\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          actions: [/*#__PURE__*/_jsxDEV(StopOutlined, {\n            onClick: onCancel(item.id)\n          }, \"stop\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 37\n          }, _this)],\n          children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n            description: item.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FollowList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FollowList;\nFollowList.propTypes = {\n  header: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default FollowList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowList\");","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/components/FollowList.js"],"names":["React","PropTypes","List","Button","Card","StopOutlined","useDispatch","UNFOLLOW_REQUEST","REMOVE_FOLLOWER_REQUEST","FollowList","header","data","dispatch","onCancel","id","type","marginBottom","gutter","xs","md","textAlign","margin","item","marginTop","nickname","propTypes","string","isRequired","array"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,kBAA1D;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAsB;AAAA;;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACrC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD;AAAA,WAAQ,YAAM;AAC3B,UAAIJ,MAAM,KAAK,KAAf,EAAsB;AAClBE,QAAAA,QAAQ,CAAC;AACLG,UAAAA,IAAI,EAAER,gBADD;AAELI,UAAAA,IAAI,EAAEG;AAFD,SAAD,CAAR;AAIH;;AACDF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEP,uBADD;AAELG,QAAAA,IAAI,EAAEG;AAFD,OAAD,CAAR;AAIH,KAXgB;AAAA,GAAjB;;AAaA,sBACI,QAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KADX;AAEI,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,eAAE;AAAA,gBAAMT;AAAN;AAAA;AAAA;AAAA;AAAA,aAJZ;AAKI,IAAA,QAAQ,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEU,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAZ;AAAA,6BAAuD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,aALd;AAMI,IAAA,QAAQ,MANZ;AAOI,IAAA,UAAU,EAAEV,IAPhB;AAQI,IAAA,UAAU,EAAE,oBAACW,IAAD;AAAA,0BACR,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,OAAO,EAAE,cAAC,QAAC,YAAD;AAAyB,YAAA,OAAO,EAAEV,QAAQ,CAACS,IAAI,CAACR,EAAN;AAA1C,aAAkB,MAAlB;AAAA;AAAA;AAAA;AAAA,mBAAD,CAAf;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,WAAW,EAAEQ,IAAI,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADQ;AAAA;AARhB;AAAA;AAAA;AAAA;AAAA,WADJ;AAkBH,CAjCD;;GAAMf,U;UACeH,W;;;KADfG,U;AAmCNA,UAAU,CAACgB,SAAX,GAAuB;AACnBf,EAAAA,MAAM,EAAET,SAAS,CAACyB,MAAV,CAAiBC,UADN;AAEnBhB,EAAAA,IAAI,EAAEV,SAAS,CAAC2B,KAAV,CAAgBD;AAFH,CAAvB;AAKA,eAAelB,UAAf","sourcesContent":["// import React, { useCallback } from 'react';\r\n// import { Button, List, Avatar } from 'antd';\r\n// import Link from 'next/link';\r\n// import PropTypes from 'prop-types';\r\n// import { useDispatch } from 'react-redux';\r\n// import { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\r\n\r\n// const FollowList = ({ header, data, onClickMore }) => {\r\n\r\n//     const dispatch = useDispatch();\r\n//     const onCancel = (id) => () => {\r\n//         console.log(id);\r\n//         if (header === 'following') {\r\n//             dispatch({\r\n//                 type: UNFOLLOW_REQUEST,\r\n//                 data: id\r\n//             });\r\n//         }\r\n//         dispatch({\r\n//             type: REMOVE_FOLLOWER_REQUEST,\r\n//             data: id\r\n//         });\r\n//     };\r\n//     const loadMore = (\r\n//         <div\r\n//             style={{\r\n//                 textAlign: 'center',\r\n//                 marginTop: 12,\r\n//                 height: 32,\r\n//                 lineHeight: '32px',\r\n//             }}\r\n//         >\r\n//             <Button onClick={onClickMore}>더보기</Button>\r\n//         </div>\r\n//     );\r\n//     return (\r\n\r\n//         <List\r\n//             header={<div>{header}</div>}\r\n//             dataSource={data}\r\n//             itemLayout=\"horizontal\"\r\n//             loadMore={loadMore}\r\n//             bordered\r\n//             renderItem={(item) => (\r\n//                 <List.Item>\r\n//                     <List.Item.Meta\r\n//                         avatar={\r\n//                             (<Link href={`/user/${item.id}`}>\r\n//                                 <a><Avatar>\r\n//                                     {item.nickname[0]}\r\n//                                 </Avatar></a>\r\n//                             </Link>)\r\n//                         }\r\n//                         title={item.nickname}\r\n//                     />\r\n//                     <div>\r\n//                         <Link href=\"/post\" style={{ marginRight: '2px' }}>\r\n//                             <a key=\"post\">게시글 보기</a>\r\n//                         </Link>\r\n//                         {`  `}\r\n//                         <a key=\"stop\" onClick={onCancel(item.id)}>연결 끊기</a>\r\n\r\n//                     </div>\r\n//                 </List.Item>\r\n//             )}\r\n//         />\r\n\r\n//     );\r\n// };\r\n\r\n// FollowList.propTypes = {\r\n//     header: PropTypes.string.isRequire,\r\n//     data: PropTypes.array.isRequire,\r\n//     onClickMore: PropTypes.func.isRequire,\r\n\r\n// }\r\n// export default FollowList; \r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, Button, Card } from 'antd';\r\nimport { StopOutlined } from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\r\n\r\nconst FollowList = ({ header, data }) => {\r\n    const dispatch = useDispatch();\r\n    const onCancel = (id) => () => {\r\n        if (header === '팔로잉') {\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n                data: id,\r\n            });\r\n        }\r\n        dispatch({\r\n            type: REMOVE_FOLLOWER_REQUEST,\r\n            data: id,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <List\r\n            style={{ marginBottom: 20 }}\r\n            grid={{ gutter: 4, xs: 2, md: 3 }}\r\n            size=\"small\"\r\n            header={<div>{header}</div>}\r\n            loadMore={<div style={{ textAlign: 'center', margin: '10px 0' }}><Button>더 보기</Button></div>}\r\n            bordered\r\n            dataSource={data}\r\n            renderItem={(item) => (\r\n                <List.Item style={{ marginTop: 20 }}>\r\n                    <Card actions={[<StopOutlined key=\"stop\" onClick={onCancel(item.id)} />]}>\r\n                        <Card.Meta description={item.nickname} />\r\n                    </Card>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nFollowList.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FollowList;\r\n"]},"metadata":{},"sourceType":"module"}