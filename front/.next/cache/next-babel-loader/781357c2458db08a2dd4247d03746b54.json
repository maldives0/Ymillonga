{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostForm.js\";\nimport React, { useRef, useCallback, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useMainPosts from '../hooks/useMainPosts';\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n  const [mainPosts, setMainPosts] = useMainPosts();\n  const {\n    imagePaths\n  } = mainPosts;\n  const [text, onChangeText, setText] = useInput('');\n  const imageInput = useRef(); // const onChangeText =useCallback(()=>{\n  // },[]);\n\n  const onChangeImages = useCallback(e => {\n    console.log('clickImgInfo', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onRemoveImage = useCallback(index => () => {}, []); // const onSubmit = useCallback(() => {\n  //     if (!text || !text.trim()) alert('게시글을 작성하세요.');\n  //     imagePaths.forEach((p) => {\n  //         FormData.append('image', p);\n  //     });\n  //     FormData.append('content', text);\n  // }, [text, imagePaths]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"gh\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this) // <Form\n  //     style={{ margin: '10px 0 20px' }}\n  //     encType=\"multipart/form-data\"\n  //     onFinish={onSubmit}\n  // >\n  //     <Input.TextArea\n  //         value={text}\n  //         onChange={onChangeText}\n  //         maxLength={140}\n  //         placeholder=\"오늘은 어떤 일이 있었나요?\"\n  //     />\n  //     <div>\n  //         <input type=\"file\" name=\"image\" multiple hidden\n  //             ref={imageInput} onChange={onChangeImages} />\n  //         <Button onClick={onClickImageUpload}>이미지 업로드하기</Button>\n  //         <Button type=\"primary\" style={{ float: 'right' }}\n  //             htmlType=\"submit\">게시하기</Button>\n  //     </div>\n  //     <div>\n  //         {imagePaths.map((v, i) => {\n  //             return (\n  //                 <div key={v} style={{ display: 'inline-block' }}>\n  //                     <img src={v} style={{ width: '200px' }} alt={v} />\n  //                     <div>\n  //                         <Button\n  //                             onClick={onRemoveImage(i)}>삭제하기</Button>\n  //                     </div>\n  //                 </div>\n  //             );\n  //         })}\n  //     </div>\n  // </Form>\n  ;\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/PostForm.js"],"names":["React","useRef","useCallback","useState","Form","Input","Button","useMainPosts","useInput","PostForm","mainPosts","setMainPosts","imagePaths","text","onChangeText","setText","imageInput","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","onClickImageUpload","current","click","onRemoveImage","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,QAArC,QAAqD,OAArD;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,YAAY,EAA9C;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAiBF,SAAvB;AACA,QAAM,CAACG,IAAD,EAAOC,YAAP,EAAqBC,OAArB,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMQ,UAAU,GAAGf,MAAM,EAAzB,CALmB,CAMnB;AAEA;;AACA,QAAMgB,cAAc,GAAGf,WAAW,CAAEgB,CAAD,IAAO;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,CAAC,CAACG,MAAF,CAASC,KAArC;AACA,UAAMC,aAAa,GAAG,IAAIC,QAAJ,EAAtB;AACA,OAAGC,OAAH,CAAWC,IAAX,CAAgBR,CAAC,CAACG,MAAF,CAASC,KAAzB,EAAiCK,CAAD,IAAO;AACnCJ,MAAAA,aAAa,CAACK,MAAd,CAAqB,OAArB,EAA8BD,CAA9B;AACH,KAFD;AAGH,GANiC,EAM/B,EAN+B,CAAlC;AAQA,QAAME,kBAAkB,GAAG3B,WAAW,CAAC,MAAM;AACzCc,IAAAA,UAAU,CAACc,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACf,UAAU,CAACc,OAAZ,CAFmC,CAAtC;AAGA,QAAME,aAAa,GAAG9B,WAAW,CAAE+B,KAAD,IAAW,MAAM,CAElD,CAFgC,EAE9B,EAF8B,CAAjC,CApBmB,CAuBnB;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCJ;AAmCH,CAlED;;AAmEA,eAAexB,QAAf","sourcesContent":["import React, { useRef, useCallback, useState } from 'react';\r\n\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport useMainPosts from '../hooks/useMainPosts';\r\nimport useInput from '../hooks/useInput';\r\n\r\n\r\n\r\nconst PostForm = () => {\r\n\r\n    const [mainPosts, setMainPosts] = useMainPosts();\r\n    const { imagePaths } = mainPosts;\r\n    const [text, onChangeText, setText] = useInput('');\r\n    const imageInput = useRef();\r\n    // const onChangeText =useCallback(()=>{\r\n\r\n    // },[]);\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('clickImgInfo', e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f) => {\r\n            imageFormData.append('image', f);\r\n        })\r\n    }, []);\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n    const onRemoveImage = useCallback((index) => () => {\r\n\r\n    }, []);\r\n    // const onSubmit = useCallback(() => {\r\n    //     if (!text || !text.trim()) alert('게시글을 작성하세요.');\r\n    //     imagePaths.forEach((p) => {\r\n    //         FormData.append('image', p);\r\n    //     });\r\n    //     FormData.append('content', text);\r\n\r\n    // }, [text, imagePaths]);\r\n    return (\r\n        <div>gh</div>\r\n        // <Form\r\n        //     style={{ margin: '10px 0 20px' }}\r\n        //     encType=\"multipart/form-data\"\r\n        //     onFinish={onSubmit}\r\n        // >\r\n        //     <Input.TextArea\r\n        //         value={text}\r\n        //         onChange={onChangeText}\r\n        //         maxLength={140}\r\n        //         placeholder=\"오늘은 어떤 일이 있었나요?\"\r\n        //     />\r\n        //     <div>\r\n        //         <input type=\"file\" name=\"image\" multiple hidden\r\n        //             ref={imageInput} onChange={onChangeImages} />\r\n        //         <Button onClick={onClickImageUpload}>이미지 업로드하기</Button>\r\n        //         <Button type=\"primary\" style={{ float: 'right' }}\r\n        //             htmlType=\"submit\">게시하기</Button>\r\n        //     </div>\r\n        //     <div>\r\n        //         {imagePaths.map((v, i) => {\r\n        //             return (\r\n        //                 <div key={v} style={{ display: 'inline-block' }}>\r\n        //                     <img src={v} style={{ width: '200px' }} alt={v} />\r\n        //                     <div>\r\n        //                         <Button\r\n        //                             onClick={onRemoveImage(i)}>삭제하기</Button>\r\n        //                     </div>\r\n        //                 </div>\r\n        //             );\r\n        //         })}\r\n        //     </div>\r\n        // </Form>\r\n    );\r\n};\r\nexport default PostForm; "]},"metadata":{},"sourceType":"module"}