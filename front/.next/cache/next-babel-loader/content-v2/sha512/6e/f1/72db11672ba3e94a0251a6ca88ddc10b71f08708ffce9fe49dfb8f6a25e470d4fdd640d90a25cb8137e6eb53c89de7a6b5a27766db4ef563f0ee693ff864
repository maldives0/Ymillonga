{"ast":null,"code":"import _defineProperty from \"/Users/juyoungjung/ymillonga-sns/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/juyoungjung/ymillonga-sns/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/juyoungjung/ymillonga-sns/front/components/NicknameEditForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { Form, Button, Row, Col, message } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NicknameInputSearch } from \"./style\";\nimport { initialState, CHANGE_NICKNAME_REQUEST } from \"../reducers/user\";\nimport useSWR, { mutate, trigger } from \"swr\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar NicknameEditForm = function NicknameEditForm(_ref) {\n  _s();\n\n  var onCancel = _ref.onCancel;\n\n  var _useSWR = useSWR(\"globalState\", {\n    initialData: initialState\n  }, {\n    revalidateOnFocus: true\n  }),\n      data = _useSWR.data;\n\n  var dispatch = useDispatch();\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var changeNicknameLoading = useSelector(function (state) {\n    return state.user.changeNicknameLoading;\n  });\n  var changeNicknameError = useSelector(function (state) {\n    return state.user.changeNicknameError;\n  });\n\n  var _useInput = useInput((me === null || me === void 0 ? void 0 : me.nickname) || \"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      nickname = _useInput2[0],\n      onChangeNickname = _useInput2[1];\n\n  useEffect(function () {\n    if (changeNicknameError) {\n      message.error(changeNicknameError, 5);\n    }\n  }, [changeNicknameError]);\n  var onSubmit = useCallback(function () {\n    mutate(\"globalState\", _objectSpread(_objectSpread({}, data), {}, {\n      me: {\n        nickname: nickname\n      }\n    }), false);\n    dispatch({\n      type: CHANGE_NICKNAME_REQUEST,\n      data: nickname\n    });\n    trigger(\"globalState\");\n  }, [nickname]);\n  return ___EmotionJSX(Form, {\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Form.Item, {\n    label: \"\\uB2C9\\uB124\\uC784\",\n    rules: [{\n      required: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(NicknameInputSearch, {\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })))), ___EmotionJSX(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Col, {\n    span: 16,\n    offset: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    htmlType: \"submit\",\n    loading: changeNicknameLoading,\n    type: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"\\uBC14\\uAFB8\\uAE30\"), ___EmotionJSX(Button, {\n    style: {\n      marginLeft: 5\n    },\n    className: \"nickname-cancel-button\",\n    onClick: onCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"\\uCDE8\\uC18C\\uD558\\uAE30\"))));\n};\n\n_s(NicknameEditForm, \"DLR+3s7CtM+KUuGkHZhyCvxgyAs=\", false, function () {\n  return [useSWR, useDispatch, useSelector, useSelector, useSelector, useInput];\n});\n\n_c = NicknameEditForm;\nNicknameEditForm.propTypes = {\n  onCancel: PropTypes.func.isRequired\n};\nexport default NicknameEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NicknameEditForm\");","map":{"version":3,"sources":["/Users/juyoungjung/ymillonga-sns/front/components/NicknameEditForm.js"],"names":["React","useCallback","useEffect","useInput","PropTypes","Form","Button","Row","Col","message","useDispatch","useSelector","NicknameInputSearch","initialState","CHANGE_NICKNAME_REQUEST","useSWR","mutate","trigger","NicknameEditForm","onCancel","initialData","revalidateOnFocus","data","dispatch","me","state","user","changeNicknameLoading","changeNicknameError","nickname","onChangeNickname","error","onSubmit","type","required","marginLeft","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { Form, Button, Row, Col, message } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NicknameInputSearch } from \"./style\";\nimport { initialState, CHANGE_NICKNAME_REQUEST } from \"../reducers/user\";\nimport useSWR, { mutate, trigger } from \"swr\";\n\nconst NicknameEditForm = ({ onCancel }) => {\n  const { data } = useSWR(\n    \"globalState\",\n    { initialData: initialState },\n    { revalidateOnFocus: true }\n  );\n  const dispatch = useDispatch();\n  const me = useSelector((state) => state.user.me);\n  const changeNicknameLoading = useSelector(\n    (state) => state.user.changeNicknameLoading\n  );\n  const changeNicknameError = useSelector(\n    (state) => state.user.changeNicknameError\n  );\n  const [nickname, onChangeNickname] = useInput(me?.nickname || \"\");\n\n  useEffect(() => {\n    if (changeNicknameError) {\n      message.error(changeNicknameError, 5);\n    }\n  }, [changeNicknameError]);\n  const onSubmit = useCallback(() => {\n    mutate(\n      \"globalState\",\n      {\n        ...data,\n        me: { nickname: nickname },\n      },\n      false\n    );\n    dispatch({\n      type: CHANGE_NICKNAME_REQUEST,\n      data: nickname,\n    });\n    trigger(\"globalState\");\n  }, [nickname]);\n  return (\n    <Form onFinish={onSubmit}>\n      <Row>\n        <Col>\n          <Form.Item label=\"닉네임\" rules={[{ required: true }]}>\n            <NicknameInputSearch\n              value={nickname}\n              required\n              onChange={onChangeNickname}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={16} offset={6}>\n          <Button\n            htmlType=\"submit\"\n            loading={changeNicknameLoading}\n            type=\"primary\"\n          >\n            바꾸기\n          </Button>\n          <Button\n            style={{ marginLeft: 5 }}\n            className=\"nickname-cancel-button\"\n            onClick={onCancel}\n          >\n            취소하기\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\nNicknameEditForm.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n};\nexport default NicknameEditForm;\n"]},"metadata":{},"sourceType":"module"}