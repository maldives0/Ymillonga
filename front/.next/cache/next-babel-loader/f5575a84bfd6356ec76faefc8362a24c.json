{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmargin-bottom: 20px;\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport CommentForm from './CommentForm';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nmoment.locale('ko');\nvar CardWrapper = styled.div(_templateObject());\n_c = CardWrapper;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useState2 = useState(false),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading,\n      updatePostLoading = _useSelector.updatePostLoading;\n\n  var onLike = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n    setLiked(function (prev) {\n      return !prev;\n    });\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n    setLiked(function (prev) {\n      return !prev;\n    });\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onRemovePost = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onRetweet = useCallback(function () {\n    if (!id) alert('로그인이 필요합니다');\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, [id]);\n  var onClickUpdate = useCallback(function () {\n    setEditMode(true);\n  }, []);\n  var onCancelUpdate = useCallback(function () {\n    setEditMode(false);\n    ;\n  }, []);\n  var onChangePost = useCallback(function (editText) {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, [post]);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: (post === null || post === void 0 ? void 0 : post.Images[0]) && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post === null || post === void 0 ? void 0 : post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 43\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && (post === null || post === void 0 ? void 0 : post.User.id) === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClickUpdate,\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 46\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 45\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, _this)\n      }, \"ellipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, _this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 30\n      }, _this),\n      title: (post === null || post === void 0 ? void 0 : post.RetweetId) ? \"\".concat(post === null || post === void 0 ? void 0 : post.User.nickname, \"\\uB2D8\\uC774 \\uB9AC\\uD2B8\\uC717\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4.\") : null,\n      children: (post === null || post === void 0 ? void 0 : post.RetweetId) && (post === null || post === void 0 ? void 0 : post.Retweet) ? /*#__PURE__*/_jsxDEV(Card, {\n        cover: (post === null || post === void 0 ? void 0 : post.Retweet.Images[0]) && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post === null || post === void 0 ? void 0 : post.Retweet.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }, _this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'right'\n          },\n          children: moment(post === null || post === void 0 ? void 0 : post.createdAt).startOf('day').fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, _this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            prefetch: false,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: post === null || post === void 0 ? void 0 : post.Retweet.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 61\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 58\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, _this),\n          title: post === null || post === void 0 ? void 0 : post.Retweet.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            onCancelUpdate: onCancelUpdate,\n            onChangePost: onChangePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 37\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'right'\n          },\n          children: moment(post === null || post === void 0 ? void 0 : post.createdAt).startOf('day').fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, _this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/user/\".concat(post === null || post === void 0 ? void 0 : post.User.id),\n            prefetch: false,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: post === null || post === void 0 ? void 0 : post.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 61\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 58\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 37\n          }, _this),\n          title: post === null || post === void 0 ? void 0 : post.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            onCancelUpdate: onCancelUpdate,\n            onChangePost: onChangePost,\n            postData: post === null || post === void 0 ? void 0 : post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 37\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, _this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\\uB313\\uAE00: \".concat((post === null || post === void 0 ? void 0 : post.Comments) ? post === null || post === void 0 ? void 0 : post.Comments.length : 0, \"\\uAC1C\"),\n        itemLayout: \"horizontal\",\n        dataSource: (post === null || post === void 0 ? void 0 : post.Comments) || [],\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/user/\".concat(item.User.id),\n                prefetch: false,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: item.User.nickname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 49\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 45\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 41\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true)]\n  }, post === null || post === void 0 ? void 0 : post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"yu+5UUrQhrnR7afGXOD1Tlr1GrI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","useSelector","useDispatch","styled","moment","Link","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","CommentForm","PostImages","FollowButton","PostCardContent","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","locale","CardWrapper","div","PostCard","post","dispatch","id","state","user","me","commentFormOpened","setCommentFormOpened","editMode","setEditMode","removePostLoading","updatePostLoading","onLike","alert","setLiked","prev","type","data","onUnlike","onRemovePost","onRetweet","onToggleComment","onClickUpdate","onCancelUpdate","onChangePost","editText","liked","Likers","find","v","Images","User","RetweetId","nickname","Retweet","createdAt","startOf","fromNow","content","Comments","length","item","propTypes","shape","number","object","string","arrayOf","any","objectOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from '@emotion/styled';\r\nimport moment from 'moment';\r\nimport Link from 'next/link';\r\nimport {\r\n    RetweetOutlined,\r\n    HeartTwoTone,\r\n    HeartOutlined,\r\n    MessageOutlined,\r\n    EllipsisOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport CommentForm from './CommentForm';\r\nimport PostImages from './PostImages';\r\nimport FollowButton from './FollowButton';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\r\n\r\nmoment.locale('ko');\r\nconst CardWrapper = styled.div`\r\nmargin-bottom: 20px;`\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const { removePostLoading, updatePostLoading } = useSelector(state => state.post);\r\n\r\n    const onLike = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n        setLiked((prev) => !prev);\r\n        dispatch({\r\n            type: LIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n    const onUnlike = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n        setLiked((prev) => !prev);\r\n        dispatch({\r\n            type: UNLIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n    const onRemovePost = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        })\r\n    }, [id]);\r\n    const onRetweet = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n    }, [id]);\r\n\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [id]);\r\n    const onClickUpdate = useCallback(() => {\r\n        setEditMode(true);\r\n    }, []);\r\n    const onCancelUpdate = useCallback(() => {\r\n        setEditMode(false);;\r\n    }, []);\r\n    const onChangePost = useCallback((editText) => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [post]);\r\n    const liked = post.Likers.find((v) => v.id === id);\r\n    return (\r\n        <CardWrapper key={post?.id}>\r\n            <Card\r\n                cover={post?.Images[0] && <PostImages images={post?.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked ?\r\n                        <HeartTwoTone\r\n                            key=\"heart\"\r\n                            twoToneColor=\"#eb2f96\"\r\n                            onClick={onUnlike} /> :\r\n                        <HeartOutlined\r\n                            key=\"heart\"\r\n                            onClick={onLike} />,\r\n                    <MessageOutlined\r\n                        key=\"message\"\r\n                        onClick={onToggleComment} />,\r\n                    <Popover\r\n                        key=\"ellipsis\"\r\n                        content={(\r\n                            <Button.Group>\r\n                                {id && post?.User.id === id ?\r\n                                    (\r\n                                        <>\r\n                                            {<Button\r\n                                                onClick={onClickUpdate}>수정</Button>}\r\n                                            <Button\r\n                                                type=\"danger\"\r\n                                                onClick={onRemovePost}\r\n                                                loading={removePostLoading} >삭제</Button>\r\n                                        </>\r\n                                    ) :\r\n                                    <Button>신고하기</Button>}\r\n                            </Button.Group>\r\n                        )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                extra={id && <FollowButton post={post} />}\r\n                title={post?.RetweetId ? `${post?.User.nickname}님이 리트윗하셨습니다.` : null}\r\n            >\r\n                {post?.RetweetId && post?.Retweet ?\r\n                    (\r\n                        <Card\r\n                            cover={post?.Retweet.Images[0] &&\r\n                                <PostImages images={post?.Retweet.Images} />}>\r\n                            <div style={{ float: 'right' }}>\r\n                                {moment(post?.createdAt).startOf('day').fromNow()}\r\n                            </div>\r\n                            <Card.Meta\r\n                                avatar={(\r\n                                    <Link href={`/`}\r\n                                        prefetch={false}><a><Avatar>\r\n                                            {post?.Retweet.User.nickname[0]}\r\n                                        </Avatar></a></Link>\r\n                                )}\r\n                                title={post?.Retweet.User.nickname}\r\n                                description={\r\n                                    <PostCardContent\r\n                                        onCancelUpdate={\r\n                                            onCancelUpdate\r\n                                        }\r\n                                        onChangePost={onChangePost}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    ) : (\r\n                        <>\r\n                            <div style={{ float: 'right' }}>\r\n                                {moment(post?.createdAt).startOf('day').fromNow()}\r\n                            </div>\r\n                            <Card.Meta\r\n                                avatar={(\r\n                                    <Link href={`/user/${post?.User.id}`}\r\n                                        prefetch={false}><a><Avatar>\r\n                                            {post?.User.nickname[0]}\r\n                                        </Avatar></a></Link>\r\n                                )}\r\n                                title={post?.User.nickname}\r\n                                description={\r\n                                    <PostCardContent\r\n                                        onCancelUpdate={\r\n                                            onCancelUpdate\r\n                                        }\r\n                                        onChangePost={onChangePost}\r\n                                        postData={post?.content}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </>\r\n                    )}\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`댓글: ${post?.Comments ? post?.Comments.length : 0}개`}\r\n                        itemLayout='horizontal'\r\n                        dataSource={post?.Comments || []}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={(\r\n                                        <Link\r\n                                            href={`/user/${item.User.id}`}\r\n                                            prefetch={false}>\r\n                                            <a>\r\n                                                <Avatar>{item.User.nickname[0]}</Avatar>\r\n                                            </a>\r\n                                        </Link>\r\n                                    )}\r\n                                    content={item.content} />\r\n                            </li>\r\n                        )} />\r\n                </>\r\n            )}\r\n        </CardWrapper >\r\n    );\r\n};\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        Comments: PropTypes.arrayOf(PropTypes.any),\r\n        Images: PropTypes.arrayOf(PropTypes.any),\r\n        Likers: PropTypes.arrayOf(PropTypes.object),\r\n        RetweetId: PropTypes.number,\r\n        Retweet: PropTypes.objectOf(PropTypes.any),\r\n    }).isRequired,\r\n};\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}