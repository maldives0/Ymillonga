{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\profile.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport UserProfile from '../components/UserProfile';\nimport FollowList from '../components/FollowList';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST } from '../reducers/user';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport useSWR from 'swr';\nimport { backUrl } from '../config/config';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst fetcher = url => axios.get(url, {\n  withCredentials: true\n}).then(result => result.data); //be로 axios를 통해 get을 한 뒤 결과값을 result.data로 받는다\n\n\nconst Profile = () => {\n  const {\n    0: followingsLimit,\n    1: setFollowingsLimit\n  } = useState(3);\n  const {\n    0: followersLimit,\n    1: setFollowersLimit\n  } = useState(3);\n  const {\n    data: followingsData,\n    error: followingError\n  } = useSWR(`${backUrl}/user/followings?limit=${followingsLimit}`, fetcher);\n  const {\n    data: followersData,\n    error: followerError\n  } = useSWR(`${backUrl}/user/followers?limit=${followersLimit}`, fetcher);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const loadMoreFollowings = useCallback(() => {\n    setFollowingsLimit(prev => prev + 3);\n  }, []);\n  const loadMoreFollowers = useCallback(() => {\n    setFollowersLimit(prev => prev + 3);\n  }, []);\n  useEffect(() => {\n    if (!(me && me.id)) {\n      alert('로그인이 필요합니다.');\n      Router.replace('/login');\n    }\n\n    ;\n  }, [me && me.id]);\n\n  if (!me) {\n    return '내 정보 로딩 중...';\n  }\n\n  ;\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\n  }\n\n  return ___EmotionJSX(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    },\n    __self: this\n  }, ___EmotionJSX(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    },\n    __self: this\n  }, ___EmotionJSX(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    },\n    __self: this\n  }, \"\\uB0B4 \\uD504\\uB85C\\uD544 | Ymillonga\")), ___EmotionJSX(UserProfile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    },\n    __self: this\n  }), ___EmotionJSX(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789\",\n    data: followingsData,\n    onClickMore: loadMoreFollowings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    },\n    __self: this\n  }), ___EmotionJSX(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC\",\n    data: followersData,\n    onClickMore: loadMoreFollowers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    },\n    __self: this\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('getServerSideProps start');\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/pages/profile.js"],"names":["React","useCallback","useEffect","useState","useSelector","useDispatch","Router","Head","AppLayout","UserProfile","FollowList","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","END","axios","wrapper","useSWR","backUrl","fetcher","url","get","withCredentials","then","result","data","Profile","followingsLimit","setFollowingsLimit","followersLimit","setFollowersLimit","followingsData","error","followingError","followersData","followerError","me","state","user","loadMoreFollowings","prev","loadMoreFollowers","id","alert","replace","console","getServerSideProps","context","log","cookie","req","headers","defaults","Cookie","store","dispatch","type","LOAD_MY_INFO_REQUEST","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport UserProfile from '../components/UserProfile';\r\nimport FollowList from '../components/FollowList';\r\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST } from '../reducers/user';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport wrapper from '../store/configureStore';\r\nimport useSWR from 'swr';\r\nimport { backUrl } from '../config/config';\r\n\r\nconst fetcher = (url) => axios.get(url, { withCredentials: true }).then((result) => result.data);\r\n//be로 axios를 통해 get을 한 뒤 결과값을 result.data로 받는다\r\n\r\nconst Profile = () => {\r\n    const [followingsLimit, setFollowingsLimit] = useState(3);\r\n    const [followersLimit, setFollowersLimit] = useState(3);\r\n    const { data: followingsData, error: followingError } = useSWR(`${backUrl}/user/followings?limit=${followingsLimit}`, fetcher);\r\n    const { data: followersData, error: followerError } = useSWR(`${backUrl}/user/followers?limit=${followersLimit}`, fetcher);\r\n\r\n    const { me } = useSelector(state => state.user);\r\n    const loadMoreFollowings = useCallback(() => {\r\n        setFollowingsLimit((prev) => prev + 3);\r\n    }, []);\r\n    const loadMoreFollowers = useCallback(() => {\r\n        setFollowersLimit((prev) => prev + 3);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!(me && me.id)) {\r\n            alert('로그인이 필요합니다.');\r\n            Router.replace('/login')\r\n        };\r\n    }, [me && me.id]);\r\n\r\n    if (!me) { return '내 정보 로딩 중...' };\r\n    if (followerError || followingError) {\r\n        console.error(followerError || followingError);\r\n        return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\r\n    }\r\n\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>내 프로필 | Ymillonga</title>\r\n            </Head>\r\n            <UserProfile />\r\n            <FollowList\r\n                header=\"팔로잉\"\r\n                data={followingsData}\r\n                onClickMore={loadMoreFollowings} />\r\n            <FollowList\r\n                header=\"팔로워\"\r\n                data={followersData}\r\n                onClickMore={loadMoreFollowers} />\r\n        </AppLayout>\r\n    );\r\n};\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    console.log('getServerSideProps start');\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    console.log('getServerSideProps end');\r\n    await context.store.sagaTask.toPromise();\r\n});\r\nexport default Profile; "]},"metadata":{},"sourceType":"module"}