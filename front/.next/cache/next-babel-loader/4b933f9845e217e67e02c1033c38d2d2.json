{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { Form, Checkbox, Button, Input } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport useInput from '../hooks/useInput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nimport Router from 'next/router';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar Signup = function Signup() {\n  var dispatch = useDispatch();\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var signUpLoading = useSelector(function (state) {\n    return state.user.signUpLoading;\n  });\n  var signUpDone = useSelector(function (state) {\n    return state.user.signUpDone;\n  });\n  var signUpError = useSelector(function (state) {\n    return state.user.signUpError;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickname = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useState = useState(''),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var _useState3 = useState(false),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1];\n\n  useEffect(function () {\n    if (me && me.id) {\n      alert('로그인 중입니다. 메인페이지로 이동합니다.');\n      Router.replace('/'); //push는 뒤로가기 하면 히스토리가 남아있지만 replace는 지워짐\n    }\n  }, [me && me.id]);\n  useEffect(function () {\n    if (signUpDone) {\n      Router.replace('/login');\n    }\n  }, [signUpDone]);\n  useEffect(function () {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, [password]);\n  var onSubmit = useCallback(function () {\n    if (password !== passwordCheck) {\n      setPasswordError(true);\n      return alert('비밀번호를 확인해주세요.');\n    }\n\n    if (!term) {\n      setTermError(true);\n      return alert('약관에 동의해주세요.');\n    }\n\n    ;\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email: email,\n        password: password,\n        nickname: nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  var validateMessages = {\n    required: '${label}을 적어주세요!',\n    types: {\n      email: '${label} 이메일 형식에 맞지 않습니다!'\n    }\n  };\n  return ___EmotionJSX(AppLayout, null, ___EmotionJSX(Head, null, ___EmotionJSX(\"title\", null, \"\\uD68C\\uC6D0\\uAC00\\uC785 | Ymillonga\")), ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Form, {\n    name: \"nest-messages\",\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    onFinish: onSubmit,\n    validateMessages: validateMessages\n  }, ___EmotionJSX(Form.Item, {\n    label: \"\\uC774\\uBA54\\uC77C\",\n    rules: [{\n      type: 'email'\n    }, {\n      required: true\n    }]\n  }, ___EmotionJSX(Input, {\n    name: \"user-name\",\n    type: \"email\",\n    value: email,\n    required: true,\n    onChange: onChangeEmail\n  })), ___EmotionJSX(Form.Item, {\n    label: \"\\uB2C9\\uB124\\uC784\",\n    rules: [{\n      required: true\n    }]\n  }, ___EmotionJSX(Input, {\n    name: \"user-nickname\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname\n  })), ___EmotionJSX(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    rules: [{\n      required: true\n    }]\n  }, ___EmotionJSX(Input, {\n    name: \"user-password\",\n    type: \"Password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), ___EmotionJSX(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    rules: [{\n      required: true\n    }]\n  }, ___EmotionJSX(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && ___EmotionJSX(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), ___EmotionJSX(Form.Item, {\n    rules: [{\n      required: true\n    }]\n  }, ___EmotionJSX(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }), \" \\uAC1C\\uC778\\uC815\\uBCF4 \\uC218\\uC9D1 \\uBC0F \\uC774\\uC6A9\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\", termError && ___EmotionJSX(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD574\\uC8FC\\uC138\\uC694.\")), ___EmotionJSX(Form.Item, null, ___EmotionJSX(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: signUpLoading\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n};\n\nexport var __N_SSP = true;\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}