{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"c:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostCardContent.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Input, Button } from 'antd';\nconst {\n  TextArea\n} = Input;\n\nconst PostCardContent = ({\n  postData,\n  editMode,\n  onCalcelUpdate,\n  onChangePost\n}) => {\n  console.log(postData, 'postData');\n  const {\n    0: editText,\n    1: setEditText\n  } = useState(postData);\n  const onChangeText = useCallback(e => {\n    setEditText(e.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        value: editText,\n        onChange: onChangeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onChangePost(editText),\n          children: \"\\uC218\\uC815\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"danger\",\n          onClick: onCancelUpdate,\n          children: \"\\uCDE8\\uC18C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : postData.split(/(#[^\\s#]+)/g).map(v => {\n      if (v.match(/(#[^\\s#]+)/)) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/hashtag',\n            query: {\n              tag: v.slice(1)\n            }\n          },\n          as: `/hashtag/${v.slice(1)}`,\n          prefetch: false,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)\n        }, v, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this);\n      }\n\n      return v;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired,\n  editMode: PropTypes.bool,\n  onCancelUpdate: PropTypes.func.isRequired,\n  onChangePost: PropTypes.func.isRequired\n};\nPostCardContent.defaultProps = {\n  editMode: false\n};\nexport default PostCardContent;","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/components/PostCardContent.js"],"names":["React","useState","useCallback","useEffect","Link","PropTypes","useSelector","Input","Button","TextArea","PostCardContent","postData","editMode","onCalcelUpdate","onChangePost","console","log","editText","setEditText","onChangeText","e","target","value","onCancelUpdate","split","map","v","match","pathname","query","tag","slice","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeF,KAArB;;AAGA,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,cAAtB;AAAsCC,EAAAA;AAAtC,CAAD,KAA0D;AAC9EC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsB,UAAtB;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BjB,QAAQ,CAACU,QAAD,CAAxC;AACA,QAAMQ,YAAY,GAAGjB,WAAW,CAAEkB,CAAD,IAAO;AACpCF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,sBACI;AAAA,cACKV,QAAQ,gBACL;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEK,QAAjB;AAA2B,QAAA,QAAQ,EAAEE;AAArC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD,CAAQ,KAAR;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEL,YAAY,CAACG,QAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AACI,UAAA,OAAO,EAAEM,cADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADK,GAYLZ,QAAQ,CAACa,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAmCC,CAAD,IAAO;AACrC,UAAIA,CAAC,CAACC,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AACvB,4BACI,QAAC,IAAD;AACI,UAAA,IAAI,EAAE;AACFC,YAAAA,QAAQ,EAAE,UADR;AAEFC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,GAAG,EAAEJ,CAAC,CAACK,KAAF,CAAQ,CAAR;AAAP;AAFL,WADV;AAKI,UAAA,EAAE,EAAG,YAAWL,CAAC,CAACK,KAAF,CAAQ,CAAR,CAAW,EAL/B;AAOI,UAAA,QAAQ,EAAE,KAPd;AAAA,iCAUI;AAAA,sBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA;AAVJ,WAQSA,CART;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcH;;AACD,aAAOA,CAAP;AACH,KAlBD;AAbR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CA3CD;;AA4CAhB,eAAe,CAACsB,SAAhB,GAA4B;AACxBrB,EAAAA,QAAQ,EAAEN,SAAS,CAAC4B,MAAV,CAAiBC,UADH;AAExBtB,EAAAA,QAAQ,EAAEP,SAAS,CAAC8B,IAFI;AAGxBZ,EAAAA,cAAc,EAAElB,SAAS,CAAC+B,IAAV,CAAeF,UAHP;AAIxBpB,EAAAA,YAAY,EAAET,SAAS,CAAC+B,IAAV,CAAeF;AAJL,CAA5B;AAMAxB,eAAe,CAAC2B,YAAhB,GAA+B;AAC3BzB,EAAAA,QAAQ,EAAE;AADiB,CAA/B;AAGA,eAAeF,eAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Input, Button } from 'antd';\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst PostCardContent = ({ postData, editMode, onCalcelUpdate, onChangePost }) => {\r\n    console.log(postData, 'postData');\r\n    const [editText, setEditText] = useState(postData);\r\n    const onChangeText = useCallback((e) => {\r\n        setEditText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {editMode ? (\r\n                <>\r\n                    <TextArea value={editText} onChange={onChangeText} />\r\n                    <Button.Group>\r\n                        <Button onClick={onChangePost(editText)}>수정하기</Button>\r\n                        <Button type=\"danger\"\r\n                            onClick={onCancelUpdate}>\r\n                            취소하기\r\n                    </Button>\r\n                    </Button.Group>\r\n                </>\r\n            ) :\r\n                postData.split(/(#[^\\s#]+)/g).map((v) => {\r\n                    if (v.match(/(#[^\\s#]+)/)) {\r\n                        return (\r\n                            <Link\r\n                                href={{\r\n                                    pathname: '/hashtag',\r\n                                    query: { tag: v.slice(1) }\r\n                                }}\r\n                                as={`/hashtag/${v.slice(1)}`\r\n                                }\r\n                                prefetch={false}\r\n                                key={v}>\r\n\r\n                                <a>{v}</a>\r\n                            </Link>\r\n                        );\r\n                    }\r\n                    return v;\r\n                })}\r\n\r\n        </div>\r\n    );\r\n};\r\nPostCardContent.propTypes = {\r\n    postData: PropTypes.string.isRequired,\r\n    editMode: PropTypes.bool,\r\n    onCancelUpdate: PropTypes.func.isRequired,\r\n    onChangePost: PropTypes.func.isRequired,\r\n};\r\nPostCardContent.defaultProps = {\r\n    editMode: false,\r\n};\r\nexport default PostCardContent; "]},"metadata":{},"sourceType":"module"}