{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const addCommentLoading = useSelector(state => state.user.addCommentLoading);\n  const addCommentDone = useSelector(state => state.user.addCommentDone);\n  const dispatch = useDispatch();\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) setCommentText('');\n  }, [addCommentDone]);\n  const onSubmit = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return ___EmotionJSX(_Form, {\n    onFinish: onSubmit\n  }, ___EmotionJSX(_Form.Item, null, ___EmotionJSX(_Input.TextArea, {\n    style: {\n      position: 'relative',\n      marginTop: '10px'\n    },\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText\n  }), ___EmotionJSX(_Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading\n  }, \"\\uC785\\uB825\\uD558\\uAE30\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number\n  }).isRequired\n};\nexport default CommentForm;","map":null,"metadata":{},"sourceType":"module"}