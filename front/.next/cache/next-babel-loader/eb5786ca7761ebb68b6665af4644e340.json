{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\hashtag\\\\[tag].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport { useRouter } from 'next/router';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar User = function User() {\n  _s();\n\n  var router = useRouter();\n  var tag = router.query.tag; //next 다이나믹 라우팅으로 특정 사용자id값을 query로 가져올 수 있다\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: lastId,\n            data: tag\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      //쌓여있는 이벤트 메모리를 제거해주기\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, loadPostsLoading, tag]); //og:카카오톡에 나오는 정보\n\n  return ___EmotionJSX(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    },\n    __self: _this\n  }, mainPosts.map(function (post) {\n    return ___EmotionJSX(PostCard, {\n      key: post.id,\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      },\n      __self: _this\n    });\n  }));\n};\n\n_s(User, \"VvP5avvrGk5fdtJbfZakTev2cQg=\", false, function () {\n  return [useRouter, useDispatch, useSelector];\n});\n\n_c = User;\nexport var __N_SSP = true;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","PostCard","LOAD_HASHTAG_POSTS_REQUEST","useRouter","User","router","tag","query","dispatch","state","post","mainPosts","hasMorePosts","loadPostsLoading","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","data","addEventListener","removeEventListener","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,0BAAT,QAA2C,qBAA3C;AAKA,SAASC,SAAT,QAA0B,aAA1B;;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AADe,MAEPG,GAFO,GAECD,MAAM,CAACE,KAFR,CAEPD,GAFO,EAEc;;AAC7B,MAAME,QAAQ,GAAGT,WAAW,EAA5B;;AAHe,qBAIuCD,WAAW,CAAC,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAJlD;AAAA,MAIPC,SAJO,gBAIPA,SAJO;AAAA,MAIIC,YAJJ,gBAIIA,YAJJ;AAAA,MAIkBC,gBAJlB,gBAIkBA,gBAJlB;;AAOfhB,EAAAA,SAAS,CAAC,YAAM;AACZ,aAASiB,QAAT,GAAoB;AAEhB,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACtG,YAAIR,YAAY,IAAI,CAACC,gBAArB,EAAuC;AAAA;;AACnC,cAAMQ,MAAM,iBAAGV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAf,UAAAA,QAAQ,CAAC;AACLgB,YAAAA,IAAI,EAAEtB,0BADD;AAELmB,YAAAA,MAAM,EAANA,MAFK;AAGLI,YAAAA,IAAI,EAAEnB;AAHD,WAAD,CAAR;AAKH;AACJ;AACJ;;AACDS,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,YAAM;AACT;AACAC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACH,KAHD;AAIH,GAnBQ,EAmBN,CAACH,SAAS,CAACW,MAAX,EAAmBV,YAAnB,EAAiCC,gBAAjC,EAAmDP,GAAnD,CAnBM,CAAT,CAPe,CA2Bf;;AACA,SACI,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,SAAS,CAACiB,GAAV,CAAc,UAAClB,IAAD;AAAA,WAAU,cAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACa,EAApB;AAAwB,MAAA,IAAI,EAAEb,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAAA,GAAd,CADL,CADJ;AAKH,CAjCD;;GAAMN,I;UACaD,S,EAEEJ,W,EACqCD,W;;;KAJpDM,I;;AAqDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport wrapper from '../../store/configureStore';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\n\r\n\r\nconst User = () => {\r\n    const router = useRouter();\r\n    const { tag } = router.query;//next 다이나믹 라우팅으로 특정 사용자id값을 query로 가져올 수 있다\r\n    const dispatch = useDispatch();\r\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(state => state.post);\r\n\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePosts && !loadPostsLoading) {\r\n                    const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n                    dispatch({\r\n                        type: LOAD_HASHTAG_POSTS_REQUEST,\r\n                        lastId,\r\n                        data: tag,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            //쌓여있는 이벤트 메모리를 제거해주기\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts.length, hasMorePosts, loadPostsLoading, tag]);\r\n    //og:카카오톡에 나오는 정보\r\n    return (\r\n        <AppLayout>\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n        </AppLayout>\r\n    );\r\n};\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    console.log('getServerSideProps start');\r\n\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_HASHTAG_POSTS_REQUEST,\r\n        data: context.params.tag,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default User; \r\n"]},"metadata":{},"sourceType":"module"}