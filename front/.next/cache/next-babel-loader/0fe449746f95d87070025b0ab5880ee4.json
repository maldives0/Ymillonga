{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\login.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport LoginForm from '../components/LoginForm';\nimport UserProfile from '../components/UserProfile';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CHANGE_MENUKEY_REQUEST } from '../reducers/user';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar Login = function Login() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; // useEffect(() => {\n  //     if (me && me.id) {\n  //         dispatch({\n  //             type: CHANGE_MENUKEY_REQUEST,\n  //             data: '1',\n  //         });\n  //     }\n  // }, [me && me.id]);\n\n\n  return ___EmotionJSX(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    },\n    __self: _this\n  }, me && me.id ? ___EmotionJSX(UserProfile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 28\n    },\n    __self: _this\n  }) : ___EmotionJSX(LoginForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 46\n    },\n    __self: _this\n  }));\n};\n\n_s(Login, \"VNvH4Vw2sOYkJZsQQOV/jgcTpnU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Login;\nexport var __N_SSP = true;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/pages/login.js"],"names":["React","useEffect","AppLayout","LoginForm","UserProfile","useDispatch","useSelector","CHANGE_MENUKEY_REQUEST","Login","dispatch","state","user","me","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAA+BC,sBAA/B,QAA6D,kBAA7D;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAChB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AADgB,qBAEDC,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFV;AAAA,MAERC,EAFQ,gBAERA,EAFQ,EAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SACI,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,EAAE,IAAIA,EAAE,CAACC,EAAT,GAAc,cAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAAgC,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,CADJ;AAKH,CAhBD;;GAAML,K;UACeH,W,EACFC,W;;;KAFbE,K;;AAiCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport LoginForm from '../components/LoginForm';\r\nimport UserProfile from '../components/UserProfile';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport wrapper from '../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST, CHANGE_MENUKEY_REQUEST } from '../reducers/user';\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector(state => state.user);\r\n    // useEffect(() => {\r\n    //     if (me && me.id) {\r\n    //         dispatch({\r\n    //             type: CHANGE_MENUKEY_REQUEST,\r\n    //             data: '1',\r\n    //         });\r\n    //     }\r\n    // }, [me && me.id]);\r\n    return (\r\n        <AppLayout>\r\n            {me && me.id ? <UserProfile /> : <LoginForm />}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    console.log('getServerSideProps start');\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n\r\n    context.store.dispatch(END);\r\n    console.log('getServerSideProps end');\r\n    await context.store.sagaTask.toPromise();\r\n});\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}