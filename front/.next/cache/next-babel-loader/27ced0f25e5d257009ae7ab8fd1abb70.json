{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useMainPosts from '../hooks/useMainPosts';\nimport useInput from '../hooks/useInput';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useMainPosts = useMainPosts(),\n      _useMainPosts2 = _slicedToArray(_useMainPosts, 2),\n      mainPosts = _useMainPosts2[0],\n      setMainPosts = _useMainPosts2[1];\n\n  var imagePaths = mainPosts.imagePaths;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var imageInput = useRef(); // const onChangeText =useCallback(()=>{\n  // },[]);\n\n  var onChangeImages = useCallback(function (e) {\n    console.log('clickImgInfo', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {};\n  }, []);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) alert('게시글을 작성하세요.');\n    imagePaths.forEach(function (p) {\n      FormData.append('image', p);\n    });\n    FormData.append('content', text);\n  }, [text, imagePaths]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uAC8C\\uC2DC\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"f79x6Lyjap63TX4VhUFSmkh3sao=\", false, function () {\n  return [useMainPosts, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/PostForm.js"],"names":["React","useRef","useCallback","useState","Form","Input","Button","useMainPosts","useInput","PostForm","mainPosts","setMainPosts","imagePaths","text","onChangeText","setText","imageInput","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","onClickImageUpload","current","click","onRemoveImage","index","onSubmit","trim","alert","p","margin","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState } from 'react';\r\n\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport useMainPosts from '../hooks/useMainPosts';\r\nimport useInput from '../hooks/useInput';\r\n\r\n\r\n\r\nconst PostForm = () => {\r\n\r\n    const [mainPosts, setMainPosts] = useMainPosts();\r\n    const { imagePaths } = mainPosts;\r\n    const [text, onChangeText, setText] = useInput('');\r\n    const imageInput = useRef();\r\n    // const onChangeText =useCallback(()=>{\r\n\r\n    // },[]);\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('clickImgInfo', e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f) => {\r\n            imageFormData.append('image', f);\r\n        })\r\n    }, []);\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n    const onRemoveImage = useCallback((index) => () => {\r\n\r\n    }, []);\r\n    const onSubmit = useCallback(() => {\r\n        if (!text || !text.trim()) alert('게시글을 작성하세요.');\r\n        imagePaths.forEach((p) => {\r\n            FormData.append('image', p);\r\n        });\r\n        FormData.append('content', text);\r\n\r\n    }, [text, imagePaths]);\r\n    return (\r\n\r\n        <Form\r\n            style={{ margin: '10px 0 20px' }}\r\n            encType=\"multipart/form-data\"\r\n            onFinish={onSubmit}\r\n        >\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"오늘은 어떤 일이 있었나요?\"\r\n            />\r\n            <div>\r\n                <input type=\"file\" name=\"image\" multiple hidden\r\n                    ref={imageInput} onChange={onChangeImages} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드하기</Button>\r\n                <Button type=\"primary\" style={{ float: 'right' }}\r\n                    htmlType=\"submit\">게시하기</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v, i) => {\r\n                    return (\r\n                        <div key={v} style={{ display: 'inline-block' }}>\r\n                            <img src={v} style={{ width: '200px' }} alt={v} />\r\n                            <div>\r\n                                <Button\r\n                                    onClick={onRemoveImage(i)}>삭제하기</Button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\nexport default PostForm; "]},"metadata":{},"sourceType":"module"}