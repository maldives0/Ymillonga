{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"c:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostCard.js\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment, Modal, Form, Input } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport CommentForm from './CommentForm';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST, UPDATE_POST_REQUEST, REPORT_POST_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nmoment.locale('ko');\n\nconst CardWrapper = _styled(\"div\", {\n  target: \"eez0ku0\",\n  label: \"CardWrapper\"\n})(false ? {\n  name: \"1azpx8r\",\n  styles: \"margin-bottom:20px\"\n} : {\n  name: \"1azpx8r\",\n  styles: \"margin-bottom:20px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst PostCard = ({\n  post\n}) => {\n  var _post$Likers;\n\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [reportText, onChangeReportText] = useInput('');\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: editMode,\n    1: setEditMode\n  } = useState(false);\n  const reportPostLoading = useSelector(state => state.post.reportLoading);\n  const reportPostDone = useSelector(state => state.post.reportPostDone);\n  const reportPostError = useSelector(state => state.post.reportPostError);\n  const removePostLoading = useSelector(state => state.post.removePostLoading);\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const onLike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onUnlike = useCallback(() => {\n    if (!id) alert('로그인이 필요합니다');\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onRetweet = useCallback(() => {\n    if (!id) alert('로그인이 필요합니다');\n    dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, [id]);\n  const onClickUpdate = useCallback(() => {\n    setEditMode(true);\n  }, []);\n  const onCancelUpdate = useCallback(() => {\n    setEditMode(false);\n    ;\n  }, []);\n  const onChangePost = useCallback(editText => () => {\n    dispatch({\n      type: UPDATE_POST_REQUEST,\n      data: {\n        PostId: post.id,\n        content: editText\n      }\n    });\n  }, [post]);\n  const onReport = useCallback(() => {\n    setModalVisible(true);\n  }, []);\n  const onsubmitReport = useCallback(() => {\n    dispatch({\n      type: REPORT_POST_REQUEST,\n      data: {\n        postId: post.id,\n        reason: reportText\n      }\n    });\n  }, [reportText]);\n  const reportCancel = useCallback(() => {\n    setModalVisible(false);\n  }, []);\n  useEffect(() => {\n    if (reportPostDone) {\n      setModalVisible(false);\n    }\n\n    if (reportPostError) {\n      setModalVisible(false);\n    }\n  }, [reportPostDone, reportPostError]);\n  const liked = (_post$Likers = post.Likers) === null || _post$Likers === void 0 ? void 0 : _post$Likers.find(v => v.id === id);\n  return ___EmotionJSX(CardWrapper, {\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    },\n    __self: this\n  }, ___EmotionJSX(Card, {\n    cover: post.Images[0] && ___EmotionJSX(PostImages, {\n      images: post.Images,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 42\n      },\n      __self: this\n    }),\n    actions: [___EmotionJSX(RetweetOutlined, {\n      onClick: onRetweet,\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      },\n      __self: this\n    }), liked ? ___EmotionJSX(HeartTwoTone, {\n      key: \"heart\",\n      twoToneColor: \"#eb2f96\",\n      onClick: onUnlike,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      },\n      __self: this\n    }) : ___EmotionJSX(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLike,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      },\n      __self: this\n    }), ___EmotionJSX(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      },\n      __self: this\n    }), ___EmotionJSX(Popover, {\n      key: \"ellipsis\",\n      content: ___EmotionJSX(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        },\n        __self: this\n      }, id && post.User.id === id ? ___EmotionJSX(React.Fragment, null, !post.RetweetId && ___EmotionJSX(Button, {\n        onClick: onClickUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 66\n        },\n        __self: this\n      }, \"\\uC218\\uC815\"), ___EmotionJSX(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        loading: removePostLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 45\n        },\n        __self: this\n      }, \"\\uC0AD\\uC81C\")) : ___EmotionJSX(Button, {\n        onClick: onReport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 37\n        },\n        __self: this\n      }, \"\\uC2E0\\uACE0\\uD558\\uAE30\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      },\n      __self: this\n    }, ___EmotionJSX(EllipsisOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      },\n      __self: this\n    }))],\n    extra: id && ___EmotionJSX(FollowButton, {\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 30\n      },\n      __self: this\n    }),\n    title: post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    },\n    __self: this\n  }, ___EmotionJSX(Modal, {\n    title: \"report\",\n    visible: modalVisible,\n    onOk: onsubmitReport,\n    confirmLoading: reportPostLoading,\n    onCancel: reportCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    },\n    __self: this\n  }, ___EmotionJSX(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    },\n    __self: this\n  }, ___EmotionJSX(Input.TextArea, {\n    style: {\n      position: 'relative',\n      marginTop: '10px',\n      marginBottom: '10px'\n    },\n    rows: 4,\n    value: reportText,\n    onChange: onChangeReportText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    },\n    __self: this\n  })), ___EmotionJSX(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    },\n    __self: this\n  }, \"\\uC2E0\\uACE0\\uD558\\uC2E4 \\uACBD\\uC6B0 \\uB418\\uB3CC\\uB9B4 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uACC4\\uC18D \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\")), post.RetweetId && post.Retweet ? ___EmotionJSX(Card, {\n    cover: post.Retweet.Images[0] && ___EmotionJSX(PostImages, {\n      images: post.Retweet.Images,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    },\n    __self: this\n  }, ___EmotionJSX(\"div\", {\n    style: {\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    },\n    __self: this\n  }, moment(post.Retweet.createdAt).startOf('hour').fromNow()), ___EmotionJSX(Card.Meta, {\n    avatar: ___EmotionJSX(Link, {\n      href: `/user/${post.Retweet.UserId}`,\n      prefetch: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      },\n      __self: this\n    }, ___EmotionJSX(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 58\n      },\n      __self: this\n    }, ___EmotionJSX(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 61\n      },\n      __self: this\n    }, post.Retweet.User.nickname[0]))),\n    title: post.Retweet.User.nickname,\n    description: ___EmotionJSX(PostCardContent, {\n      onCancelUpdate: onCancelUpdate,\n      onChangePost: onChangePost,\n      editMode: editMode,\n      postData: post.Retweet.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    },\n    __self: this\n  })) : ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"div\", {\n    style: {\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    },\n    __self: this\n  }, moment(post.createdAt).startOf('hour').fromNow()), ___EmotionJSX(Card.Meta, {\n    avatar: ___EmotionJSX(Link, {\n      href: `/user/${post.User.id}`,\n      prefetch: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      },\n      __self: this\n    }, ___EmotionJSX(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 41\n      },\n      __self: this\n    }, ___EmotionJSX(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 44\n      },\n      __self: this\n    }, post.User.nickname[0]))),\n    title: post.User.nickname,\n    description: ___EmotionJSX(PostCardContent, {\n      editMode: editMode,\n      onCancelUpdate: onCancelUpdate,\n      onChangePost: onChangePost,\n      postData: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    },\n    __self: this\n  }))), commentFormOpened && ___EmotionJSX(React.Fragment, null, ___EmotionJSX(CommentForm, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    },\n    __self: this\n  }), ___EmotionJSX(List, {\n    header: `댓글: ${post.Comments ? post.Comments.length : 0}개`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments || [],\n    renderItem: item => ___EmotionJSX(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      },\n      __self: this\n    }, ___EmotionJSX(Comment, {\n      author: item.User.nickname,\n      avatar: ___EmotionJSX(Link, {\n        href: `/user/${item.User.id}`,\n        prefetch: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 41\n        },\n        __self: this\n      }, ___EmotionJSX(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 45\n        },\n        __self: this\n      }, ___EmotionJSX(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 49\n        },\n        __self: this\n      }, item.User.nickname[0]))),\n      content: item.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    },\n    __self: this\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["c:/Users/HOME/Documents/ymillonga/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","Modal","Form","Input","PropTypes","useSelector","useDispatch","moment","Link","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","CommentForm","PostImages","FollowButton","PostCardContent","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","UPDATE_POST_REQUEST","REPORT_POST_REQUEST","useInput","locale","CardWrapper","PostCard","post","dispatch","id","state","user","me","reportText","onChangeReportText","commentFormOpened","setCommentFormOpened","editMode","setEditMode","reportPostLoading","reportLoading","reportPostDone","reportPostError","removePostLoading","modalVisible","setModalVisible","onLike","alert","type","data","onUnlike","onRemovePost","onRetweet","onToggleComment","prev","onClickUpdate","onCancelUpdate","onChangePost","editText","PostId","content","onReport","onsubmitReport","postId","reason","reportCancel","useEffect","liked","Likers","find","v","Images","User","RetweetId","nickname","position","marginTop","marginBottom","Retweet","float","createdAt","startOf","fromNow","UserId","Comments","length","item","propTypes","shape","number","object","string","arrayOf","any","objectOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Card, Button, Avatar, Popover, List, Comment, Modal, Form, Input } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from '@emotion/styled';\r\nimport moment from 'moment';\r\nimport Link from 'next/link';\r\nimport {\r\n    RetweetOutlined,\r\n    HeartTwoTone,\r\n    HeartOutlined,\r\n    MessageOutlined,\r\n    EllipsisOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport CommentForm from './CommentForm';\r\nimport PostImages from './PostImages';\r\nimport FollowButton from './FollowButton';\r\nimport PostCardContent from './PostCardContent';\r\nimport {\r\n    REMOVE_POST_REQUEST,\r\n    LIKE_POST_REQUEST,\r\n    UNLIKE_POST_REQUEST,\r\n    RETWEET_REQUEST,\r\n    UPDATE_POST_REQUEST,\r\n    REPORT_POST_REQUEST,\r\n} from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nmoment.locale('ko');\r\nconst CardWrapper = styled.div`\r\nmargin-bottom: 20px;`\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [reportText, onChangeReportText] = useInput('');\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const reportPostLoading = useSelector((state) => state.post.reportLoading);\r\n    const reportPostDone = useSelector((state) => state.post.reportPostDone);\r\n    const reportPostError = useSelector((state) => state.post.reportPostError);\r\n    const removePostLoading = useSelector(state => state.post.removePostLoading);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const onLike = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: LIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n    const onUnlike = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n        return dispatch({\r\n            type: UNLIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [id]);\r\n    const onRemovePost = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다');\r\n        }\r\n        return dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        })\r\n    }, [id]);\r\n    const onRetweet = useCallback(() => {\r\n        if (!id) alert('로그인이 필요합니다');\r\n        dispatch({\r\n            type: RETWEET_REQUEST,\r\n            data: post.id,\r\n        })\r\n    }, [id]);\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [id]);\r\n\r\n    const onClickUpdate = useCallback(() => {\r\n        setEditMode(true);\r\n    }, []);\r\n    const onCancelUpdate = useCallback(() => {\r\n        setEditMode(false);;\r\n    }, []);\r\n    const onChangePost = useCallback((editText) => () => {\r\n        dispatch({\r\n            type: UPDATE_POST_REQUEST,\r\n            data: {\r\n                PostId: post.id,\r\n                content: editText,\r\n            },\r\n        });\r\n    }, [post]);\r\n    const onReport = useCallback(() => {\r\n        setModalVisible(true);\r\n    }, []);\r\n    const onsubmitReport = useCallback(() => {\r\n        dispatch({\r\n            type: REPORT_POST_REQUEST,\r\n            data: {\r\n                postId: post.id,\r\n                reason: reportText,\r\n            }\r\n        });\r\n    }, [reportText]);\r\n    const reportCancel = useCallback(() => {\r\n        setModalVisible(false);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (reportPostDone) {\r\n            setModalVisible(false);\r\n        }\r\n        if (reportPostError) {\r\n            setModalVisible(false);\r\n        }\r\n    }, [reportPostDone, reportPostError]);\r\n    const liked = post.Likers?.find((v) => v.id === id);\r\n    return (\r\n        <CardWrapper key={post.id}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined\r\n                        onClick={onRetweet}\r\n                        key=\"retweet\" />,\r\n                    liked ?\r\n                        <HeartTwoTone\r\n                            key=\"heart\"\r\n                            twoToneColor=\"#eb2f96\"\r\n                            onClick={onUnlike} /> :\r\n                        <HeartOutlined\r\n                            key=\"heart\"\r\n                            onClick={onLike} />,\r\n                    <MessageOutlined\r\n                        key=\"message\"\r\n                        onClick={onToggleComment} />,\r\n                    <Popover\r\n                        key=\"ellipsis\"\r\n                        content={(\r\n                            <Button.Group>\r\n                                {id && post.User.id === id ?\r\n                                    (\r\n                                        <>\r\n                                            {!post.RetweetId && (<Button\r\n                                                onClick={onClickUpdate}>수정</Button>)}\r\n                                            <Button\r\n                                                type=\"danger\"\r\n                                                onClick={onRemovePost}\r\n                                                loading={removePostLoading} >삭제</Button>\r\n                                        </>\r\n                                    ) :\r\n                                    <Button onClick={onReport}>신고하기</Button>\r\n                                }\r\n                            </Button.Group>\r\n                        )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                extra={id && <FollowButton post={post} />}\r\n                title={post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null}\r\n            >\r\n                <Modal\r\n                    title=\"report\"\r\n                    visible={modalVisible}\r\n                    onOk={onsubmitReport}\r\n                    confirmLoading={reportPostLoading}\r\n                    onCancel={reportCancel}\r\n                >\r\n                    <Form >\r\n                        <Input.TextArea\r\n                            style={{ position: 'relative', marginTop: '10px', marginBottom: '10px' }}\r\n                            rows={4}\r\n                            value={reportText}\r\n                            onChange={onChangeReportText}\r\n\r\n                        />\r\n                    </Form>\r\n                    <p>신고하실 경우 되돌릴 수 없습니다. 계속 하시겠습니까?</p>\r\n                </Modal>\r\n                {post.RetweetId && post.Retweet ?\r\n                    (\r\n                        <Card\r\n                            cover={post.Retweet.Images[0] &&\r\n                                <PostImages images={post.Retweet.Images} />}>\r\n                            <div style={{ float: 'right' }}>\r\n                                {moment(post.Retweet.createdAt).startOf('hour').fromNow()}\r\n                            </div>\r\n                            <Card.Meta\r\n                                avatar={(\r\n                                    <Link href={`/user/${post.Retweet.UserId}`}\r\n                                        prefetch={false}><a><Avatar>\r\n                                            {post.Retweet.User.nickname[0]}\r\n                                        </Avatar></a></Link>\r\n                                )}\r\n                                title={post.Retweet.User.nickname}\r\n                                description={\r\n                                    <PostCardContent\r\n                                        onCancelUpdate={onCancelUpdate}\r\n                                        onChangePost={onChangePost}\r\n                                        editMode={editMode}\r\n                                        postData={post.Retweet.content}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    ) : (\r\n                        <>\r\n                            <div style={{ float: 'right' }}>\r\n                                {moment(post.createdAt).startOf('hour').fromNow()}\r\n                            </div>\r\n                            <Card.Meta\r\n                                avatar={(\r\n                                    <Link href={`/user/${post.User.id}`}\r\n                                        prefetch={false}>\r\n                                        <a><Avatar>\r\n                                            {post.User.nickname[0]}\r\n                                        </Avatar></a>\r\n                                    </Link>\r\n                                )}\r\n                                title={post.User.nickname}\r\n                                description={\r\n                                    <PostCardContent\r\n                                        editMode={editMode}\r\n                                        onCancelUpdate={\r\n                                            onCancelUpdate\r\n                                        }\r\n                                        onChangePost={onChangePost}\r\n                                        postData={post.content}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </>\r\n                    )}\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`댓글: ${post.Comments ? post.Comments.length : 0}개`}\r\n                        itemLayout='horizontal'\r\n                        dataSource={post.Comments || []}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={(\r\n                                        <Link\r\n                                            href={`/user/${item.User.id}`}\r\n                                            prefetch={false}>\r\n                                            <a>\r\n                                                <Avatar>{item.User.nickname[0]}</Avatar>\r\n                                            </a>\r\n                                        </Link>\r\n                                    )}\r\n                                    content={item.content} />\r\n                            </li>\r\n                        )} />\r\n                </>\r\n            )}\r\n        </CardWrapper >\r\n    );\r\n};\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        Comments: PropTypes.arrayOf(PropTypes.any),\r\n        Images: PropTypes.arrayOf(PropTypes.any),\r\n        Likers: PropTypes.arrayOf(PropTypes.object),\r\n        RetweetId: PropTypes.number,\r\n        Retweet: PropTypes.objectOf(PropTypes.any),\r\n    }).isRequired,\r\n};\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}