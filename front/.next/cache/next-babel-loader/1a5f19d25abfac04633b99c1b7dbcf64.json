{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\LoginForm.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { Form, Input, Button, Row, Divider } from 'antd';\nimport Link from 'next/link';\nimport useInput from '../hooks/useInput';\nimport { default as UserOutlined } from '@ant-design/icons/UserOutlined';\nimport { default as LockOutlined } from '@ant-design/icons/LockOutlined';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport FacebookLoginBtn from './FacebookLoginBtn';\nimport GoogleLoginBtn from './GoogleLoginBtn';\nimport { useRouter } from 'next/router';\nimport { Typography } from 'antd';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Title = Typography.Title;\nconst layout = {\n  wrapperCol: {\n    xs: {\n      span: 2,\n      offset: 1\n    },\n    sm: {\n      span: 12,\n      offset: 3\n    },\n    md: {\n      span: 9,\n      offset: 4\n    },\n    lg: {\n      span: 6,\n      offset: 6\n    }\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 6,\n    span: 12\n  }\n};\nconst btnLayout = {\n  wrapperCol: {\n    xs: {\n      span: 21,\n      offset: 1\n    },\n    sm: {\n      span: 21,\n      offset: 3\n    },\n    md: {\n      span: 18,\n      offset: 2\n    },\n    lg: {\n      span: 18,\n      offset: 2\n    }\n  }\n};\n\nconst LoginForm = () => {\n  const Router = useRouter();\n  const me = useSelector(state => state.user.me);\n  const logInLoading = useSelector(state => state.user.logInLoading);\n  const logInError = useSelector(state => state.user.logInError);\n  const dispatch = useDispatch();\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: basicButtonClicked,\n    1: setBasicButtonClicked\n  } = useState(false);\n  useEffect(() => {\n    if (me && me.id) {\n      alert('로그인 중입니다. 메인페이지로 이동합니다.');\n      Router.replace('/'); //push는 뒤로가기 하면 히스토리가 남아있지만 replace는 지워짐\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (logInError) alert(logInError);\n  }, [logInError]);\n  const onClickBasicButton = useCallback(() => {\n    setBasicButtonClicked(true);\n  }, []);\n  const onSubmitForm = useCallback(() => {\n    if (basicButtonClicked) {\n      dispatch({\n        type: LOG_IN_REQUEST,\n        data: {\n          email,\n          password\n        }\n      });\n    }\n  }, [email, password, basicButtonClicked]);\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Title, {\n    level: 2,\n    style: {\n      marginTop: '15%',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    },\n    __self: this\n  }, \"Y Millonga\\uC5D0 \\uAC00\\uC785\\uD574\\uC11C \\uB2F9\\uC2E0\\uC758 \\uC18C\\uC911\\uD55C \\uACBD\\uD5D8\\uC744 \\uD568\\uAED8 \\uB098\\uB220\\uC8FC\\uC138\\uC694!\"), ___EmotionJSX(\"div\", {\n    style: {\n      position: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    },\n    __self: this\n  }, ___EmotionJSX(\"img\", {\n    width: 250,\n    height: 250,\n    src: \"/images/dancer3.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    },\n    __self: this\n  })), ___EmotionJSX(\"div\", {\n    style: {\n      position: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    },\n    __self: this\n  }, ___EmotionJSX(\"img\", {\n    width: 250,\n    height: 250,\n    src: \"/images/dancer4.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    },\n    __self: this\n  })), ___EmotionJSX(Form, {\n    span: 4,\n    offset: 2,\n    name: \"basic-form\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    },\n    __self: this\n  }, ___EmotionJSX(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: basicButtonClicked,\n      message: 'Please input your username!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    },\n    __self: this\n  }, ___EmotionJSX(Input, {\n    prefix: ___EmotionJSX(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 36\n      },\n      __self: this\n    }),\n    placeholder: \"Username\",\n    value: email,\n    onChange: onChangeEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    },\n    __self: this\n  })), ___EmotionJSX(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: basicButtonClicked,\n      message: 'Please input your password!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    },\n    __self: this\n  }, ___EmotionJSX(Input, {\n    prefix: ___EmotionJSX(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    },\n    __self: this\n  })), ___EmotionJSX(Form.Item, _extends({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    },\n    __self: this\n  }), ___EmotionJSX(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    },\n    __self: this\n  }, ___EmotionJSX(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: logInLoading,\n    onClick: onClickBasicButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778\"), ___EmotionJSX(Divider, {\n    type: \"vertical\",\n    style: {\n      border: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    },\n    __self: this\n  }), ___EmotionJSX(Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    },\n    __self: this\n  }, ___EmotionJSX(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 46\n    },\n    __self: this\n  }, ___EmotionJSX(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 49\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))))), ___EmotionJSX(Form.Item, _extends({}, btnLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    },\n    __self: this\n  }), ___EmotionJSX(Row, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    },\n    __self: this\n  }, ___EmotionJSX(GoogleLoginBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    },\n    __self: this\n  }), ___EmotionJSX(FacebookLoginBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    },\n    __self: this\n  })))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/LoginForm.js"],"names":["React","useEffect","useState","useCallback","Form","Input","Button","Row","Divider","Link","useInput","default","UserOutlined","LockOutlined","useSelector","useDispatch","LOG_IN_REQUEST","FacebookLoginBtn","GoogleLoginBtn","useRouter","Typography","Title","layout","wrapperCol","xs","span","offset","sm","md","lg","tailLayout","btnLayout","LoginForm","Router","me","state","user","logInLoading","logInError","dispatch","email","onChangeEmail","password","onChangePassword","basicButtonClicked","setBasicButtonClicked","id","alert","replace","onClickBasicButton","onSubmitForm","type","data","marginTop","textAlign","position","remember","required","message","border"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Form, Input, Button, Row, Divider } from 'antd';\r\nimport Link from 'next/link';\r\nimport useInput from '../hooks/useInput';\r\nimport {\r\n    default as UserOutlined,\r\n} from '@ant-design/icons/UserOutlined';\r\nimport {\r\n    default as LockOutlined,\r\n} from '@ant-design/icons/LockOutlined';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\nimport FacebookLoginBtn from './FacebookLoginBtn';\r\nimport GoogleLoginBtn from './GoogleLoginBtn';\r\nimport { useRouter } from 'next/router';\r\nimport { Typography } from 'antd';\r\nconst Title = Typography.Title;\r\nconst layout = {\r\n    wrapperCol: {\r\n        xs: { span: 2, offset: 1 },\r\n        sm: { span: 12, offset: 3 },\r\n        md: { span: 9, offset: 4 },\r\n        lg: { span: 6, offset: 6 },\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 6, span: 12 },\r\n};\r\nconst btnLayout = {\r\n    wrapperCol: {\r\n        xs: { span: 21, offset: 1 },\r\n        sm: { span: 21, offset: 3 },\r\n        md: { span: 18, offset: 2 },\r\n        lg: { span: 18, offset: 2 },\r\n    },\r\n};\r\nconst LoginForm = () => {\r\n    const Router = useRouter();\r\n\r\n    const me = useSelector(state => state.user.me);\r\n    const logInLoading = useSelector(state => state.user.logInLoading);\r\n    const logInError = useSelector(state => state.user.logInError);\r\n    const dispatch = useDispatch();\r\n    const [email, onChangeEmail] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    const [basicButtonClicked, setBasicButtonClicked] = useState(false);\r\n    useEffect(() => {\r\n        if (me && me.id) {\r\n            alert('로그인 중입니다. 메인페이지로 이동합니다.');\r\n            Router.replace('/');//push는 뒤로가기 하면 히스토리가 남아있지만 replace는 지워짐\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    useEffect(() => {\r\n        if (logInError) alert(logInError);\r\n    }, [logInError]);\r\n\r\n    const onClickBasicButton = useCallback(() => {\r\n        setBasicButtonClicked(true);\r\n    }, []);\r\n\r\n    const onSubmitForm = useCallback(() => {\r\n        if (basicButtonClicked) {\r\n            dispatch({\r\n                type: LOG_IN_REQUEST,\r\n                data: { email, password },\r\n            });\r\n        }\r\n    }, [email, password, basicButtonClicked]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} style={{ marginTop: '15%', textAlign: 'center' }}>Y Millonga에 가입해서 당신의 소중한 경험을 함께 나눠주세요!</Title>\r\n            <div style={{ position: 'absolute' }}>\r\n                <img\r\n                    width={250}\r\n                    height={250}\r\n                    src=\"/images/dancer3.jpg\"\r\n                /></div>\r\n\r\n            <div style={{ position: 'absolute' }}>\r\n                <img\r\n                    width={250}\r\n                    height={250}\r\n                    src=\"/images/dancer4.jpg\"\r\n                /></div>\r\n            <Form\r\n                span={4} offset={2}\r\n                name=\"basic-form\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onSubmitForm}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: basicButtonClicked,\r\n                            message: 'Please input your username!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                        placeholder=\"Username\"\r\n                        value={email}\r\n                        onChange={onChangeEmail} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: basicButtonClicked,\r\n                            message: 'Please input your password!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={onChangePassword}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout} >\r\n                    <Row >\r\n                        <Button type=\"primary\" htmlType=\"submit\"\r\n                            loading={logInLoading}\r\n                            onClick={onClickBasicButton}\r\n                        >\r\n                            로그인\r\n            </Button>\r\n                        <Divider type=\"vertical\" style={{ border: 'none' }} />\r\n                        <Link href=\"/signup\"><a><Button>\r\n                            회원가입\r\n            </Button></a></Link>\r\n                    </Row>\r\n                </Form.Item>\r\n                <Form.Item {...btnLayout}>\r\n                    <Row justify=\"center\">\r\n                        <GoogleLoginBtn />\r\n                        <FacebookLoginBtn />\r\n                    </Row>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n\r\n\r\n};\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}