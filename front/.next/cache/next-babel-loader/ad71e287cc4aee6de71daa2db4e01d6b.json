{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _LockOutlined from \"@ant-design/icons/es/icons/LockOutlined\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _UserOutlined from \"@ant-design/icons/es/icons/UserOutlined\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Link from 'next/link';\nimport useInput from '../hooks/useInput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport FacebookLoginBtn from './FacebookLoginBtn';\nimport GoogleLoginBtn from './GoogleLoginBtn';\nimport { useRouter } from 'next/router';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst layout = {\n  wrapperCol: {\n    xs: {\n      span: 12,\n      offset: 2\n    },\n    sm: {\n      span: 12,\n      offset: 3\n    },\n    md: {\n      span: 8,\n      offset: 8\n    }\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 12,\n    span: 16\n  }\n};\nconst btnLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst LoginForm = () => {\n  const Router = useRouter();\n  const me = useSelector(state => state.user.me);\n  const logInLoading = useSelector(state => state.user.logInLoading);\n  const logInError = useSelector(state => state.user.logInError);\n  const dispatch = useDispatch();\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: basicButtonClicked,\n    1: setBasicButtonClicked\n  } = useState(false);\n  useEffect(() => {\n    if (me && me.id) {\n      alert('로그인 중입니다. 메인페이지로 이동합니다.');\n      Router.replace('/'); //push는 뒤로가기 하면 히스토리가 남아있지만 replace는 지워짐\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (logInError) alert(logInError);\n  }, [logInError]);\n  const onClickBasicButton = useCallback(() => {\n    setBasicButtonClicked(true);\n  }, []);\n  const onSubmitForm = useCallback(() => {\n    if (basicButtonClicked) {\n      dispatch({\n        type: LOG_IN_REQUEST,\n        data: {\n          email,\n          password\n        }\n      });\n    }\n  }, [email, password, basicButtonClicked]);\n  return ___EmotionJSX(_Form, _extends({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onSubmitForm\n  }), ___EmotionJSX(_Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: basicButtonClicked,\n      message: 'Please input your username!'\n    }]\n  }, ___EmotionJSX(_Input, {\n    prefix: ___EmotionJSX(_UserOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    placeholder: \"Username\",\n    value: email,\n    onChange: onChangeEmail\n  })), ___EmotionJSX(_Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: basicButtonClicked,\n      message: 'Please input your password!'\n    }]\n  }, ___EmotionJSX(_Input, {\n    prefix: ___EmotionJSX(_LockOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: onChangePassword\n  })), ___EmotionJSX(_Form.Item, tailLayout, ___EmotionJSX(_Row, null, ___EmotionJSX(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: logInLoading,\n    onClick: onClickBasicButton\n  }, \"\\uB85C\\uADF8\\uC778\"), ___EmotionJSX(_Divider, {\n    type: \"vertical\",\n    style: {\n      border: 'none'\n    }\n  }), ___EmotionJSX(Link, {\n    href: \"/signup\"\n  }, ___EmotionJSX(\"a\", null, ___EmotionJSX(_Button, null, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))))), ___EmotionJSX(_Form.Item, btnLayout, ___EmotionJSX(_Row, null, ___EmotionJSX(GoogleLoginBtn, null), ___EmotionJSX(FacebookLoginBtn, null))));\n};\n\nexport default LoginForm;","map":null,"metadata":{},"sourceType":"module"}