{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport { backUrl } from '../config/config';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar PostForm = function PostForm() {\n  var imagePaths = useSelector(function (state) {\n    return state.post.imagePaths;\n  });\n  var addPostLoading = useSelector(function (state) {\n    return state.post.addPostLoading;\n  });\n  var addPostDone = useSelector(function (state) {\n    return state.post.addPostDone;\n  });\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var imageInput = useRef();\n  useEffect(function () {\n    if (addPostDone) setText('');\n  }, [addPostDone]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('clickImgInfo', e.target.files); //선택한 이미지 파일 형식이 담겨있다(1개)\n\n    var imageFormData = new FormData(); //멀티파트형식으로 백서버로 보낸다\n\n    [].forEach.call(e.target.files, function (f) {\n      //유사배열이므로 forEach method를 배열에서 빌려온다\n      imageFormData.append('image', f); //백서버의 키 값과 'image' 일치시켜야 함\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  }, []);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성한 후 버튼을 누르세요.');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  return ___EmotionJSX(Form, {\n    style: {\n      margin: '10px 0 30px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit\n  }, ___EmotionJSX(Form.Item, null, ___EmotionJSX(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    style: {\n      height: '80px',\n      marginBottom: '5px'\n    }\n  }), ___EmotionJSX(\"div\", null, ___EmotionJSX(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages\n  }), ___EmotionJSX(Button, {\n    onClick: onClickImageUpload\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"), ___EmotionJSX(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    loading: addPostLoading,\n    htmlType: \"submit\"\n  }, \"\\uAC8C\\uC2DC\\uD558\\uAE30\")), ___EmotionJSX(\"div\", null, imagePaths.map(function (v, i) {\n    return ___EmotionJSX(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      }\n    }, ___EmotionJSX(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v\n    }), ___EmotionJSX(\"div\", null, ___EmotionJSX(Button, {\n      onClick: onRemoveImage(i)\n    }, \"\\uC0AD\\uC81C\\uD558\\uAE30\")));\n  }))));\n};\n\nexport default PostForm;","map":null,"metadata":{},"sourceType":"module"}