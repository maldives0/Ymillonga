{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { Avatar, Card, Divider, Tooltip, message, Modal } from 'antd';\nimport { default as SettingOutlined } from '@ant-design/icons/SettingOutlined';\nimport { default as ClearOutlined } from '@ant-design/icons/ClearOutlined';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LEAVE_REQUEST, LOG_OUT_REQUEST } from '../reducers/user';\nimport { CardWrapper } from './style';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst UserProfile = () => {\n  const dispatch = useDispatch();\n  const me = useSelector(state => state.user.me);\n  const leaveLoading = useSelector(state => state.post.leaveLoading);\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const changeNicknameDone = useSelector(state => state.user.changeNicknameDone);\n  const {\n    0: editNickname,\n    1: setEditNickname\n  } = useState(false);\n  const onClickEditNickname = useCallback(() => {\n    setEditNickname(prev => !prev);\n  }, []);\n  const onLeave = useCallback(() => {\n    setModalVisible(true);\n  }, []);\n  const onsubmitLeave = useCallback(() => {\n    if (!(me && me.id)) {\n      return message.info('로그인이 필요합니다.');\n    }\n\n    dispatch({\n      type: LEAVE_REQUEST\n    });\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n    setModalVisible(false);\n  }, [me]);\n  const leaveCancel = useCallback(() => {\n    setModalVisible(false);\n  }, []);\n  const onCancel = useCallback(() => {\n    setEditNickname(prev => !prev);\n  }, []);\n  useEffect(() => {\n    if (changeNicknameDone) {\n      setEditNickname(false);\n      message.success('닉네임이 변경되었습니다.');\n    }\n  }, [changeNicknameDone]);\n  return ___EmotionJSX(CardWrapper, null, ___EmotionJSX(Card, {\n    key: `${me.id}_profile`,\n    style: {\n      width: '300',\n      marginTop: 16\n    },\n    type: \"inner\",\n    extra: [___EmotionJSX(Tooltip, {\n      title: \"\\uB2C9\\uB124\\uC784 \\uBC14\\uAFB8\\uAE30\"\n    }, ___EmotionJSX(SettingOutlined, {\n      key: \"edit-nickname\",\n      onClick: onClickEditNickname\n    })), ___EmotionJSX(Divider, {\n      type: \"vertical\"\n    }), ___EmotionJSX(Tooltip, {\n      title: \"\\uD0C8\\uD1F4\\uD558\\uAE30\"\n    }, ___EmotionJSX(ClearOutlined, {\n      key: \"leave\",\n      onClick: onLeave,\n      loading: leaveLoading\n    }))],\n    actions: [___EmotionJSX(\"div\", {\n      key: `${me.id}_twit`\n    }, ___EmotionJSX(Link, {\n      prefetch: false,\n      href: `/user/${me.id}`\n    }, ___EmotionJSX(\"a\", null, \"\\uAC8C\\uC2DC\\uAE00\", ___EmotionJSX(\"br\", null), me.Posts.length))), ___EmotionJSX(\"div\", {\n      key: `${me.id}_following`\n    }, ___EmotionJSX(Link, {\n      prefetch: false,\n      href: `/posts/related`\n    }, ___EmotionJSX(\"a\", null, \"\\uD314\\uB85C\\uC789\", ___EmotionJSX(\"br\", null), me.Followings.length))), ___EmotionJSX(\"div\", {\n      key: `${me.id}_follower`\n    }, ___EmotionJSX(Link, {\n      href: \"/profile\"\n    }, ___EmotionJSX(\"a\", null, \"\\uD314\\uB85C\\uC5B4\", ___EmotionJSX(\"br\", null), me.Followers.length))), ___EmotionJSX(\"div\", {\n      key: `${me.id}_ignoring`\n    }, ___EmotionJSX(Link, {\n      href: \"/profile\"\n    }, ___EmotionJSX(\"a\", null, \"\\uCC28\\uB2E8\\uC790\", ___EmotionJSX(\"br\", null), me.Ignorings.length)))]\n  }, ___EmotionJSX(Modal, {\n    title: \"report\",\n    visible: modalVisible,\n    onOk: onsubmitLeave,\n    confirmLoading: leaveLoading,\n    onCancel: leaveCancel\n  }, ___EmotionJSX(\"p\", null, \"\\uD0C8\\uD1F4\\uD558\\uC2E4 \\uACBD\\uC6B0 \\uB418\\uB3CC\\uB9B4 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uACC4\\uC18D \\uC9C4\\uD589\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\")), ___EmotionJSX(Card.Meta, {\n    avatar: ___EmotionJSX(Link, {\n      prefetch: false,\n      href: `/user/${me.id}`\n    }, ___EmotionJSX(\"a\", null, ___EmotionJSX(Avatar, null, me.nickname[0]))),\n    title: me.nickname,\n    style: {\n      marginBottom: \"10px\"\n    }\n  }), editNickname && ___EmotionJSX(NicknameEditForm, {\n    onCancel: onCancel\n  })));\n};\n\nexport default UserProfile;","map":null,"metadata":{},"sourceType":"module"}