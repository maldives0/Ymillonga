{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\components\\\\PostImages.js\";\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { PlusOutlined } from '@ant-design/icons';\nimport ImagesZoom from './ImagesZoom';\nimport { backUrl } from '../config/config';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"img\", {\n      role: \"presentation\",\n      src: `${backUrl}/${images[0].src}`,\n      alt: images[0].src,\n      style: {\n        height: '200px',\n        cursor: 'pointer'\n      },\n      onClick: onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      },\n      __self: this\n    }), showImagesZoom && ___EmotionJSX(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n  if (images.length === 2) {\n    return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"img\", {\n      role: \"presentation\",\n      style: {\n        width: '50%',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      src: `${backUrl}/${images[0].src}`,\n      alt: images[0].src,\n      onClick: onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      },\n      __self: this\n    }), ___EmotionJSX(\"img\", {\n      role: \"presentation\",\n      style: {\n        width: '50%',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      src: `${backUrl}/${images[1].src}`,\n      alt: images[1].src,\n      onClick: onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      },\n      __self: this\n    }), showImagesZoom && ___EmotionJSX(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    },\n    __self: this\n  }, ___EmotionJSX(\"img\", {\n    role: \"presentation\",\n    style: {\n      width: '50%',\n      cursor: 'pointer'\n    },\n    src: `${backUrl}/${images[0].src}`,\n    alt: images[0].src,\n    onClick: onZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    },\n    __self: this\n  }), ___EmotionJSX(\"div\", {\n    role: \"presentation\",\n    style: {\n      width: '50%',\n      display: 'inline-block',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      cursor: 'pointer'\n    },\n    onClick: onZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    },\n    __self: this\n  }, ___EmotionJSX(PlusOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    },\n    __self: this\n  }), ___EmotionJSX(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    },\n    __self: this\n  }), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354 \\uBCF4\\uAE30\")), showImagesZoom && ___EmotionJSX(ImagesZoom, {\n    images: images,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 32\n    },\n    __self: this\n  }));\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default PostImages;","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/components/PostImages.js"],"names":["React","useCallback","useState","PropTypes","PlusOutlined","ImagesZoom","backUrl","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","height","cursor","width","display","textAlign","verticalAlign","propTypes","arrayOf","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport ImagesZoom from './ImagesZoom';\r\nimport { backUrl } from '../config/config';\r\nconst PostImages = ({ images }) => {\r\n    const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n    const onZoom = useCallback(() => {\r\n        setShowImagesZoom(true);\r\n    }, []);\r\n    const onClose = useCallback(() => {\r\n        setShowImagesZoom(false);\r\n    }, []);\r\n\r\n    if (images.length === 1) {\r\n        return (\r\n            <>\r\n                <img role=\"presentation\"\r\n                    src={`${backUrl}/${images[0].src}`}\r\n                    alt={images[0].src}\r\n                    style={{\r\n                        height: '200px',\r\n                        cursor: 'pointer'\r\n                    }}\r\n                    onClick={onZoom} />\r\n                {showImagesZoom && <ImagesZoom\r\n                    images={images} onClose={onClose} />}\r\n            </>\r\n        );\r\n    }\r\n    if (images.length === 2) {\r\n        return (\r\n            <>\r\n                <img role=\"presentation\"\r\n                    style={{\r\n                        width: '50%',\r\n                        display: 'inline-block',\r\n                        cursor: 'pointer'\r\n                    }}\r\n                    src={`${backUrl}/${images[0].src}`}\r\n                    alt={images[0].src}\r\n                    onClick={onZoom} />\r\n                <img role=\"presentation\"\r\n                    style={{\r\n                        width: '50%',\r\n                        display: 'inline-block',\r\n                        cursor: 'pointer'\r\n                    }}\r\n                    src={`${backUrl}/${images[1].src}`}\r\n                    alt={images[1].src}\r\n                    onClick={onZoom} />\r\n                {showImagesZoom && <ImagesZoom\r\n                    images={images} onClose={onClose} />}\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <img role=\"presentation\"\r\n                    style={{\r\n                        width: '50%',\r\n                        cursor: 'pointer'\r\n                    }}\r\n                    src={`${backUrl}/${images[0].src}`}\r\n                    alt={images[0].src}\r\n                    onClick={onZoom} />\r\n                <div role=\"presentation\"\r\n                    style={{\r\n                        width: '50%',\r\n                        display: 'inline-block',\r\n                        textAlign: 'center',\r\n                        verticalAlign: 'middle',\r\n                        cursor: 'pointer'\r\n                    }}\r\n                    onClick={onZoom}>\r\n                    <PlusOutlined />\r\n                    <br />\r\n                    {images.length - 1}개의 사진 더 보기\r\n        </div>\r\n            </div>\r\n            {showImagesZoom && <ImagesZoom\r\n                images={images} onClose={onClose} />}\r\n        </>\r\n    );\r\n};\r\nPostImages.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\nexport default PostImages; "]},"metadata":{},"sourceType":"module"}