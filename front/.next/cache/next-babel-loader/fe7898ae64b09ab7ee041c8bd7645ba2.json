{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\ymillonga\\\\front\\\\pages\\\\signup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { Form, Checkbox, Button, Input } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport useInput from '../hooks/useInput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nimport Router from 'next/router';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar Signup = function Signup() {\n  _s();\n\n  var dispatch = useDispatch();\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var signUpLoading = useSelector(function (state) {\n    return state.user.signUpLoading;\n  });\n  var signUpDone = useSelector(function (state) {\n    return state.user.signUpDone;\n  });\n  var signUpError = useSelector(function (state) {\n    return state.user.signUpError;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickname = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useState = useState(''),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var _useState3 = useState(false),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1];\n\n  useEffect(function () {\n    if (me && me.id) {\n      alert('로그인 중입니다. 메인페이지로 이동합니다.');\n      Router.replace('/'); //push는 뒤로가기 하면 히스토리가 남아있지만 replace는 지워짐\n    }\n  }, [me && me.id]);\n  useEffect(function () {\n    if (signUpDone) {\n      Router.replace('/login');\n    }\n  }, [signUpDone]);\n  useEffect(function () {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, [password]);\n  var onSubmit = useCallback(function () {\n    if (password !== passwordCheck) setPasswordError(true);\n    if (!term) setTermError(true);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email: email,\n        password: password,\n        nickname: nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  return ___EmotionJSX(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    },\n    __self: _this\n  }, ___EmotionJSX(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    },\n    __self: _this\n  }, ___EmotionJSX(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    },\n    __self: _this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785 | Ymillonga\")), ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Form, {\n    name: \"signup-form\",\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    onFinish: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    },\n    __self: _this\n  }, ___EmotionJSX(Form.Item, {\n    label: \"\\uC774\\uBA54\\uC77C\",\n    rules: [{\n      type: 'email'\n    }, {\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    },\n    __self: _this\n  }, ___EmotionJSX(Input, {\n    name: \"user-name\",\n    type: \"email\",\n    value: email,\n    required: true,\n    onChange: onChangeEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    },\n    __self: _this\n  })), ___EmotionJSX(Form.Item, {\n    label: \"\\uB2C9\\uB124\\uC784\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    },\n    __self: _this\n  }, ___EmotionJSX(Input, {\n    name: \"user-nickname\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    },\n    __self: _this\n  })), ___EmotionJSX(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    },\n    __self: _this\n  }, ___EmotionJSX(Input, {\n    name: \"user-password\",\n    type: \"Password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    },\n    __self: _this\n  })), ___EmotionJSX(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    },\n    __self: _this\n  }, ___EmotionJSX(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    },\n    __self: _this\n  }), passwordError && ___EmotionJSX(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 43\n    },\n    __self: _this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), ___EmotionJSX(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    },\n    __self: _this\n  }, ___EmotionJSX(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    },\n    __self: _this\n  }), \" \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\", termError && ___EmotionJSX(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    },\n    __self: _this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), ___EmotionJSX(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    },\n    __self: _this\n  }, ___EmotionJSX(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: signUpLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    },\n    __self: _this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n};\n\n_s(Signup, \"GUak2O29X2pqYx5T04HPByluhEw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useInput, useInput, useInput];\n});\n\n_c = Signup;\nexport var __N_SSP = true;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/HOME/Documents/ymillonga/front/pages/signup.js"],"names":["React","useCallback","useState","useEffect","Head","Form","Checkbox","Button","Input","AppLayout","useInput","useSelector","useDispatch","SIGN_UP_REQUEST","Router","Signup","dispatch","me","state","user","signUpLoading","signUpDone","signUpError","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","term","setTerm","termError","setTermError","id","alert","replace","onChangePasswordCheck","e","target","value","onChangeTerm","checked","onSubmit","type","data","span","required","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,MAA9C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAsD,kBAAtD;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACjB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAMK,EAAE,GAAGN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,EAAf;AAAA,GAAN,CAAtB;AACA,MAAMG,aAAa,GAAGT,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,aAAf;AAAA,GAAN,CAAjC;AACA,MAAMC,UAAU,GAAGV,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWE,UAAf;AAAA,GAAN,CAA9B;AACA,MAAMC,WAAW,GAAGX,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWG,WAAf;AAAA,GAAN,CAA/B;;AALiB,kBAOcZ,QAAQ,CAAC,EAAD,CAPtB;AAAA;AAAA,MAOVa,KAPU;AAAA,MAOHC,aAPG;;AAAA,mBAQoBd,QAAQ,CAAC,EAAD,CAR5B;AAAA;AAAA,MAQVe,QARU;AAAA,MAQAC,gBARA;;AAAA,mBASoBhB,QAAQ,CAAC,EAAD,CAT5B;AAAA;AAAA,MASViB,QATU;AAAA,MASAC,gBATA;;AAAA,kBAUyB1B,QAAQ,CAAC,EAAD,CAVjC;AAAA,MAUV2B,aAVU;AAAA,MAUKC,gBAVL;;AAAA,mBAWyB5B,QAAQ,CAAC,KAAD,CAXjC;AAAA,MAWV6B,aAXU;AAAA,MAWKC,gBAXL;;AAAA,mBAYO9B,QAAQ,CAAC,KAAD,CAZf;AAAA,MAYV+B,IAZU;AAAA,MAYJC,OAZI;;AAAA,mBAaiBhC,QAAQ,CAAC,KAAD,CAbzB;AAAA,MAaViC,SAbU;AAAA,MAaCC,YAbD;;AAejBjC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIc,EAAE,IAAIA,EAAE,CAACoB,EAAb,EAAiB;AACbC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACAxB,MAAAA,MAAM,CAACyB,OAAP,CAAe,GAAf,EAFa,CAEO;AACvB;AACJ,GALQ,EAKN,CAACtB,EAAE,IAAIA,EAAE,CAACoB,EAAV,CALM,CAAT;AAMAlC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIkB,UAAJ,EAAgB;AACZP,MAAAA,MAAM,CAACyB,OAAP,CAAe,QAAf;AACH;AACJ,GAJQ,EAIN,CAAClB,UAAD,CAJM,CAAT;AAKAlB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAImB,WAAJ,EAAiB;AACbgB,MAAAA,KAAK,CAAChB,WAAD,CAAL;AACH;AACJ,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;AAKA,MAAMkB,qBAAqB,GAAGvC,WAAW,CAAC,UAACwC,CAAD,EAAO;AAC7CX,IAAAA,gBAAgB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACAX,IAAAA,gBAAgB,CAACS,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmBhB,QAApB,CAAhB;AACH,GAHwC,EAGtC,CAACA,QAAD,CAHsC,CAAzC;AAKA,MAAMiB,YAAY,GAAG3C,WAAW,CAAC,UAACwC,CAAD,EAAO;AACpCP,IAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASG,OAAV,CAAP;AACAT,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAH+B,EAG7B,CAACT,QAAD,CAH6B,CAAhC;AAKA,MAAMmB,QAAQ,GAAG7C,WAAW,CAAC,YAAM;AAC/B,QAAI0B,QAAQ,KAAKE,aAAjB,EAAgCG,gBAAgB,CAAC,IAAD,CAAhB;AAChC,QAAI,CAACC,IAAL,EAAWG,YAAY,CAAC,IAAD,CAAZ;AACXpB,IAAAA,QAAQ,CAAC;AACL+B,MAAAA,IAAI,EAAElC,eADD;AAELmC,MAAAA,IAAI,EAAE;AACFzB,QAAAA,KAAK,EAALA,KADE;AACKI,QAAAA,QAAQ,EAARA,QADL;AACeF,QAAAA,QAAQ,EAARA;AADf;AAFD,KAAD,CAAR;AAMH,GAT2B,EASzB,CAACF,KAAD,EAAQI,QAAR,EAAkBE,aAAlB,EAAiCI,IAAjC,CATyB,CAA5B;AAUA,SACI,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,cAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,CADJ,EAII,oCACI,cAAC,IAAD;AACI,IAAA,IAAI,EAAC,aADT;AAEI,IAAA,QAAQ,EAAE;AAAEgB,MAAAA,IAAI,EAAE;AAAR,KAFd;AAGI,IAAA,UAAU,EAAE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAHhB;AAII,IAAA,MAAM,EAAC,YAJX;AAKI,IAAA,QAAQ,EAAEH,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,cAAC,IAAD,CAAM,IAAN;AACI,IAAA,KAAK,EAAC,oBADV;AAEI,IAAA,KAAK,EAAE,CACH;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADG,EAEH;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KAFG,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,cAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,IAAI,EAAC,OAA7B;AAAqC,IAAA,KAAK,EAAE3B,KAA5C;AAAmD,IAAA,QAAQ,MAA3D;AAA4D,IAAA,QAAQ,EAAEC,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAPJ,EAgBI,cAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,cAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,KAAK,EAAEC,QAAnC;AAA6C,IAAA,QAAQ,MAArD;AAAsD,IAAA,QAAQ,EAAEC,gBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhBJ,EAmBI,cAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,cAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,IAAI,EAAC,UAAjC;AAA4C,IAAA,KAAK,EAAEC,QAAnD;AAA6D,IAAA,QAAQ,MAArE;AAAsE,IAAA,QAAQ,EAAEC,gBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnBJ,EAsBI,cAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,uCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,cAAC,KAAD;AAAO,IAAA,IAAI,EAAC,qBAAZ;AAAkC,IAAA,IAAI,EAAC,UAAvC;AAAkD,IAAA,KAAK,EAAEC,aAAzD;AAAwE,IAAA,QAAQ,MAAhF;AAAiF,IAAA,QAAQ,EAAEW,qBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKT,aAAa,IAAI;AAAK,IAAA,KAAK,EAAE;AAAEoB,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAFtB,CAtBJ,EA0BI,cAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,cAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAElB,IAApC;AAA0C,IAAA,QAAQ,EAAEW,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,yDAETT,SAAS,IAAI;AAAK,IAAA,KAAK,EAAE;AAAEgB,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAFJ,CA1BJ,EA8BI,cAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,cAAC,MAAD;AACI,IAAA,IAAI,EAAC,SADT;AACmB,IAAA,QAAQ,EAAC,QAD5B;AAEI,IAAA,OAAO,EAAE/B,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CA9BJ,CADJ,CAJJ,CADJ;AA8CH,CAjGD;;GAAML,M;UACeH,W,EACND,W,EACWA,W,EACHA,W,EACCA,W,EAEWD,Q,EACMA,Q,EACAA,Q;;;KATnCK,M;;AAgHN,eAAeA,MAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport { Form, Checkbox, Button, Input } from 'antd';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport useInput from '../hooks/useInput';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIGN_UP_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport Router from 'next/router';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst Signup = () => {\r\n    const dispatch = useDispatch();\r\n    const me = useSelector(state => state.user.me);\r\n    const signUpLoading = useSelector(state => state.user.signUpLoading);\r\n    const signUpDone = useSelector(state => state.user.signUpDone);\r\n    const signUpError = useSelector(state => state.user.signUpError);\r\n\r\n    const [email, onChangeEmail] = useInput('');\r\n    const [nickname, onChangeNickname] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [term, setTerm] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (me && me.id) {\r\n            alert('로그인 중입니다. 메인페이지로 이동합니다.');\r\n            Router.replace('/');//push는 뒤로가기 하면 히스토리가 남아있지만 replace는 지워짐\r\n        }\r\n    }, [me && me.id]);\r\n    useEffect(() => {\r\n        if (signUpDone) {\r\n            Router.replace('/login');\r\n        }\r\n    }, [signUpDone]);\r\n    useEffect(() => {\r\n        if (signUpError) {\r\n            alert(signUpError);\r\n        }\r\n    }, [signUpError]);\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordCheck(e.target.value);\r\n        setPasswordError(e.target.value !== password);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked);\r\n        setTermError(false);\r\n    }, [password]);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        if (password !== passwordCheck) setPasswordError(true);\r\n        if (!term) setTermError(true);\r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: {\r\n                email, password, nickname\r\n            }\r\n        })\r\n    }, [email, password, passwordCheck, term]);\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>회원가입 | Ymillonga</title>\r\n            </Head>\r\n            <>\r\n                <Form\r\n                    name=\"signup-form\"\r\n                    labelCol={{ span: 6 }}\r\n                    wrapperCol={{ span: 14 }}\r\n                    layout=\"horizontal\"\r\n                    onFinish={onSubmit}\r\n                >\r\n                    <Form.Item\r\n                        label=\"이메일\"\r\n                        rules={[\r\n                            { type: 'email', },\r\n                            { required: true, },\r\n                        ]}\r\n                    >\r\n                        <Input name=\"user-name\" type=\"email\" value={email} required onChange={onChangeEmail} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"닉네임\">\r\n                        <Input name=\"user-nickname\" value={nickname} required onChange={onChangeNickname} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"비밀번호\">\r\n                        <Input name=\"user-password\" type=\"Password\" value={password} required onChange={onChangePassword} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"비밀번호 확인\">\r\n                        <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordCheck} />\r\n                        {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>}\r\n                    </Form.Item>\r\n                    <Form.Item >\r\n                        <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm} /> 약관에 동의합니다.\r\n          {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\r\n                    </Form.Item>\r\n                    <Form.Item >\r\n                        <Button\r\n                            type=\"primary\" htmlType=\"submit\"\r\n                            loading={signUpLoading}\r\n                        >가입하기</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        </AppLayout>\r\n    );\r\n};\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n\r\n    await context.store.sagaTask.toPromise();\r\n});\r\nexport default Signup; "]},"metadata":{},"sourceType":"module"}